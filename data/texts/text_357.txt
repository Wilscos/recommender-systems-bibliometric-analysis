Social recommendation task aims to predict users’ preferences over items with the incorporation of social connections among users, so as to alleviate the sparse issue of collaborative ﬁltering. While many recent efforts show the effectiveness of neural network-based social recommender systems, several important challenges have not been well addressed yet: (i) The majority of models only consider users’ social connections, while ignoring the inter-dependent knowledge across items; (ii) Most of existing solutions are designed for singular type of user-item interactions, making them infeasible to capture the interaction heterogeneity; (iii) The dynamic nature of user-item interactions has been less explored in many social-aware recommendation techniques. To tackle the above challenges, this work proposes a Knowledge-aware Coupled Graph Neural Network (KCGN) that jointly injects the inter-dependent knowledge across items and users into the recommendation framework. KCGN enables the highorder user- and item-wise relation encoding by exploiting the mutual information for global graph structure awareness. Additionally, we further augment KCGN with the capability of capturing dynamic multi-typed user-item interactive patterns. Experimental studies on real-world datasets show the effectiveness of our method against many strong baselines in a variety of settings. Source codes are available at: https://github.com/xhcdream/KCGN. In recent years, social recommendation which aims to exploit users’ social information for modeling users’ preferences in recommendations, has attracted signiﬁcant attention (Liu et al. 2019). As has been stated in many socialaware recommendation literature (Wu et al. 2019a; Chen et al. 2019b), social inﬂuences between users have high impacts on users’ interactive behavior over items in various recommender scenarios, such as e-commence (Lin, Gao, and Li 2019) and online review platforms (Chen et al. 2020a). Hence, researchers propose to incorporate social ties into Both authors contribute equally to this work Corresponding author: Yong Xu Copyright © 2021, Association for the Advancement of Artiﬁcial Intelligence (www.aaai.org). All rights reserved. Peng Cheng Laboratory, China the collaborative ﬁltering architecture as side information to characterize connectivity information across users. The most common paradigm for state-of-the-art social recommender systems is to learn an embedding function, which uniﬁes user-user and user-item relations into latent representations. To tackle this problem, many studies have developed various neural network techniques to integrate social information with the user-item interaction encoding as constraints. For example, attention-based mechanism has been utilized to aggregate correlations among different users (Chen et al. 2019a,b). Furthermore, inspired by the recent advance of graph neural architectures, several attempts are built upon the message passing frameworks over the user-user social graph. For example, social inﬂuence is simulated with layer-wise diffusion scheme for information fusion (Wu et al. 2019a). GraphRec (Fan et al. 2019) employs the graph attention network to model the relational structures between users. To enable the modeling context-aware social effects, DANSER (Wu et al. 2019b) stacks two-stage of graph attention layer for distinguishing the multi-faceted social homophily and inﬂuence. While these solutions have provided encouraging results, several key aspects have not been well addressed yet. In particular, First, in real-life scenarios, there typically exist relations between items which characterize item-wise fruitful semantics relatedness, and are helpful to understand useritem interactive patterns (Wang et al. 2019a). For instance, in online retailing systems, products of the same categories (e.g., food & grocery, clothing & shoes) or complement with each other, could be correlated to enrich the knowledge representation of items (Xin et al. 2019). For online review platforms, the exploiting of dependencies among the venues with the same functionality, is able to provide external knowledge in assisting user preference learning (Yu et al. 2019). However, the majority of existing social recommender systems fail to capture item-wise relational structures, which can hardly distill the knowledge-aware collaborative signals from the co-interactive behaviors of users. Second, to simplify the model design, most of current social recommendation methods have thus far focused on modeling singular type of interactive relations between user and item. Yet, many practical recommendation scenarios may involve the diversity of users’ interaction over items (Cen et al. 2019; Xia et al. 2020). Take the e-commerce site as an example, the effective encoding of multi-typed user-item interactive patterns (e.g., page view, add-to-favorite and purchase) and their underlying inter-dependencies (e.g., add-tofavorite activities may serve as useful indicators for making purchase decisions), is crucial to more accurately inference of user’s complex interest in social recommendation tasks. Third, the time dimension of the social recommendation deserves more investigation, so as to capture behavior dynamics. Most of recent approaches ignore the dynamic nature of user-item interactions and assume that the factor inﬂuencing the interactive behavior is only the identity of items (Song et al. 2019). While there exist a handful of recent work that consider the sequential information in social recommendation (Song et al. 2019; Sun, Wu, and Wang 2018), their are limited in their intrinsic design for singular type of user-item relations. This makes them insufﬁcient to yield satisfactory embeddings with the preservation of different interaction signals in a dynamic manner for more complex scenarios. While intuitively useful to integrate the above dimensions into social recommendation frameworks, two unique technical challenges arise in achieving this goal. Speciﬁcally, graph-structured neural network can be applied to naturally model the topological information of social node instances, such as the graph-based convolutional network (Wu et al. 2019a) or attention mechanism (Wu et al. 2019b; Fan et al. 2019). However, their non-linear aggregation functions can only learn the local proximity between users and are incapable of capturing the broader context of the graph structure (e.g., users with the isomorphic social structures) (You, Ying, and Leskovec 2019). Hence, how to jointly capture knowledge-aware user-user and item-item local relations, as well as retain the high-order social inﬂuence and item dependencies under global context, remains a signiﬁcant challenge. Additionally, it is also very challenging to handle the dynamic multi-typed user-item interactions, so as to capture the dynamic relation-aware structural dependencies across users and items with arbitrary duration. The Present Work. In light of the aforementioned motivations and challenges, we study the social recommendation problem by proposing the Knowledge-aware Coupled Graph Neural Network (KCGN). To jointly deal with the user-user and item-item local and global relational structure awareness, we incorporate the mutual information estimation schema into the coupled graph neural architecture. This design enables the collaboration between neural mutual information estimator and graph-structured representation learning paradigm, which preserves the node-level unique characteristics and graph-level substructure knowledge across users and items. In addition, to capture the dynamic multi-typed interactive patterns, we integrate a relation-aware message passing framework with the relative temporal encoding strategy, which endows KCGN with the capability of incorporating the temporal information into the multi-typed user-item interaction graph learning. Our contributions can be highlighted as follows: • We propose to capture both user-user and item-item relations with the developed coupled graph neural network. Through the joint modeling of user- and item-wise dependent structures, our KCGN can enhance the social-aware user embeddings with the preservation of knowledgeaware cross-item relations in a more thorough way. • We propose a relation-aware graph neural module to encode the multi-typed user-item interactive patterns, and further incorporate the temporal information into the message passing kernel to enhance the learning of collaborative relations for recommendation. • We conduct extensive experiments on three real-world datasets to show the superiority of our KCGN when competing with several baselines from various research lines. Further studies on scalability evaluation validate the model efﬁciency of KCGN over state-of-the-art social recommender systems. We also show that our model maintains strong performance in the cold-start scenarios when user-item interactions are sparse. We ﬁrst introduce key deﬁnitions of social recommendation with item relational knowledge and different types of useritem interactions. We consider a typical recommendation scenario, in which we have I users U = {u, ..., u, ..., u} and J items V = {v, ..., v, ..., v}. To capture the multityped user-item interaction signals, we deﬁne a multi-typed interaction tensor as below: Deﬁnition 1 Multi-typed Interaction Tensor X. We deﬁne a three-way tensor X ∈ Rto represent the different types of interactions between user and item, where K (indexed by k) denotes the number of interaction types (page view, purchase, or like, dislike). In X, the element x= 1 if user uinteracts with item vwith the interaction type of k and x= 0 otherwise. To deal with the interaction dynamics, we also deﬁne a temporal tensor T ∈ Rwith the same size of X to record the timestamp information (t) of each corresponding interaction x. Deﬁnition 2 User Social Graph G. G= {U, E} represents the social relationships (edges E) among users (nodes U), where there exists an edge ebetween user u and ugiven they are socially connected. Deﬁnition 3 Item Inter-Dependency Graph G. We further deﬁne G= {V, E} to represent the inter-dependence of items. In particular, we characterize the item-wise relations with a triple {v, e, v|v, v∈ V }, where edge edescribes the relationship between item vand v, e.g., vand vbelong to the same product categories and have similar functionality, or are interacted by the same user under the same interaction type of k. Task Formulation. We formulate the studied recommendation task in this paper as: Input: multi-typed interaction tensor X ∈ R, user social graph Gand item interdependence graph G. Output: a predictive function that effectively forecasts the future user-item interaction. Figure 1: The architecture of the multi-typed interactive pattern modeling. ⊕ denotes the element-wise addition. To encode the multi-typed collaborative relations, we propose a relation-aware graph neural architecture, which is built upon the message passing paradigm (as shown in Figure 1), to empower KCGN to capture the dedicated patterns of different types of user-item interactions. Speciﬁcally, given the multi-typed interaction tensor X, we ﬁrst construct a multi-typed relation graph Gby representing the interaction heterogeneity with type-speciﬁc item subvertices v→ (v, ..., v, ..., v), where K denotes the number of interaction types. Each edge between uand v represents the corresponding interaction with the k-th type. After that, there are (I + J · K) vertices in our multi-typed graph G= (V, E), where V= U ∪ Vand v∈ V. Here, Vis the new type-aware item set. Message Construction Phase. We ﬁrst generate the message between user vertex uand his/her interacted typespeciﬁc item vertex vas follows: m= γ(h, ρ); m= γ(h, ρ where γ(·) denotes the information encoding function over the input feature embeddings h∈ R, h∈ R. ρis the decay factor to normalize the propagated inﬂuence with node degrees (Chen et al. 2020b), i.e., ρ =√, where Ndenotes the number of neighboring nodes of user uand Nrepresents the number of connected user nodes of item vunder the relation type of k. Hence, the constructed message can be unfolded as: where W∈ Ris the weight matrix. We apply the similar operation for the message propagation from uto typespeciﬁc item v. Temporal Context Encoding Scheme. Inspired by the recommendation techniques with the modeling of temporal information (Sun et al. 2019; Huang et al. 2019), in our framework, we allow the user-item interactions happening at different timestamps interweave with each other, by introducing a temporal context encoding scheme to model the dynamic dependencies across different types of users’ interactions. Motivated by the positional encoding algorithm in Transformer architecture (Vaswani et al. 2017; Sun et al. 2019; Wu et al. 2020), we map the timestamp tof individual interaction xinto separate time slot as:eT (t). We employ the sinusoid functions to generate the relative time embedding for edge e∈ Ein Gas: where (2i) and (2i + 1) denotes the element index with the even and odd position in embedding b, respectively. High-Order Message Aggregation Phase. We incorporate the propagated message between user uand item v, as well as temporal context bon their interaction edge e, into our information propagation paradigm as below: where ϕ(·) denotes the LeakyReLU function to perform the transformation. mis the self-propagated message with the weight matrix W∈ R. ⊕denotes the element-wise addition. l is the index of L graph layers. We ﬁnally generate the user/item embeddings (i.e., h, h) with the following concatenation operation k as follows: We generate the summarized representation hover all item sub-vertex embeddings h(k ∈ [1, ..., K]) with a gating mechanism (Ma, Kang, and Liu 2019), to differentiate the importance of type-speciﬁc interaction patterns. Knowledge-aware Coupled Graph Neural Module To jointly inject the user- and item-wise inter-dependent knowledge into our user preference modeling, we develop a knowledge-aware coupled graph neural network which enables the collaboration between the mutual information learning and graph representation paradigm. While many efforts have been devoted to modeling graph structural information, they are limited in their ability in capturing both local and global graph substructure awareness (Velickovic et al. 2019), such as the user- and item-speciﬁc social/knowledge dependent information and high-order relationships across users/items. KCGN is equipped with a dualstage graph learning paradigm (As shown in Figure 2). Figure 2: The architecture of joint encoding of user-user and item-item inter-dependent relational structures. Local Relational Structure Modeling. We ﬁrst learn the user- and item-speciﬁc speciﬁc embeddings (z, z) which preserves the local connection information over user social graph Gand item inter-dependent graph Gwith the following graph-based update functions (z=h, z= h): [z, ..., z] = ϕ[z, ..., z] · η(G) [z, ..., z] = ϕ[z, ..., z] · η(G)(6) where η(·) denotes the adjacent relations of Gand G with the symmetric normalization strategy in the information aggregation across the neighboring users/items, e.g., η(G) =ˆDˆAˆD. Hence,ˆAis the addition of identity matrix Iand adjacent matrix A, so as to incorporate the information self-propagation (Chen et al. 2020b). In this graph learning paradigm, we aim to inject both local- and global-level relational structures over the user social graph and item relation graph into our learned user/item representations. Different from the existing graph neural network approaches (Velickovic et al. 2019; Xu et al. 2020) which model the mutual relations between local feature embeddings and a single global representation, we enrich the global semantics with the consideration of connected graph substructures (e.g., the entire social relations of all users may consist of different connected sub-graphs G). In particular, we ﬁrst generate a fused graph-level representation f, f∈ Rby applying the mean pooling over nodespeciﬁc embeddings. We design our neural mutual information estimator based on a discriminator D(x, y) for node-graph pairwise relationships, to provide probability scores for sampled pairs. To be speciﬁc, we generate positive samples as (z, f), (z, f), and negative samples as (ez, f), (ez, f). Here,ezandezare randomly picked with node shufﬂing to generate the misplaced node-graph pairwise relations. Due to the rationality of cross-entropy in mutual information maximization (Wang et al. 2020), we deﬁne our noisecontrastive knowledge-aware loss function Las follows: where N/Nand N/Ndenotes the number of positive and negative instances sampled over sub-graph G and G. τ (·) is an indicator function, e.g., τ (z, f) = 1 and τ(ez, f) = 1 corresponds to the positive and negative pair instances. λand λare balance parameters. We aim to minimize Lwhich is equivalent to maximize the mutual information, to jointly preserve the node-speciﬁc user/item characteristics and global graph-level dependencies. Model Optimization We deﬁne our loss L which includes (i) multi-typed useritem interaction encoding; (ii) knowledge-aware user-user and item-item inter-dependent relation learning. Particularly, L integrates the pairwise BPR loss, which is widely adopted in recommendation tasks (Wang et al. 2019c), with the mutual information maximization paradigm as: L =−In σ(bx− bx) + λ k Θ k+L(8) {(u, j, j)|(u, j) ∈ R, (u, j) ∈ R} (R, R denotes the observed and unobserved interactions, respectively). bxis the calculated score with the inner-product between the embedding of uand v. Θ are trainable parameters, σ(·)–sigmoid. λ controls the strength of Lregularization for overﬁtting alleviation. Time Complexity Analysis. KCGN takes O(|E| × d) for the message passing in handling the user-user, user-item and item-item relations, where |E| denotes the number of edges. Also, O((I + J · K) × d) computation is spent by the transformations. Typically, the ﬁrst term is dominant due to information compression. In conclusion, KCGN is comparable in time efﬁciency compared with current GNN-based recommendation methods. Our model only utilizes moderate memory to store node embeddings (O((I + J ·K) ×d)), which is similar to the existing methods. In this section, we conduct experiments on different realworld datasets to evaluate the performance of our method from the following aspects: • RQ1: Does KCGN consistently outperform other baseline in terms of recommendation accuracy? Table 1: Statistics of Experimented Datasets. • RQ2: How is the performance of KCGN’s variants with the combination of different relation encoders? • RQ3: How is forecasting performance of compared methods w.r.t different interaction density degrees? • RQ4: How do the representations beneﬁt from the collectively encoding of global knowledge-aware crossinteractive patterns in social recommendation? • RQ5: How do different hyper-parameter settings impact the performance of our KCGN framework? • RQ6: How is the model efﬁciency of the KCGN? Experimental Settings Dataset. Table 1 lists the statistics of three datasets. We describe the details of those datasets as follows: Epinions. This data records the user’s feedback over different items from a social network-based review system Epinions (Fan et al. 2019). Each explicit rating score (ranging from 1 to 5) is regarded as an individual type of interaction: negative, below average, neutral, above average, positive. Yelp. This data is collected from the Yelp platform, in which user-item interactions are differentiated with the same split rubric in Epinions. Furthermore, user’s social connections (with common interests) are contained in this data. E-Commerce. It is collected from a commercial ecommerce platform with different types of interactions, i.e., page view, add-to-cart, add-to-favorite and purchase. User’s relations are constructed with their co-interact patterns. The item inter-dependency graph Gon the above datasets are constructed based on item categories. Evaluation Protocols. We adopt two widely used evaluation metrics for social recommendation tasks (Chen et al. 2019a): Hit Ratio (HR@N ) and Normalized Discounted Cumulative Gain (NDCG@N). We follow the evaluation settings in (Chen et al. 2019b; Wu et al. 2019a) and employ the leave-one-out method for generating training and test data instances. To be consistent with (Sun et al. 2019), we associate each positive instance with 99 negative samples. Baselines. In our experiments, we perform the performance comparison by considering the following baselines: Probabilistic Matrix Factorization Method. • PMF (Mnih and et al 2008): it is a probabilistic approach with the matrix factorization for user/item factorization. Conventional Social Recommendation Methods. • TrustMF (Yang et al. 2016): this method incorporates the truth relationships between users into the matrix factorization architecture for user interaction embedding. Attentive Social Recommendation Techniques. • SAMN (Chen et al. 2019a): this model is a dual-stage attention network which learns the inﬂuences between the target user and his/her neighboring nodes. • EATNN (Chen et al. 2019b): This transfer learning model is also on the basis of attention mechanism to jointly fuse information from user’s interactions and social signals. Graph Neural Networks Social Recommender Systems. • DiffNet (Wu et al. 2019a): it is a deep inﬂuence propagation framework to model the social diffusion process. • GraphRec (Fan et al. 2019): it aggregates the social relations between users via a graph neural architecture. • NGCF+S (Wang et al. 2019c): we incorporate the social ties into the state-of-the-art graph-structured neural collaborative ﬁltering model for joint message propagation. • Danser (Wu et al. 2019b): it is composed of two graph attention layers for capturing the social inﬂuence and homophily, respectively from both users and items. • LR-GCCF (Chen et al. 2020b): it is a new graph-based collaborative ﬁltering model based on graph convolutional network by removing non-linear transformations. Social Recommendation with Sequential Pattern. • DGRec (Song et al. 2019): it jointly models the dynamic user’s preference and the underlying social relations. Knowledge Graph-enhanced Recommendation. • KGAT (Wang et al. 2019b): it is a graph attentive message passing framework which utilizes the knowledge graph to enhance the recommendation with item side information. Implementation Details. The KCGN is implemented with Pytorch and Adam optimizer is adopted for hyperparameter estimation. The training process is performed with the learning rate range of [0.001, 0.005, 0.01], and the batch size selected from [1024, 2048, 4096, 8192]. The embedding size is tuned from the range of [8, 16, 32, 64]. In our evaluations, we employ the early stopping for training termination when the performance degrades for 5 continuous epochs on the validation data. Overall Model Performance Comparison (RQ1) Table 2 reports the results of KCGN and many baselines in predicting the overall interactions in terms of HR@10 and NDCG@10. It can be seen that KCGN consistently obtains the best performance across different recommendation scenarios in terms of two metrics, which justiﬁes the effectiveness of our method in integrating user-user and item-item relations, with the multi-typed user-item interactive patterns. Compared with traditional approaches, neural network based models usually achieve better performance, due to the modeling of high-level non-linearities during the feature interaction learning phase. Among various compared approaches, the GNN-based models outperforms the attentive social recommender systems, which ascertains the rationality of applying graph neural networks for high-order relations across users/items in a recursive way. Different from those GNN techniques, our framework integrates the social and knowledge-aware relations from global context via a mutual information encoding paradigm, and also captures Data Metrics DiffNet DGRec KGAT GraphRec Danser KCGN Epinions Table 3: Prediction results for like/purchase activities on three datasets in terms of HR@10 and NDCG@10. interaction dynamics, which results in better performance. We further investigate the performance of our KCGN in making recommendations on the target type of interactions (e.g., positive feedback on Epinions and Yelp or user’s purchase on E-commerce). The results are shown in Table 3. We can observe that KCGN still achieves signiﬁcant improvement, with the careful consideration of different types of user-item interaction signals. While the baseline KGAT proposes to incorporate the auxiliary knowledge graph, it fails to explicitly differentiate type-speciﬁc interaction patterns. Impact of Different Relation Encoders (RQ2) We next perform experiments to evaluate the impact of the incorporation of multi-typed user-item interactions, userwise relations, item-wise dependencies, and the temporal context, with the following ﬁve contrast variants of KCGN. • KCGN-M: KCGN without modeling multi-typed interaction patterns and only with singular-type interactions. • KCGN-U: KCGN without the social relation encoder for capturing the social signals in the recommendation. • KCGN-I: KCGN without the external knowledge to characterize the item dependency. • KCGN-UI: KCGN without both the user- and item-wise relation encoders and remove the coupled mutual information paradigms in the joint learning framework. • KCGN-T: KCGN without the temporal context encoding. Figure 3 shows the comparison results of different variants. We can see that the joint model KCGN achieves the best performance. As such, it is necessary to build a joint framework to simultaneously capture social dimension (users’ social inﬂuence), item dimension (knowledgeaware inter-item relations), multi-typed interactions, and time-aware user’s interest, for making recommendations. In addition, KCGN-UI performs worse than KCGN-U and KCGN-I, which again conﬁrms the efﬁcacy of our designed relation aggregation functions. Figure 3: Ablation studies for different sub-modules of KCGN framework, in terms of HR@10 and NDCG@10. Figure 4: Performance of KCGN and baselines over users with different sparsity from Yelp and E-Commerce data. Performance over Sparsity Degrees (RQ3) One key motivation to exploit social- and knowledge-aware side information is to alleviate the sparsity issue, which limits the model robustness. Hence, we further evaluate our KCGN for both inactive and active users. In particular, we partition the target users into four sparsity levels in terms of their interaction densities. Figure 4 presents the evaluation results on different user groups on Yelp and E-Commerce data in terms of NDCG@10. We can observe that KCGN outperforms representative baselines in most cases, especially on sparest user groups. This suggests that incorporating both user and item side knowledge as their external relations, empowers the representations of inactive users through our recursive information aggregation architecture. Qualitative Analyses of KCGN (RQ4) We illustrate how our side knowledge-aware multi-typed relation encoding schema beneﬁt the ability of embedding user’s preference into the latent learning space. In particular, we sample several users and their four- and ﬁve-star rated items from Yelp dataset, and further visualize the corresponding user/item embeddings learned by NGCF+S and our KCGN (as shown in Figure 5). From the results, we can Figure 5: Visualized embeddings for users (stars) and their 4- or 5-rated item (circles), learned by KCGN and NGCF+S. Figure 6: Hyper-parameter study of KCGN notice that: i) the visualized embeddings could well preserve the relationships between users and their interacted items with a clustering phenomenon (represented with the same color); ii) KCGN could provide a better separation for different users and their interacted items. Hence, the above observations verify the superior representation learning ability of KCGN through the encoding function which maps the side knowledge and interaction units into effective latent space. Parameter Sensitivity Study (RQ5) Impact of # Recursive Graph Layers. Figure 6 shows the experimental results with different number of embedding propagation layers over user-item interaction graph. We can observe that increasing the depth of KCGN could boost the performance, i.e., KCGN-2 performs better than KCGN-0 (without the graph structure) and KCGN-1 (only consider 1-hop neighbors). The performance improvement lies in the effective modeling of high-order collaborative effects across users and items. KCGN with 3 graph layers performs worse than KCGN-2, suggests that exploring higher-level relations may involve noise. Impact of Embedding Dimension. We notice that the accuracy is initially improved with larger embedding size due to the stronger representation ability. However, the performance degrades with the further increase of dimensionality, which indicates the overﬁtting phenomenon. Model Efﬁciency Study (RQ6) We ﬁnally investigate the computation cost of our KCGN when competing with state-of-the-art baselines. As shown in Table 4, we can observe that KCGN achieves competitive time efﬁciency (measured by running time of each epoch) when compared with neural social recommendation meth- Table 4: Model computational cost with running time (s). ods. It is worthwhile pointing out that methods with stacking multiple graph attention layers is time-consuming, due to their pairwise attentive weights calculations for social or knowledge graph information aggregation. Social-aware Recommender Systems. Deep learning has been revolutionizing recommender systems and many neural network models have been proposed for social recommendation scenario (Yin et al. 2019; Chen et al. 2020a). For example, attention mechanisms are introduced to learn the inﬂuences between users, such as SAMN (Chen et al. 2019a) and EATNN (Chen et al. 2019b). It is worth mentioning that several recent efforts explore the GNNs for incorporating social relations into the user-item interaction encoding (Wu et al. 2019b; Fan et al. 2019; Wu et al. 2019a; Xu et al. 2020). Different from these methods, KCGN focus on fusing the heterogeneous relations from different aspects (social, item knowledge and temporal), to boost the performance. Graph Methods for Recommendation. Many recent efforts have been devoted to exploring insights from GNNs for modeling collaborative signals in recommender systems. For example, inspired by the graph convolutional operations, PinSage (Ying et al. 2018) and NGCF (Wang et al. 2019c) aim to aggregate high-hop neighboring feature information over the user-item interaction graph. Several subsequent extensions have been developed to revisit the graphbased CF effects, such as LightGCN (He et al. 2020), LRGCCF (Chen et al. 2020b) and KHGT (Xia et al. 2021). Motivated by these works, we propose a new knowledge-aware graph neural architecture for social recommendation. In this paper, we propose KCGN, an end-to-end framework that naturally incorporates knowledge-aware item dependency into the social recommender systems. KCGN uniﬁes the user-user and item-item relation structure learning with a coupled graph neural network under a mutual informationbased neural estimator. To handle the dynamic user-item interaction heterogeneity, we design a relation-aware graph encoder to empower KCGN to maintain dedicated representations of multi-typed interaction signals with the incorporation of temporal information. Through extensive experiments on real-world datasets, we demonstrate that KCGN achieves substantial gains over state-of-the-art baselines. We thank the anonymous reviewers for their constructive feedback and comments. This work is supported by National Nature Science Foundation of China (62072188, 61672241), Natural Science Foundation of Guangdong Province (2016A030308013), Science and Technology Program of Guangdong Province (2019A050510010).
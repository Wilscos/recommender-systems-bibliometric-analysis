Andr´e Greiner-Petter of Standards and Technology, Mission Viejo, CA 92694, U.S.A., howard.cohl@nist.gov MathML has the ability to represent presentational and content information. Several optional features and markup options make MathML a highly versatile, but complex format. MathML’s ability to mix presentation and content markup for an expression (hereafter called fully descreptive MathML) makes MathML increasingly important for mathematical digital libraries. For example, Listing 1 shows a simple example of a cross-referenced parallel markup MathML document generated from the L string \frac{a}{b}. sortium since 1998, has been an ISO standard (ISO/IEC 40314) since 2015, and is Preprint from https://www.gipp.com/pub/ A. Greiner-Petter et al. “MathTools: An Open API for Convenient MathML Handling”. In: Proceedings of the 11th International Conference on Intelligent Computer Mathematics (CICM). Ed. by F. Rabe et al. Vol. 11006. Springer, 2018. doi: 10.1007/978-3-319-96812-4\_9 Applied and Computational Mathematics Division, National Institute Abstract.Mathematical formulae carry complex and essential semantic information in a variety of formats. Accessing this information with different systems requires a standardized machine-readable format that is capable of encoding presentational and semantic information. Even though MathML is an official recommendation by W3C and an ISO standard for representing mathematical expressions, we could identify only very few systems which use the full descriptiveness of MathML. MathML’s high complexity results in a steep learning curve for novice users. We hypothesize that this complexity is the reason why many community-driven projects refrain from using MathML, and instead develop problem-specific data formats for their purposes. We provide a user-friendly, open-source application programming interface for controlling MathML data. Our API is written in JAVA and allows to create, manipulate, and efficiently access commonly needed information in presentation and content MathML. Our interface also provides tools for calculating differences and similarities between MathML expressions. The API also allows to determine the distance between expressions using different similarity measures. In addition, we provide adapters for numerous conversion tools and the canonicalization project. Our toolkit facilitates processing of mathematics for digital libraries, without the need to obtain XML expertise. Although MathML is an official recommendation of the World Wide Web Conalso part of HTML5, it is still a rarely used format. For example, the prominent browser Microsoft Internet Explorer supported MathML only in version 24 and dropped it again in newer versions in favor of MathJax use fully descriptive MathML. Most databases use basic MathML instead, such as the DLMF [4] that only provides presentational MathML. Numerous tools that process math allow MathML as an input or export format. Most of these tools avoid MathML as an internal data representation. Instead, many systems create their own problem-specific data representation and implement custom tools to parse MathML for internal processing. This workaround causes problems in regard to reusability, restricts applicability, and decreases efficiency for processing mathematics. MathML data is an error-prone endeavor. Even small changes, such as missing default namespaces, can cause the parsing process to fail. complexity and simplifies the access to MathML data. MathTools also contains an open API for easy access to useful services that we used in several of our previous projects, such as for similarity calculations or for L tools [3, 10, 11, 13, 17, 18, 19, 20, 21]. The tools we have developed are able to parse fully descriptive MathML and to a certain degree, invalid MathML. Furthermore, we provide easy access to several useful features implemented in MathML related projects. These features include similarity metrics, distance calculations, and Java imports for state-of-the-art conversion tools. Many digital libraries do not use MathML but favor their custom internal formats to process mathematics. The conversion tool L The mention of specific products, trademarks, or brand names is for purposes of identification only. Such mention is not to be interpreted in any way as an endorsement or certification of such products or brands by the National Institute of Standards and Technology, nor does it imply that the products so identified are necessarily the best available for the purpose. All trademarks mentioned herein belong to their respective owners. https://bugs.chromium.org/p/chromium/issues/detail?id=152430#c43 Listing 1. Parallel markup MathML with examples of cross-references. <math><semantics> <mfrac id=”p.2” xref=”c.1”> <mi id=”p.1” xref=”c.2”>a</mi> <mi id=”p.3” xref=”c.3”>b</mi></mfrac> <annotation−xml encoding=”MathML−Content”><apply> <divide id=”c.1” xref=”p.2”/> <ci id=”c.2” xref=”p.1”>a</ci> <ci id=”c.3” xref=”p.3”>b</ci></apply></annotation−xml> <annotation enco ding=”application/x−tex”>\frac{a}{b}</annotation> </semantics></math> During our research of a MathML benchmark [19], we realized that parsing With MathTools, we provide a collection of tools that overcomes the issues of tion and content MathML using L to MathML, L a post-processing step. The Speech Rule Engine (SRE) implemented in MathJax [2] is able to translate presentation MathML expressions to speech. Translations of the SRE ause a set of rules that are applied to a nonstandard tree representation of the original MathML input. Computer Algebra Systems (CAS) allow for complex computations of mathematical expressions. These systems usually create their own internal data format, but typically allow for MathML export. For example, the CAS MAPLE parses inputs to a directed acyclic graph (DAG) presentation [1, Chapter 2], whereas Mathematica uses a custom tree representation [22, Chapter 33]. tomized implementations for parsing MathML. Examples of such tools include MathMLCan [5], a canonicalization tool for MathML data; the Visualization of Mathematical Expression Trees (VMEXT) [21] for MathML data; and dependency graphs [8] for analyzing relationships between math expressions. We provide MathTools, a collection of tools for convenient handling of MathML data and an open Java API to access useful services related to MathML data. MathToolsallows to parse, manipulate, and analyze fully descriptive MathML data conveniently. We haven chosen Java to realize MathTools, because the majority of related work is also implemented in Java. Java also is the most frequently used programming language. The source of this project is publicly available on GitHub and on maven-central under an Apache 2 license. the main functionality. Figure 1 illustrates possible workflows for processing the input and shows the interaction of different modules. The ing, loading, storing, and manipulating presentation and content MathML data. The core of supported operations include splitting presentation and content trees; accessing original T from the data. The Such features include cross-references or entire content subtrees. This functionality is particularly helpful for obtaining simple MathML for testing and learning purposes. for typical use cases related to processing MathML data. MathTools contains the following modules. Gold: comfortable interface to MathML gold standards within Java. The module uses Plain Old Java Objects (POJOs) for representing entries of the gold standard. The gold module can be used to implement benchmarks that use MathML. Converters: state-of-the-art conversion tools. We implemented a Java interface for each supported https://github.com/ag-gipp/MathMLTools There are other tools that internally use MathML in combination with cus- The project is organized in multiple modules, of which thecoremodule provides also provides helper functions for easy access to specific information. Examples EX data if available; and extracting all of the identifiers, e.g.,miorcielements We equipped MathTools with several extra modules, which we consider useful is part of the MathMLBen project [19], whose purpose is to provide a tool and the MathMLCan [5] that allows canocalization of the tool’s outputs. The module allows to: (1) embed uniform MathML data into translation workflows; (2) conveniently change the translation engines; (3) add new conversion tools to the API. Libraries: elements in MathML data. Due to the XML structure of MathML documents, MathTools uses data query languages to access specific elements. The module can be used to reliably query data from MathML documents independently of programming languages. Similarity: documents. Comparing MathML data is a common task for many mathematical information retrieval systems, e.g., for mathematical search engines and for plagiarism detection systems that analyze mathematical expressions as well as for many evaluation and benchmark scenarios. All measures included in the module, except the tree edit distance, produce histograms for MathML elements using the names of the elements and their accumulated frequency of occurrence. Frequency histograms of MathML elements have been successfully applied as part of plagiarism detection methods to determine the similarity of mathematical expressions, see [10, 11] for a more detailed explanation. We implemented the following similarity measures. • Histogram Distance: • Tree Edit Distance: latex2mathmllatex2mathml MathematicalMathematical Fig. 1. the general workflow for processing a MathML input to a valid MathML output. The converters also allow mathematical L MathML input. The gold module provides valid MathML without the core module. Distances and similarities can be calculated using the similarity module. Single elements or subtrees from valid MathML can be accessed through the core module. is a collection of reliable XPath and XQuery expressions for accessing tograms formed from MathML data. A small histogram distance indicates semantic similarity between MathML expressions. to transform one MathML tree into another. The user can control the weights for insertions, deletions, and renaming of elements. We use an implementation of RTED [14] to perform these calculations. Tree edit distances are helpful for detecting structural changes of MathML trees. MathToWebMathToWebHistogramHistogram SnuggleTeXSnuggleTeXDistancesDistances TeXZillaTeXZillaCosineCosine PoM-TaggerPoM-TaggerSimilaritySimilarityGOLD The pipeline schema of MathTools and the modules. The orange arrow indicates • Earth Mover Distance (EMD): • Cosine Similarity: Note that EMD and Cosine similarity can be used for entire documents. In this case, the histograms are an accumulation of all MathML expressions in the document. In this scenario, EMD and Cosine similarities provide a strong measure of how similar documents are in terms of their semantics. The MathTools project is a unified toolkit to facilitate working with MathML. By using MathTools, other researchers will no longer need to develop their own data representations, nor will they have to deal with the full complexity of XML. The developed tools are actively being used in our own projects, such as MathMLBen [19], VMEXT [21], the Mathematical Language Processing (MLP) Project [13], and HyPlag [6, 9, 11] for mathematical plagiarism detection. Our hope is that the tools presented in this paper will help others to realize MathML related projects in the future. future work include enlarging the libraries of XPath and XQuery expressions and providing transformation tools for MathML trees. Furthermore, we are currently working on semantic enhancements of MathML through the use of WikiData (as proposed in the MathMLBen project). This semantic enhanced MathML data can be used to calculate semantic distances through the calculation of distances between WikiData links. Moreover, we will consider the development of convienient interfaces to other tools that deal with similar standars such as OpenMath. For instance PyOpenMath and provides for conversion between Python objects to OpenMath representations. Additionaly, we are considering to take advantage of tools for processing semantics on the document level. In particular MMT [16], which is a framework for creation of a new language for partially formal mathematical knowledge. We plan to maintain the current API for the foreseeable future. Acknowledgements Li, Telmo Menezes, and Michael Kramer for contributing to the MathTools project. We are also indebted to Akiko Aizawa for her advice and for hosting us as visiting researchers at the National Institute of Informatics (NII) in Tokyo. This work was supported by the FITWeltweit program of the German Academic Exchange Service (DAAD) as well as the German Research Foundation (DFG) grant no. GI 1259/1. https://github.com/OpenMath/py-openmath probability distributions. The measure models a cost function for changing one distribution to another. In our case, the probability distribution is the histogram of the MathML data. Our calculations are performed using a Java implementation of [15]. EMD is widely used in multimedia information retrieval and for pattern recognition algorithms. case, the vectors are represented by the histogram of the MathML data. Our goal is to actively maintain and extend MathTools. Plans for current and
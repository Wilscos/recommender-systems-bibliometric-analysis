Recommender systems have played a critical role in many web applications to meet user’s personalized interests and alleviate the information overload. In this survey, we review the development of recommendation frameworks with the focus on heterogeneous relational learning, which consists of different types of dependencies among users and items. The objective of this task is to map heterogeneous relational data into latent representation space, such that the structural and relational properties from both user and item domain can be well preserved. To address this problem, recent research developments can fall into three major lines: social recommendation, knowledge graph-enhanced recommender system, and multi-behavior recommendation. We discuss the learning approaches in each category, such as matrix factorization, attention mechanism and graph neural networks, for effectively distilling heterogeneous contextual information. Finally, we present exploratory outlook to highlight several promising directions and opportunities in heterogeneous relational learning frameworks for recommendation. In the era of information explosion, recommender systems are designed to help allievate the information explosion and meet users personalized interests[He et al., 2017]. For example, recommending products to users on e-commerce platforms (e.g., Amazon, Ebay, Taobao)[Huang et al., 2019], or suggesting movies for users on online video sites (e.g., Netﬂix, Youtube)[Covington et al., 2016]. To accurately capture user preference, one of most popular recommendation architectures is collaborative ﬁltering (CF), which leverages the historical co-interact patterns of users on items and make recommendations[Mnih and Salakhutdinov, 2007]. In our computational online services, practical recommender systems are often associated with heterogeneous structural relations, e.g., users’ social connections[Wu et al., 2019b; Xu et al., 2020], knowledge graph of items[Cao et al., 2019; Ma et al., 2019b], multiplex user-item interactions[Xia et al., 2020; Jin et al., 2020]. Such heterogeneous relational data provide opportunities for researchers and practitioners to not only understand and investigate user preferences better, but also present challenges to learn insightful information from them. For example, the incorporation of cross-user social relations could help characterize user preference, based on the social inﬂuences among users[Huang et al., 2021b; Fan et al., 2019]. In addition, knowledge graph could provide connectivity information to capture the semantic relatedness between items[Zhu et al., 2020; Wang and others, 2019]. Hence, distilling and aggregating knowledge from such heterogeneous structural data would beneﬁt recommendation designs with better personalization. In the recommendation with heterogeneous relational context, the key challenge lies in the effective modeling of complex dependent structures from a diverse set of heterogeneous relations. In addition to the difﬁculty of discovering insightful knowledge from heterogeneous data sources, it is a signiﬁcant challenge to effectively aggregate the heterogeneous knowledge in a uniﬁed way, to facilitate various user modeling applications. Existing heterogeneous relational learning frameworks should be able to address two important questions which corresponds to the aforementioned challenges: (1) How to effectively perform the relation representation learning from the heterogeneous structural data? (2) How to perform the information fusion based on the extracted knowledge via automatic machine learning frameworks, and endow the user preference modeling paradigms with heterogeneous context incorporation? In this survey, we focus on the recent advances and new trends in heterogeneous relation learning for recommendation. A rich body of learning methods have been applied to solve this challenge in recommender systems, based on various techniques, including attention mechanism[Wu et al., 2019c; Chen et al., 2019a], graph neural network[Xia et al., 2021a; Wang and others, 2019], knowledge base embedding[Cao et al., 2019], and multi-task learning[Chen et al., 2020; Gao et al., 2019]. In the following, we break down this investigation into three parts: i) We identify key challenges of capturing heterogeneous relations for modeling user preferences; ii) We categorize the existing solutions into three groups, i.e., social recommendation, knowledge graphenhanced recommender systems, and multi-behavior recommendation; iii) We point out promising research directions in heterogeneous relation learning for recommendation. To our best knowledge, this paper is the ﬁrst survey that pays special attention to recent advances in user modeling and personalization with heterogeneous relational context. Collaborative ﬁltering has emerged as the most popular paradigm to build recommender systems. At its core is to presume that behaviorally similar users likely to share similar interests over items, based on users’ historical interaction behaviors (e.g., clicks, purchase)[He et al., 2017; Hofmann and Puzicha, 1999]. The most common collaborative ﬁltering framework lies in representing users and items with low-dimensional latent features (i.e., embeddings), and then making predictions based on the learned embeddings vectors[Han et al., 2018; Liang et al., 2018]. 2.1 Matrix Factorization There exist various types of collaborative ﬁltering techniques which design different model structures for modeling useritem interactions. Speciﬁcally, matrix factorization is an early solution to decompose sparse matrix to low-rank latent embeddings, by retaining the dependencies of interactions among users[Mnih and Salakhutdinov, 2007]. For example, Singular Value Decomposition(SVD)[Billsus et al., 1998]infers the missing elements in user-item rating matrix by factorizing it into a product of two low-rank matrices corresponding to user and item dimensions. Later on, several probabilistic variations are proposed to extend matrix factorization with the integration of the sophisticated Bayesian inference, such as Probabilistic Matrix Factorization (PMF)[Mnih and Salakhutdinov, 2007], Bayesian Probabilistic Matrix Factorization (BPMF), and Maximum Margin Matrix Factorization (MMMF)[Srebro et al., 2005; Rennie and Srebro, 2005]. In a typical recommendation scenario, we have a set of users u∈ U and items v∈ V with the size of I and J, respectively. The user-item interaction matrix Y is generated based on users’ implicit feedback on items, in which y= 1 if user uhas interacts with item v(e.g., click, watch, or purchase) and y= 0 otherwise. Matrix factorization models aim to project user and item into low-dimensional latent feature vectors, which can be formally represented as: where ˆyis the predicted probability of interaction ybetween user uand item v. The learned model parameters are denoted by Θ. f(·) is the encoding function which maps input user interactions Y to the estimated probability ˆy. 2.2 Neural Collaborative Filtering Architecture With the advent of deep learning in various domains (e.g., computer vision, nature language processing), neural network techniques have been utilized to enhance the collaborative ﬁltering paradigm with non-linear feature interactions. To be speciﬁc, NCF[He et al., 2017]and DMF[Xue et al., 2017]leverage multi-layer perceptron to endow the neural collaborative ﬁltering for user-item interaction modeling with non-linearities. In CDAE[Wu et al., 2016]and AutoRec[Sedhain et al., 2015], the autoencoder architecture has been used as the mapping function to learn latent representations with the reconstruction of the user-item interaction input. In addition, inspired from restricted Boltzmann machines[Salakhutdinov et al., 2007; Larochelle and Bengio, 2008], neural autoregressive models are adopted to distribution estimation for collaborative ﬁltering[Zheng et al., 2016; Du et al., 2018]. These neural models perform autoregression for user and item dimensions, so as to capture the intercorrelations between users and items in an explicit way. Motivated by the development of graph neural network and its strength in relational learning over graphstructured data, many efforts propose to guide the embedding learning over the generated user-item interaction graph[Klicpera et al., 2019]. Recently emerged graph neural networks (GNNs) design various message passing schemes to encourage neighboring nodes to have similar representations[Kipf and Welling, 2017; Veliˇckovi´c et al., 2018]. To adapt the GNNs to the collaborative ﬁltering scenario, some studies employ the graph convolutions to aggregate embeddings of neighboring users or items, to reﬁne the representation of the target node, like NGCF[Wang et al., 2019b], PinSage[Ying et al., 2018], DGCF[Wang et al., 2020], GC-MC[Berg and others, 2017]. Heterogeneity of Relations. However, these above collaborative ﬁltering models have thus far focused on representation learning for homogeneous relations for user modeling. As a matter of fact, practical recommendation scenarios involve a diversity of relations from both user and item dimensions[Shi et al., 2018](as shown in Figure 1). Given different recommendation scenarios, methods can be categorized as different dimensions of heterogeneous relation learning: • Social Connections among Users. The increasing popularity of online social platforms enable the connections between users with similar interests, by integrating item recommendations and social network services[Wu et al., 2019c], e.g., preference of users on items may be inﬂuenced by their friends. Hence, one line of heterogeneous relational learning for recommender system is Social Recommendation which leverages social information to alleviate the data sparsity and improve the recommendation quality, with the joint modeling of user-user and user-item relations[Jiang et al., 2012; Yang et al., 2016]. • Knowledge-aware Dependencies among Items. In reallife applications, there exist explicit relations among different items with the consideration of external knowledge (e.g., movie’s director, product category, or venue’s location)[Xin et al., 2019]. Such item-wise dependencies can be used to construct the knowledge graph to present the heterogeneous structured information and reﬂect the semantic relatedness between items. The rich semantics and topology of knowledge graphs could be incorporated into the user embedding process as important side information, by exploiting the knowledge-aware dependency across items[Ma et al., 2019b]. users exhibit different interaction behaviors on items depending on the intention context[Chen et al., 2020]. Let us consider the e-commerce platform as an example: users can click products when they are interested in, or tag these items as favourites if they like them, or make ﬁnal purchases given the products fulﬁll their needs[Tanjim et al., 2020]. To provide better purchase forecasting for a user, it is beneﬁcial to investigate not only which products he/she has purchased before, but also what this user has browsed and tagged as his/her favorite items[Xia et al., 2021b]. In such case, user-item interactions are heterogeneous in nature, involving different types of user behaviors (e.g., click, tag-as-favorite, purchase). To provide a better understanding, Figure 1 presents the illustrated examples corresponding to the above recommendation scenarios with heterogeneous relational context. In this section, we review the recent advances for user modeling and personalization with the modeling heterogeneous relational context from three perspectives (stated in Section 2). 3.1 Social Recommendation Social recommendation aims to probe social relations among users into user-item interaction modeling paradigm, based on the observed phenomena that users’ preference is likely to be affected by their social connected friends[Tang et al., 2013]. In social-aware recommender systems, there exist two types of relations: user-user social connections (e.g., friendship, or family) and user-item interactions (e.g., click, or purchase). Challenge. The key challenge of social recommendation lies in the effectively transforming the user-user and user-item relational structure into latent factor spaces, such that the semantics of heterogeneous relations can be well preserved. Social-aware Factorization Methods. In light of the above challenge, the exploration of social recommendation can date back to the development of social relation-enhanced matrix factorization model. In particular, SoReg[Ma et al., 2011]considers social signals as the regularization term to constrain the optimized objective in the matrix factorization architecture. Jamali et al.[Jamali and others, 2010]proposes to augment the matrix factorization with the trust inﬂuence modeling, so as to capture the social-aware user preference. Ma et al.[Ma et al., 2008]develops a factor analysis method–SoRec which is built on the probabilistic matrix factorization, to jointly investigate users’ social connections and interactions. Furthermore, a social collaborative ﬁltering model named TrustMF[Yang et al., 2016]is developed to use the trust relations among users in addressing the data sparsity issue of traditional recommender systems. Nevertheless, those social-aware factorization methods model the two-dimensional interaction of user and item hidden factors, with the assumption of the linear relations between each dimensional latent space. Hence, their model performance can be hindered by the simply linear combination of latent factors[He et al., 2017]. Attentive Social Recommender Systems. Attention mechanism has shown its effectiveness in a variety of tasks, e.g., machine translation[Indurthi et al., 2019]and human activity recognition[Ma et al., 2019a]. The key idea of attention mechanism is to identify the inﬂuential parts with the attentive weights from the input data. Along with this line, several studies seek to capture the relationships between users based on neural attentive architectures. For instance, Chen et al.[Chen et al., 2019a]proposes a two-stage attentional model (SAMN) to differentiate users’ social relations. In SAMN framework, an aspect-level attention module is ﬁrstly introduced to generate the user-friend speciﬁc relation representation, and then another attention layer is proposed to capture the friend-level differences. Additionally, with the introduction of attention mechanism, an adaptive transfer learning scheme is designed to model the interplay between user and item domain for social recommendation[Chen et al., 2019b]. To capture social contextual signals, Wu et al.[Wu et al., 2019a]proposes a hierarchical attention approach to model factors (i.e., past behaviors, social relations, user admiration) which impacts user preferences. Graph Neural Network for Social Recommendation. Advances in graph neural networks (GNNs) have shed light on the development of social recommendation solutions[Huang et al., 2021b], due to the strong capability of learning on graph structure data. Relations in social recommendation can be naturally represented as two explicit graph-based heterogeneous structures: i) user-item interactions; ii) user-user social connections. Along with this line, many efforts have developed graph neural networks with information propagation paradigm, to inject social signals into the user-item interaction modeling. We show the overall model ﬂow of graph neural network-based social recommender systems in Figure 2. In general, current methods can be summarized into the following graph neural paradigms. Figure 2: Graph neural network for social recommendation with relation aggregation under message passing paradigm. by the prevalence of spectral graph learning framework– Graph Convolutional Network (GCN), DiffNet[Wu et al., 2019b]simulates the inﬂuence process between users, by recursively propagating information over the social network for user and item representation reﬁnement. The designed inﬂuence diffusion neural layers can be incorporated into the collaborative ﬁltering architecture, to capture the heterogeneous relational context for social-aware recommendation. In RecoGCN[Xu et al., 2019], the GCN is adopted to aggregate heterogeneous features over the constructed heterogeneous graph with the semantic-aware meta-paths from user-user and user-item edges. To address the sparsity problem, a GCN-based autoencoder is introduced to augment the data with the adversarial learning strategy[Yu et al., 2020]. (ii) Graph Attention Network-based Models. To discriminate the importance of neighbouring feature aggregation, Graph Attention Network (GAT)[Veliˇckovi´c et al., 2018]is proposed as a non-spectral learning method that leverages the node spatial information for embedding propagation. To alleviate the limitation of the mean-based information aggregator, GraphRec[Fan et al., 2019]integrates attention mechanism into the graph neural network to model heterogeneous user latent factors from social space. To endow the social recommender system to capture multifaceted social relations, Wu et al.[Wu et al., 2019c]devises a dual-stage graph attention to dynamic weigh social effects from user and item domain context. To inject temporal context into social recommendation, GAT is adopted to cooperate with a recurrent neural network to capture the time-aware social inﬂuence and user interests[Song et al., 2019]. General GNN Social Recommendation Framework. Suppose H[u] is the representation of user uat the (l)-th GNN layer, the message passing paradigm from the (l)-th layer to the (l + 1)-th layer can be formally represented as: H[u] = AggreExtract(H[u], H[v]), H[u])(2) where Nand Ndenote the set of user u’s social connected users and items, respectively. u∈ N; v∈ N. The key GNN operators: Extract(·) represents the heterogeneous neighbor information extractor from user-user and user-item dependent context. Aggre(·) is the aggregation function to fuse heterogeneous signals, including the mean and attention-based operator corresponding to the GCN and GAT message passing methods, respectively. Summary. To adapt to the heterogeneous relational learning scenarios, all existing social recommendation models employ different structural information aggregation schemes, e.g., attention mechanism, graph convolution and graph attention network. The nature of graph neural networks is able to jointly maintain user-user and user-item relational structures, for generating contextualized user and item embeddings. 3.2 Knowledge Graph-enhanced Recommendation Knowledge Graphs (KGs) brings up a large amount of commercial beneﬁts for various applications, ranging from question answering[Yang et al., 2019a]and information extraction[Yang et al., 2019b]. KGs provide world’s factual information with heterogeneous relational structures (entityrelation-entity triplets), in which nodes and edges represent the entities and the corresponding entity-wise relations, respectively. In recent years, incorporating knowledge graph information into the recommendation has attracted much attention, to help improve the performance of recommender systems[Zhu et al., 2020]. Such knowledge side information presents heterogeneous relations corresponding to different item attributes, which i) captures the rich semantic relatedness among items; ii) improves the explainability of recommender systems with knowledge graph connections. Challenge. The main challenge in incorporating knowledge graph into recommendation lies in how to capture the semantic relatedness between items, and transform such underlying dependencies into the user/item representation paradigm with the heterogeneous relational context. To address the aforementioned challenge, existing knowledge graph-enhanced recommendation techniques can be grouped into three main types: path-based approaches, regularization-based methods, and hybrid learning methods. Path-based Approaches. The path-based approaches attempt to generate entity paths between graph nodes based on their high-order connections (as illustrated in Figure 3). Early personalized entity recommendation method[Yu et al., 2014] considers the meta-path heterogeneous graph as external knowledge to alleviate the data scarcity issue. Motivated by the deep learning methods over heterogeneous information network, a co-attention mechanism is proposed to inject the meta-path based context into the recommendation architecture, so as to characterize the three-way knowledge-based interaction with the triple form of (user, meta-path, item)[Hu et al., 2018]. To effectively identify useful meta-graph based features (e.g., user→review→business), Zhao et al.[Zhao et al., 2017]develops a group lasso regularized factorization machine, to characterize the knowledge-aware semantics. However, the success of most path-based methods largely relies on the effective design of meth paths for modeling heterogeneous relations among users and items, which requires domain-speciﬁc knowledge. Hence, such process may hardly be adapted to the complex knowledge graph structures with diverse categories of entities and relations. Regularization-based Methods. Inspired by the strength of knowledge graph embedding techniques (e.g., TransE[Bordes et al., 2013]), several regularization-based methods Figure 3: Knowledge graph-guided item meta-relations. propose to regularize the user representation learning in recommendation with the designed additional knowledge graph loss. Following this line, regularization-based methods integrate the tasks of knowledge graph learning and recommendation under a multi-task learning paradigm. For example, KTUP[Cao et al., 2019]simultaneously models item recommendation and knowledge graph completion, to learn user preference with the consideration of knowledgeaware relations. To explain the recommendation results, Ai et al.[Ai et al., 2018]generates the interpretations based on embedded knowledge base, with the preservation of heterogeneous dependent structures. Due to the lack of modeling high-order connectivity between users and items, these methods cannot capture the long-range dependencies for user-item interactions and knowledge graphs. Hybrid Learning Methods. Another line of KG-enhanced recommendation models learn user/item representations with the joint modeling of i) path-based entity dependence; and ii) knowledge graph structural semantics. For instance, KARN[Zhu et al., 2020]proposes an attentive recurrent network to incorporate knowledge graph into the sequence learning framework of user’s click records. A joint optimization framework is developed to extract inductive rules from item-centric knowledge graphs[Ma et al., 2019b]. In addition, graph neural networks have been utilized for encoding the knowledge-aware relations to transform the knowledge graph into user interest modeling, such as KGNN-LS[Wang and others, 2019]and KGAT[Wang et al., 2019a]. In particular, KGNN-LS is a knowledge-aware graph neural model with the integration of label smoothness regularization. This work is on the basis of the assumption that users are likely to share similar preferences on items which are connected in the knowledge graph. KGAT enables the high-order knowledgeaware relation learning under the graph attention architecture. Summary. Overall, the limitation of path-based methods lies in the requirement of domain-speciﬁc knowledge for effective meta-path construction, which hinders the ﬂexibility of those KG-enhanced recommendation solutions. The success of regularization-based methods replies on the output of knowledge base embedding. To effectively leverage external knowledge, it is important to design a main representation space which effectively bridges the recommendation and knowledge graph learning. Compared with the path-based approaches and regularization-based methods, the hybrid learning models have a better capability with respect to discovering complex knowledge-aware heterogeneous relations. However, by involving the recursive embedding propagation, GNN-based methods have large computational cost by exploring the high-order connectivity among entities. Hence, how to achieve a nice trade-off between the modeling of long-range collaborative knowledge and model efﬁciency, remains a signiﬁcant challenge. 3.3 Multi-Behavior Recommender System In real-world applications, users often interact with items based on various types of behaviors, e.g., click, tag-asfavorite, add-to-cart and purchase in online retailing systems[Xia et al., 2020]. Hence, it is important to capture the collaborative signals from multi-behavioral patterns, to characterize diverse user-item relationships. In the behavioraware recommendation settings, the behavior type we aim to forecast is regarded as target behavior, such as purchase in online retailing platforms or positive rating feedback in online review sites. Other types of user behavior are regarded as auxiliary behavior. For example, in e-commerce platforms, both add-to-cart and tag-as-favorite behavior could serve as indicators to model the purchase patterns of users. Challenge. In the multi-behavior recommendation scenario, different types of behavior may reﬂect the interactive pattern between users and items from different perspectives. It is important to capture the unique context and semantics of heterogeneous user-item interactions when modeling the multibehavioral relationships[Xia et al., 2021a].Because diverse types of user-item interactions can be dependent in a complex way, it is important to design an effective learning model to capture the underlying multi-behavior dependencies. Existing multi-behavior recommendation methods can be categorized into two key dimensions: multi-task behavior learning frameworks and graph-based recommender systems. Multi-Task Behavior Learning Frameworks. The ﬁrst type of studies tackle the multi-behavior recommendation under a multi-task learning architecture. Particularly, the modeling of multi-typed behavioral interactions is conducted with multiple tasks based on the shared embedding space. For example, To account for multi-typed user behaviors, Gao et al.[Gao et al., 2019]integrates the neural collaborative ﬁltering, to learn separate interaction encoding function for individual type of behaviors under a multi-task learning paradigm. Furthermore, in EHCF[Chen et al., 2020], a transfer-based model is developed to correlate the forecasting of each type of user-item interaction. With the designed transfer learning approach, EHCF can not only capture heterogeneous relational structure between user and item, but also alleviate the data sparsity issue for inactive users. Graph-based Multi-Behavior Recommender Systems. The second type of multi-behavior recommender systems are built upon the graph neural architectures. These methods ﬁrstly construct the heterogeneous user-item interaction graph by differentiating behaviors (as shown in Figure 4). Edges in the generated graph represent different types of user behaviors (e.g., click, tag-as-favorite, purchase). Then, they leverage different graph relation encoders (e.g., graph convolutional network and graph attention mechanism), to aggregate multi-relational contextual signals during the message passing procedure. For example, MBGCN[Jin et al., 2020]is a behavior-aware information propagation framework based on graph convolutional operations, which captures the semantics of multi-typed behaviors. Through extensive experiments, authors demonstrate the performance superiority of multi-behavior models as compared to the recommender systems with singular type of behaviors. Figure 4: Multi-behavior user-item interaction graph. To effectively and explicitly discriminate the inﬂuences of different types of behaviors, KHGT[Xia et al., 2021a] builds a graph-structured transformer network to determine which types of user-item interactions contribute more in assisting the prediction of target behavior (e.g., purchase). In those graph-based multi-behavior recommendation methods, the behavior-aware embeddings are propagated over the multi-behavior interaction graph to reﬁne user and item representations with the high-order relational structures. Summary. Different from the heterogeneous relations extracted from user or item domain as side information (e.g., social connections, item knowledge-aware relations), edges between node pairs in the multi-behavior recommendation present the relation multiplicity. Such multiplex topological structures between user and item are investigated in the recently emerged multi-behavior recommender systems. This section presents a few potential opportunities for recommendation with heterogeneous relational context. • Learning to Recommend with Multi-Modal Representations. The prevalence of web services allow the recommender systems to access online multi-modal content, such as item images/videos or textural description, user proﬁle and reviews[Wei et al., 2020]. Along with this line, learning informative multi-modal representations of users and items with the incorporation of multi-modal content data into heterogeneous relational learning paradigms, become an important theme of the recommendation frameworks. • Learning with Data Scarcity. The effectiveness of current methods relies on sufﬁcient relational data, and may not be able to learn quality embeddings when user behavior or heterogeneous relation data are scarce. They often require a sufﬁcient amount of user-item interactions, or knowledge graph connections, so that the encoded representations is able to well capture the dependent structures between entities. However, many real-life systems involve a limited amount of relational data. Therefore, to build effective heterogeneous relational learning models, it is important to develop effective learning architectures to perform the heterogeneous relation learning with data scarcity. • Temporal Context Injection. In real-life online platforms, the temporal patterns of user-item interactions and the underlying time-aware behavior relationships, serve as a key feature dimension in many recommender systems[Huang et al., 2021a]. Hence, it is necessary to design dedicated learning frameworks for modeling dynamic heterogeneous relational data with complex temporal context. However, recommendation models with temporal heterogeneous relations still face several challenges: i) from the local perspective, connections among users and items are inherently dynamic; ii) from the global perspective, it is important to capture the temporal long-term structures with the relational heterogeneity, which calls for dedicated efforts. • Interpretable User Modeling. The model interpretation ability with heterogeneous relational learning is less explored in current recommender systems. Speciﬁcally, most of current approaches only focus on forecasting unknown user-item interactions, but ignore the inference of casual factors for predicted results. In practical recommendation scenarios, identifying the underlying factors which inﬂuence user interaction behaviors, is beneﬁcial to show result explanations and further improve the recommendation performance. For example, performing accurate reasoning on cross-type behavior dependent structures to infer user preferences towards target items, will endow the multi-behavior recommender systems with the capacity of providing informative explanations for identifying multi-dimensional factors. Therefore, it would be interesting and desirable to leverage advanced techniques (e.g., causal inference[Pearl, 2019]) and develop interpretable paradigms for heterogeneous relation learning-based recommender systems. • Real-Time Computational Frameworks. Notwithstanding the promising performance of existing heterogeneous relation learning-based recommendation frameworks, most of them operate on the static observed user behaviors and side features. This makes those methods less suited to the practical applications, where new heterogeneous relational data (e.g., clicks and purchases of users, dynamic user connections) arrive continually over time. Hence, real-time computational frameworks are important because they allow the heterogeneous relational recommender systems to infer user preference from streaming data. This work introduces the problem of heterogeneous relational learning for recommendation and discuss its corresponding challenges. We present the recent advances in addressing these challenges. This survey not only provides a comprehensive study of user modeling techniques with heterogeneous context for researchers and practitioners in related ﬁelds, but also shed light on designing solutions to harness the power of heterogeneous data, and distill useful knowledge for various real-life user modeling and personalization applications.
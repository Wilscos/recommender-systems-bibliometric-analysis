There exists a high variability in mobility data volumes across different regions, which deteriorates the performance of spatial recommender systems that rely on region-specic data. In this paper, we propose a novel transfer learning framework called Reformd, for continuous-time location prediction for regions with sparse checkin data. Specically, we model user-specic checkin-sequences in a region using a marked temporal point process (MTPP) with normalizing ows to learn the inter-checkin time and geo-distributions. Later, we transfer the model parameters of spatial and temporal ows trained on a data-rich origin region for the next check-in and time prediction in a target region with scarce checkin data. We capture the evolving region-specic checkin dynamics for MTPP and spatial-temporal ows by maximizing the joint likelihood of next checkin with three channels (1) checkin-category prediction, (2) checkin-time prediction, and (3) travel distance prediction. Extensive experiments on dierent user mobility datasets across the U.S. and Japan show that our model signicantly outperforms stateof-the-art methods for modeling continuous-time sequences. Moreover, we also show that Reformd can be easily adapted for product recommendations i.e., sequences without any spatial component. • Information systems → Location based ser vices. ACM Reference Format: Vinayak Gupta and Srikanta Bedathur. 2021. Region Invariant Normalizing Flows for Mobility Transfer. In Proceedings of the 30th ACM Int’l Conf. on Information and Knowledge Management (CIKM ’21), November 1–5, 2021, Virtual Event, Australia. ACM, New York, NY, USA, 5 pages. https://doi.org/ 10.1145/3459637.3482169 Recent research has shown that accurate advertisements on Pointsof-Interest (POI) networks, such as Foursquare and Instagram, can achieve up to 25 times the return-on-investment [24]. Consequently, predicting the time-evolving mobility of users, i.e.where and when, is of utmost importance to power systems relying on spatial data. Current approaches [7,18,38] overlook the temporal aspect of a recommender system as it involves modeling continuous-time checkin sequences – which is non-trivial with standard neural architectures [10,23,40]. The problem is further aggravated by the variation in volumes of mobility data across regions due to the growing awareness for personal data privacy [3,33]. Therefore, there exists an underlying region-based data-scarcity, which further exacerbates the training of large neural models. In recent years, Marked Temporal Point Processes(MTPP) have outperformed other neural architectures for characterizing asynchronous events localized in continuous time and are even used in a wide range of applications, including healthcare [29], nance [1,39], and social networks [15,23,40]. Recent works that deploy MTPP for predicting user mobility patterns are either: (i) limited to predicting the time of user-location interactions rather than actual locations [37], (ii) restricted to one dataset without a foreseeable way to easily utilize external information [19], or (iii) disregard the opportunity to reuse trained parameters from external datasets by jointly embedding the checkin and time distributions [5]. Thus, none of these approaches can be used for designing mobility prediction models for limited data regions. In this paper, we present Reformd (ReusableFlows for Mobility Data), a novel transfer learning framework that learns spatial and temporal distribution of checkins using normalizing ows(NFs) on a checkin-rich origin region and transfers them for ecient prediction in a checkin-scarce target region. Specically, we consider the series of checkins made by a user as her checkin sequence and model these sequences for all users from a region using a neural MTPP and learn the inter-checkin time interval and spatial-distance distributions as two independent NFs [22,28]. To make the learned spatial and temporal NFs invariant of the underlying region, we restrict our model to learn the distribution of inter-checkin time intervals and spatial distance. These features are unaected by the network characteristics that vary across regions – POI categories and user anities towards these POIs. Therefore, these NFs can be easily extended for prediction in other mobility regions. The ability of NFs to provide faster sampling and closed-form training for continuous-time event sequences [30] make them a perfect medium to transfer mobility information. Moreover, for transferring across regions, we cluster the checkin sequences of each region, with each cluster containing checkin-sequences with similar spatial and temporal checkin patterns and only transfer the parameters across these clusters. In summary, the key contributions we make in this paper via Reformd are three-fold: (i) We propose Reformd, a transfer-learning model for predicting mobility dynamics in checkin-scarce datasets by incorporating mobility parameters trained on a checkin-rich region. (ii) We present a novel NF-based transfer over the MTPP that not only enables a faster sampling of time and distance features of next checkin, but also achieves high performance even with limited ne-tuning on the target region. (iii) Finally, we empirically show that Reformd outperforms the state-of-the-art models by up to 20% and 23% for checkin-category and time prediction and can easily be extended to product recommendation datasets. The key related works fall into the following categories: Mobility Prediction:Recent sequential POI prediction models consider the checkin trajectory for each user as a sequence of events and utilize an RNN based learning [6,21,38] with some variants that incorporate the spatial features as well [12,20]. Another approach [13] is a generic model for predicting user trajectories as well as next product recommendation. Recent approaches for checkin time prediction are limited to a single dataset [5,19,37]. They also model event-times as random variables rather than sequential ows and thus cannot be used for transfer across regions. Temporal Point Process:In recent years TPPs have emerged as a powerful tool to model asynchronous events localized in continuous time [8,16], which have a wide variety of applications, e.g information diusion, disease modeling, nance, etc. Driven by these motivations, in recent years, there has been a surge of works on TPPs [11,15,29]. Modeling the event sequences via a neural network led to further developments including neural Hawkes process [23] and several other neural models of TPPs [26,34,35], but cannot incorporate heterogeneous features as in a spatial networks. The approach most similar to our model is [30] that learns the interevent time intervals using NFs, but ignores the spatial dynamics and is limited to a single data source. We consider the mobility records for two regions with non-overlapping locations and users, origin and target asRandRrespectively. For any region, we represent a user trajectory as a sequence of checkins represented byS= {e= (c, t, d)|i ∈ [k], t< t, d< d}, wheret∈ Ris the checkin time,d∈ Ris the total distance traveled, andc∈ Cis a discrete category of the i-th checkin withCas the set of all categories, andSdenotes the rstkcheckins. We represent the inter-checkin times and distances as,∆= t− tand∆= d− drespectively and model their distribution using NFs. Our goal is to capture these region invariant dynamics in origin region for mobility prediction in target region, i.e.given the checkin sequence for target region, Sand the MTPP trained on origin, we aim to predict the time and category of the next checkin, e. We divide the working of Reformd into two parts: (i) the neural MTPP to capture mobility dynamics specic to a region, and (ii) transfer of NFs trained on the origin region to the target region. The overall schematic of Reformd is given in Figure 1. We model the checkin sequences using an MTPP that we build on a recurrent neural network (RNN). The RNN is used to obtain timeconditioned vector representation of sequences as in [10,23,26]. Later, via these embeddings we estimate the mark distribution and inter-event time and space densities sing a three-stage architecture: Figure 1: Architecture of Reformd with ow-based transfer between origin region (red) and target region (blue). Input stage:In this stage we represent the incoming checkin at index k, eusing a suitable vector embedding, vas: wherew, bare trainable parameters andvdenotes the vector embedding for checkin erespectively. Update stage:In this stage, we update the hidden state representation of the RNN to include the current checkin eas: whereG, g, bare trainable parameters andsdenotes the RNN hidden state, i.e. a cumulative embedding for all previous checkins till the current time t. Output stage:Given the trajectory embeddings, we predict the next checkin time and the checkin category. Unlike [10,23] that learn the time distribution using the RNN hidden state, we model the density of arrival times using a LogNormal [30] ow denoted as p(∆) conditioned on sas: p(∆|s) = LogNormalµ(s), σ(s) with[µ(s), σ(s)] = [Ws+ µ, Ws+ σ]denote the mean and variance of the time distribution. Such a formulation reduces model complexity, facilitates faster training and sampling in a closed-form [30]. To predict the time of the next checkin, we sample the probable time dierence between the current and the next checkin as∆∼ LNµ(s), σ(s), whereLNdenotes the learned log-normal parameters. The actual time of the next checkin is the sum of the sampled time dierence and the current checkin time,t= t+ ∆. Similar to the temporal ow, we also model the inter-checkin density of spatial distances using a lognormal denoted asp(∆|s). We interpret this distribution as the spatial ow for a region. The inter-location spatial distance plays a crucial role in determining the next POI [7,21]. Unlike time, the distances between two checkin locations are unchanged throughout the data. Previous approaches [10,23] ignore these spatial features and rely solely on the past checkin-categories. Moreover, in a sequential setting the distance that the user will travel for her next checkin is not known. Our MTPPs, being generative models, and spatial ows overcome this drawback as we can sample the probable travel distance for the next checkin from the spatial ow as∆∼ LNµ(s), σ(s). Then, for predicting the next checkin, we use the sampled distance∆and RNN hidden statesvia an attention weighted embedding [2]. whereα, wdenote the attention weight, a trainable parameter andsdenotes the updated hidden state. We then predict the next checkin category as: whereV, bare trainable parameters and•denotes the entry corresponding to a category.P(c= c|s)denotes the probability of next checkin being of category c with c ∈ C. Optimization:Given the set of all sequencesSfor a regionR, we maximize the joint likelihood for the next checkin, the log-normal density distribution of spatial, and temporal normalizing ows. whereLdenotes the joint likelihood, which we represent as the sum of the likelihoods for all user sequences. We learn the parameters of Reformd using Adam [17] optimizer. For transferring the mobility parameters across the regions, we follow the standard transfer learning procedure [27,31] of training exclusively on the origin region and then ne-tuning for the target region. However, the anity of a user towards a POI evolves with time [7,18]. For example, a POI with frequent user-checkins during the summer season might not be an attractive option in winters. We include these insights by training multiple independent normalizing ows each for spatial and temporal densities. Specically, we cluster the checkin sequences in the origin region intoMequal clusters based on the median of the occurrence times for all the checkins. Later, for each cluster of sequences, we train spatial and temporal ows independently. In this setting our net likelihood changes asÍ to include the sum of allMlikelihoods,L =L, whereL is the joint likelihood for trajectories in clusters M. As in origin region, we divide the user trajectories in the target region as well intoMclusters and for trajectories in target-cluster mwe attentively factor the spatial and temporal ows corresponding to origin-clusterm. Mathematically, for the temporal ows in the target region our density of arrival times changes to: wheres, ϕ, µ, σdenotes the hidden state representation for the target region, attention parameter for temporal ow and the learned ow parameters of mean and variance for clustermin origin region. Similarly, our spatial ows for target region include the origin ow parameters with an attention parameterϕ. For faster convergence, we shareϕandϕacross allM. Other model components are same as in origin region and we maximize the joint likelihood for target region as in Equation 6. We highlight that our choice to divide the sequences based on median of user trajectories rather than the individual checkin locations is driven by the following technical point: in the latter case, the net ow –be it spatial or temporal– would be the sum of lognormal ows for each set. Such a formulation is undesirable since the result is neither closed nor does it remain a lognormal [9], thus requiring involved techniques to approximate them [4], which we would like Table 1: Statistics of datasets used in our experiments. The origin region columns are followed by target regions. to explore in future work. However with the current formulation, we can learn the parameters of dierent ows independently. In this section, we conduct an empirical evaluation of Reformd. Specically, we address the following research questions. RQ1Can Reformd outperform state-of-the-art baselines for time and checkin prediction? RQ2What is the advantage of transferring via normalizing ows? RQ3 Can we extend Reformd for non-spatial datasets? For evaluating mobility prediction, we consider six POI datasets from the U.S. and Japan. All our models are implemented in Tensorow on an NVIDIA Tesla V100 GPU and are made public at https://github.com/data-iitd/reformd. Dataset Description:We use POI data from Foursquare [36] in United States(US) and Japan(JP) and for each country we construct 4 datasets: one with large check-in data and three with limited data. The statistics of all datasets is given in Table 1 with each acronym denoting the following region: (i) NY: New York(US), (ii) MI: Michigan(US), (iii) NV: Nevada(US), (iv) VI: Virginia(US), (v) TY: Tokyo(JP), (vi) CH: Chiba(JP), (vii) SA: Saitama(JP) and (viii) AI: Aichi(JP). We consider NY and TY as the origin regions and MI, NV, VI and CH, SA, AI as the corresponding target regions. For each region, we consider the time of checkin and category as event time and mark and normalize the times based on the minimum and maximum event times. We set the embedding and RNN hidden dimension to64andM = 3for all our experiments. Other values for the model parameter had negligible dierences. Evaluation Protocol:We split each stream of sayNcheckinsS into training and test set, where the training set (test set) consists of rst 80% (last 20%) checkin. We evaluate models using standard metrics [10] of (i) mean absolute error (MAE) of predicted andÍ actual checkin times,[|t−bt|]and (ii) mark (checkin category) prediction accuracy (MPA), i.e,Í#(c=bc). Herebtandbcare the predicted time and category of thei-th checkin. Moreover, the clustering of sequences into dierent sets is done based solely on the training data and using these thresholds we assign clusters to sequences in the test data. We compare the prediction performance of Reformd with the following state-of-the-art methods: RMTPP [10]: A recurrent neural network that models timedierences to learn a representation of the past events. NHP [23]: Models an MTPP using continuous-time LSTMs for capturing the temporal evolution of sequences. SAHP [39]: A self-attention model to learn the temporal dynamics using an aggregation of historical events. Table 2: Performance of all the methods in terms of mark prediction accuracy (MPA) and mean absolute error (MAE) across all datasets. Results markedare statistically signicant (i.e. two-sided t-test with p ≤ 0.1) over the best baseline. Figure 2: Real life true and predicted inter-arrival times ∆ of dierent events efor (a) Virginia and ( b) Aichi. THP [40]: Extends the transformer model [32] to include the conditional intensity of event arrival and the inter-mark inuences. We omit comparison with other continuous-time models [16,26,30, 34,35] as they have already been outperformed by these approaches. We report the prediction performance of dierent methods across our target datasets in Table 2 and make the following observations: •Reformd consistently yields the best performance on all the datasets. In particular, it improves over the strongest baselines by 10% and 19% for category and time prediction respectively. These results indicate the importance of spatial and temporal ow-based transfer from external data for prediction in limited-data regions. •RMTPP [10] is the second-best performer in terms of MAE of time prediction almost for all the datasets. For some datasets THP [40] outperforms RMTPP for mark category prediction. However Reformd signicantly outperforms it across all metrics. Qualitative Analysis:We also perform a qualitative analysis to demonstrate how Reformd is able to model the checkin time distribution. For this, we plot the actual inter-checkin time dierences and the dierence time predicted by Reformd in Figure 2 for Virginia and Aichi datasets. From the results we note that the predicted inter-arrival times closely match with the true inter-arrival times and Reformd is even able to capture large time dierences (peaks). For brevity, we omit the results for other datasets. Table 3: Prediction performance of all the methods for product recommendation in Amazon datasets. Results marked are statistically signicant as in Table 2. MAE →MAE → Figure 3: Training curves of Reformd and RMTPP for time prediction with best MAE for (a) Virginia and (b) Aichi. Runtime:For all datasets, the times for training on the origin and later on target regions is within 3 hours, thus are within the range for practical deployment. Reformd outperforms other baselines and also brings exhibits a key feature of transfer learning, i.e. quick parameter learning [27,31]. We highlight this by plotting the time prediction error (MAE) corresponding to the epochs trained on the target region for Reformd and the best time prediction model, i.e. RMTPP. Figure 3 summarizes the results for Virginia and Aichi. We note that Reformd exhibits faster convergence than RMTPP for both datasets. More specically, the ow-based transfer procedure of Reformd can outperform most baselines even with a ne-tuning of a few epochs. The results also highlight the stable learning procedure of Reformd. We further evaluate the performance of Reformd in product recommendation, i.e. without spatial coordinates. Consequently, we use purchase records for three item categories from Amazon [25], namely Digital Music(DM), Appliances(AP) and Beauty(BY). For each item we use the user reviews as the events in a sequence with the time of the written review as the event time and the rating (1 to 5) as the corresponding mark. As in this case, we do not have a spatial density functionp(∆), we change the fusion equation 4 to include the predicted time of next purchase as: We consider Digital Music(|S| = 12k) as origin and Appliances(|S| = 7k) and Beauty(|S| = 6k) as target. From the results in Table 3, we note that even in the absence of spatial ows, Reformd outperforms other baselines across all metrics. In this paper, we present Reformd, a novel method for transferring mobility knowledge across regions by sharing the spatial and temporal NFs for continuous-time checkin prediction. As a future work, we plan to incorporate meta-learning based transfer [14].
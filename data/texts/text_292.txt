In collaborative ltering, it is an important way to make full use of social information to improve the recommendation quality, which has been proved to be eective because user behavior will be affected by her friends. However, existing works leverage the social relationship to aggregate user features from friends’ historical behavior sequences in a user-level indirect paradigm. A signicant defect of the indirect paradigm is that it ignores the temporal relationships between behavior events across users. In this paper, we propose a novel time-aware sequential recommendation framework called Social Temporal Excitation Networks (STEN), which introduces temporal point processes to model the ne-grained impact of friends’ behaviors on the user’s dynamic interests in an event-level direct paradigm. Moreover, we propose to decompose the temporal eect in sequential recommendation into social mutual temporal eect and ego temporal eect. Specically, we employ a social heterogeneous graph embedding layer to rene user representation via structural information. To enhance temporal information propagation, STEN directly extracts the ne-grained temporal mutual inuence of friends’ behaviors through the mutually exciting temporal network. Besides, user’s dynamic interests are captured through the self-exciting temporal network. Extensive experiments on three real-world datasets show that STEN outperforms state-of-the-art baseline methods. Moreover, STEN provides event-level recommendation explainability, which is also illustrated experimentally. • Information systems → Recommender systems;• Computing methodologies → Neural networks. Temporal Point Process; Sequential Recommendation; Attention Mechanism; Social Recommendation ACM Reference Format: Yunzhe Li, Yue Ding, Bo Chen, Xin Xinand Yule Wang, Yuxiang Shi,Ruiming Tang, Dong Wang. 2021. Extracting Attentive Social Temporal Excitation for Sequential Recommendation. In Proceedings of the 30th ACM International Conference on Information and Knowledge Management (CIKM’21), November 1–5, 2021, Virtual Event, QLD, Australia. ACM, New York, NY, USA, 10 pages. https://doi.org/10.1145/3459637.3482257 In recent years, sequential recommendation, as an emerging topic for capturing user dynamic interests from user behaviors, has received extensive attention from the industry and academia. Various methods emerge to utilize deep sequential models, such as Recurrent Neural Networks (RNNs) [9], Convolution Neural Networks (CNNs) [32], Attention mechanisms [11,14] to extract features from the successive behavior event sequence and enhance recommendation performance. Moreover, some works [1,15] model the time interval to capture users’ demands over time. Nevertheless, for an enormous set of items, only a tiny fraction is involved in a single user behavior sequence. This phenomenon limits the performance of sequential recommendation. Furthermore, based on the social inuence and social homophily [19,20,27], social relationship plays an important role in recommending suitable items for users. Some works leverage the social relations to aggregate similar users’ preferences to enhance collaborative ltering and matrix factorization or integrate deep neural networks into probabilistic matrix factorization for rating prediction [5,18,31,34,43]. Moreover, Graph Neural Networks (GNNs) are also utilized to enhance the performance of recommendation for better capturing the structural information of social relations [6,22,38,39]. However, these approaches are coarse-grained that only model user-level relationships and ignore the inuence of the user behavior sequence. To leverage social inuence to enhance sequential recommendation performance, existing methods [28,30] usually model both social relations and user’s behavior sequences in an indirect manner. As Figure 1 shows, the indire ct paradigm of the methods (the green path) usually can be summarized in three steps: (1) learning friends’ representation from their behavior sequences; (2) learning the target user’s representation from her own behavior sequence; (3) aggregating the inuence of friends on the target user through their representations. However, the indirect paradigm usually suffers from information loss due to the ignorance of the relationships between behavior events across users. Compared with the indirect paradigm, modeling the inuence of dierent user behavior sequences in the direct paradigm (the orange path) is more granular to avoid the problem mentioned above and better model the interaction between cross-user events. Nonetheless, to the best of our knowledge, existing works do not contemplate such a direct modeling paradigm, leaving vast scope Figure 1: An illustration of two paradigms to deal with asynchronous behavior event sequences and social relations in online communities. for exploration. Besides, unlike the synchronous sequence taken at consecutive equal intervals, the users’ behavior sequences tend to be asynchronous when considering interactions across user events. Dierent from only taking the order of events into consideration, how to leverage the temporal information is another challenge for properly modeling the asynchronous sequences. We use a simple example shown in Figure 1 to illustrate this issue. If Alice buys heels within a short time after her friend Bob buys dress shoes, i.e., 𝑡≤ 𝑡, then it indicates that Bob’s behavior is more likely to aect her (e.g., attending certain common activities). But if𝑡≪ 𝑡or 𝑡> 𝑡, Bob’s behavior will have less or no eect on Alice. If the temporal information is lost, the model will not be able to determine the specic relationship between the two events. Hence, the time interval should be treated as important as the order, especially when we note the interaction of cross-user events. To address the problems mentioned above, we propose a novel approach calledSocialTemporalExcitationNetworks (STEN), which models individual user’s sequence and the interaction between users together. STEN is designed to learn the inuence of temporal information by modeling the temporal eect, which is decomposed into social mutual temporal eect and ego temporal eect. Specically, the former aggregates the impact of friends’ behavior sequences over time, and the latter describes the changes in interests reected by the user’s own behavior sequence. Our model introduces the temporal point process, which is a powerful tool for asynchronous sequence modeling, to model the eect of related cross-user events with temporal information in a ne-grained manner. Specically, node representation of both users and items are extracted from the social relationship structure and interactions by a social heterogeneous graph embedding layer. To explore the impact of cross-user events in a direct paradigm, we model the interaction of friends’ behavior event sequences as mutually exciting processes and enhance it by attention mechanism to better describe the social mutual temporal eect in the mutually exciting temporal network. Finally, a self-exciting temporal network is employed to model the target user’s ego temporal eect and generate the user’s temporal representation. To summarize, we make the following contributions in this paper: •We propose to take temporal information and social relationships into account in the sequential recommendation, i.e., model the impact of friends’ behavior event sequences at the event level. To the best of our knowledge, it is the rst attempt to enhance sequential recommendation performance with event-level social information in a direct paradigm. •We propose a novel time-aware sequential recommendation model STEN. Two temporal excitation networks are designed for modeling both the event-level dynamic inuence of social relationship and user’s dynamic interests. In particular, STEN can model the ne-grained associations of cross-user events. •We conduct extensive experiments on three real-world datasets and the results demonstrate that STEN outperforms state-of-theart recommendation models and the eectiveness of the modules in STEN. Besides, we illustrate the advantage of the event-level explainability of our model. In this section, we rst introduce the temporal point process as background and then give the problem formulation. A temporal point process is a stochastic process consisting of a series of events in the continuous-time domain. Let𝐻= {𝑡|𝑡< 𝑡} be the set of historical events that happened before time𝑡, where {𝑡, 𝑡, ..., 𝑡}is the time sequence of past events. To characterize the Point ProcessP(𝜆(𝑡 |𝐻))for arbitrary time𝑡in a certain time interval[0,𝑇 ], a conditional intensity function𝜆(𝑡|𝐻)is imported to represent the intensity function of the event occurring at time𝑡 under the condition of the subset of history events𝐻up to time𝑡. Based on the conditional intensity function and the past events in {𝑡, 𝑡, ..., 𝑡}, the probability density function of the next event at time 𝑡is obtained as follows. 𝑝 (𝑡|𝑡, 𝑡, ..., 𝑡) = 𝜆(𝑡|𝐻)𝑒𝑥𝑝−𝜆(𝑡|𝐻)𝑑𝑡. (1) The probability density function of a whole observed event sequence occurred at{𝑡, 𝑡, ..., 𝑡}in interval[0,𝑇 ]could be represented by: 𝑝 ({𝑡, 𝑡, ..., 𝑡}) =𝜆(𝑡|𝐻)𝑒𝑥𝑝−𝜆(𝑡|𝐻)𝑑𝑡. (2) The log-likelihood function 𝓁 of the observing event sequence is: 𝓁 (𝑝 ({𝑡, 𝑡, ..., 𝑡})) =𝑙𝑜𝑔(𝜆(𝑡|𝐻)) −𝜆(𝑡 |𝐻)𝑑𝑡. (3) Denote as Eq. (3), the conditional intensity function plays an essential role in mapping the history event sequence to the probability density function. Take the Hawkes Process [8] as an example, the conditional intensity function of this popular point process is denoted as Eq. (4): where𝜑 (·)is a non-negative function. Eq. (4) shows that the historical events have an incentive eect on the occurrence of future events and the inuence of historical events is superimposed in Figure 2: The architecture of STEN. Firstly, through the social graph embedding layer, the node representation of users and items is generated by leveraging the sequence of events and social relations. Then, the embeddings of events are sent to the mutually exciting attention networks to obtain the social mutual temporal representations. Next, mutual temporal representations are fused in self-exciting temporal networks to capture the temporal dynamic representation ℎ attention is adopted to get the general interests ℎ. After that, ℎ adopts joint learning for both tting the temporal point process and recommendation. the form of accumulation. Based on whether there are interactions between multiple processes, the Hawkes Process could be divided into mutually exciting and self-exciting processes. The time-aware sequential recommendation with social information takes both user behavior sequences and their social relations into consideration. Let𝑈,𝐼denote the set of users and items respectively and|𝑈 |, |𝐼 |represent the total number of users and items. For each user𝑢 ∈ 𝑈, her behavior sequence is described ass= {𝑖, 𝑖, ..., 𝑖}, where𝑙is the length of sequence and𝑖∈ 𝐼 denotes the item that user𝑢has interacted at time𝑡. The set of all users’ behavior sequences is dened as𝑆 = {s, s, ..., s}. For a subset of users𝐹 ⊂ 𝑈, the set of their behavior sequences is denoted asS. In addition, user’s social relationship could be dened as a social network𝐺 = (𝑉 , 𝐸), where𝑉denotes the node set of users and𝐸is the edge set that represents social links between users. Formally, given users’ social relations network𝐺and their behavior sequences𝑆, our task is to make a prediction and recommend the next item that the user may be interested in. As mentioned above, to take the inuence of both behavior sequences and social relations into consideration, we design a novel time-aware sequential recommendation model STEN, which introduces temporal point processes to directly model the ne-grained impact of friends’ behaviors at the event level. The architecture of our model STEN is shown in Figure 2. Specifically, we leverage social relations and user behavior sequences to generate the social node embedding for both users and items through the social graph embedding layer. To capture the ordinary , ℎare fused to make recommendation. In addition, here social demands, vanilla attention is adopted to get the general interests of the target user. To directly model the impact of friends’ behavior sequences, the embeddings of their interacted sequences are sent to the mutually exciting temporal network as mutually exciting processes to generate the social mutual temporal representations. To establish the connection within the sequences, these social mutual temporal representations are fused in the self-exciting temporal network to capture the target user’s dynamic interests. After that, we fuse the general interests and the dynamic interests to make recommendations. To guarantee eective learning from the temporal point process, we adopt joint learning in the training stage for both tting the temporal point process and recommendation. 3.1.1 Social Heterogeneous Graph Embedding. The social graph embedding aims to extract the general information from the social relations and interactions. In our model, we leverage a heterogeneous graph to represent the relationships for better scalability. For a social heterogeneous network𝐺= (𝑉, 𝐸),Vdenotes the nodes of both items and users,𝐸denotes the edge set which involves two types of edges: (1) user-user social links; (2) user-item interaction connection. We rst generate the embedding matrices 𝑈 ∈ R,𝐼 ∈ Rvia embedding lookup, where𝑑denotes the dimensionality of embedding. To tackle the two types of edge, we give two kinds of aggregation to model both users and items. For users, we could directly establish the social relation network through user-user edges and then apply attention aggregation on it, shown as Eq.(5): whereℎ∈ Ris latent feature of user𝑢,𝜎 (·)is the non-linear activation function,𝑁denotes the neighbor set of user𝑢,W∈ Rand𝑏∈ Rare weights and bias of the graph network, 𝑎is the attention coecient of user𝑢to user𝑗. The attention coecient is obtained by applying a similarity calculation: where||denotes the concatenation operation between two vectors and 𝑣∈ Ris the weight vector for users. Dierent from user links, there is no direct relationship between items. To establish the relation, we leverage meta-path to nd highorder neighbors around the heterogeneous graph[35]. If two items are interacted with the same user, they are more likely to have something in common that satises user’s interests. Moreover, the items interacted by the same social group are more likely to have relationship. Based on the assumption, we dene the𝑘-order social meta-path𝜙as{𝑖, 𝑢, 𝑢, ..., 𝑢, 𝑖}, which denotes a combination relation between item𝑖and𝑖,𝑘is the number of users between two items.𝑁denotes the𝑘-order meta-path neighbors of item𝑖. In the next, the attention aggregation is applied to the item vertices, shown as follows: whereℎis the𝑘-order representation of item𝑖,W∈ Rand 𝑏∈ Rare weight and bias parameters of the graph network. Similar to Eq. (6), the calculation of𝑎is shown as Eq. (8), where 𝑣∈ Ris the weight vector for items. In addition, an order-level normalization is applied to items to obtain the graph-based representation: whereℎdenotes the meta-path based representation of item𝑖,𝑙is the number of meta-paths,c = {𝑐, ..., 𝑐}are weight parameters. We replace ℎby ℎin the rest of the paper for convenience. 3.1.2 Mutually Exciting Temporal Network. To capture temporal features and the ne-grained inuence of social relations, STEN imports two neural temporal point processes: a mutually exciting process to model the inuence of friends’ behaviors from each event and a self-exciting process to model user’s dynamic interests. Dierent from the RNN-based neural point process model, STEN utilizes the attention mechanism, which could avoid the disappearance of long-distance dependence. Specically, STEN divides the mission into two steps: 1) Model the mutual inuence of other social-connected users with the target user through mutually exciting temporal network; 2) Extract the user temporal feature from her own sequence through self-exciting temporal network. Firstly, we model the target user𝑛and friends’ event sequences as temporal point processes, denote asP(𝜆(𝑡|𝐻)),{P(𝜆(𝑡|𝐻))}, where𝑀is the maximum number of friends.|P|denotes the length of event sequence for user𝑗. In each temporal point process, an event𝑒means that user𝑗has an interactive behavior with item at time𝑡. To measure friends’ inuence for each event timestamp in target behavior sequence, STEN models a mutually exciting process for the target user, dened as: where𝐻is the condition of user𝑗’s behavior history before time 𝑡,𝜆(𝑡, 𝑡)represents the mutual inuence intensity of friend𝑗at time𝑡on the target user at time𝑡.𝛼is a normalized parameter. For users whose friends exceed𝑀, we adopt a simple sampling strategy to randomly select𝑀friends. Because Eq. (10) explores the impact on the target user, we assume that the friends’ events are independent of each other. Based on that assumption, the mutually exciting temporal network could treat each event separately. The mutual inuence intensity of each friend can be regarded as a sum of the inuence of dierent events and the mutual inuence conditional intensity with two events 𝑒, 𝑒follows the form of: whereΦ(𝑒, 𝑒)is the cumulative mutual inuence intensity function for events 𝑒, 𝑒and dened as follows: Inspired by[23], we propose to model the cumulative mutual inuence intensity functionΦ(𝑒, 𝑒), rather than the mutual inuence intensity. Compared with the latter, our approach has less limitation in exible modeling by avoiding costly approximate calculation of integral of mutual inuence condition intensity shown in Eq. (10). To take both the content of events and time interval into consideration, the cumulative mutual inuence intensity function contains three components: the correlation between two events, the temporal relationship and base intensity, which is dened as follows: Φ(𝑒, 𝑒) = F (𝑐𝑜𝑟𝑟 (𝑒, 𝑒)+𝛽 (𝑡−𝑡)|   {z   }+ 𝜇|{z} whereF(·)is a mapping function:R → Rto guarantee to obtain the positive cumulative mutual inuence intensity, and we use softplus here. To consider the inuence of friends’ events, we concatenate friends’ event embedding together asS∈ R, 𝑑= 𝑀 ×𝑙 and𝑙denotes the maximum length of the event sequence. Based on Eq. (11) to (13), we have: 𝐴= 𝑆𝑜 𝑓 𝑡𝑚𝑎𝑥 (𝑚𝑎𝑠𝑘(QK√+ 𝛽Δt + 𝜇 whereQ= ℎW,K= SWare query and key matrices trainable parameters of networks.𝛼∈ Ais the mutual attention score for friends’ events.ℎ∈ s,ℎ∈ Sare the representations of interactive item of target user and her friends learned from social heterogeneous graph, respectively.Δtdenotes the time interval between the friends’ events and the target event𝑒. Besides, we apply a mask operation on the temporal attention network to avoid leveraging the “future information”. In details, for target event𝑒, we mask all friends’ events that happened after time 𝑡. After the process of mutually exciting temporal network, STEN has extracted the inuence of friends on the target user’s point process, denotes asP(𝜆(𝑡 |𝐻)) = 𝑇= {𝜆},𝜆is the social mutual temporal representation of the𝑖-th event for user𝑛. However, there still leaves eorts on modeling the target user’s event sequence to obtain her temporal representation. 3.1.3 Self-Exciting Temporal Network. The goal of a self-exciting temporal network is to fuse the sequence of temporal representations for interactive items to generate the dynamic representation of users. The main idea of this structure follows the self-exciting process, which is combined with the attention mechanism. For the target processP(𝜆(𝑡|𝐻)), we apply the attention mechanism to capture the dependency from the sequence without the limitation of length: 𝑇= 𝑆𝑜 𝑓 𝑡𝑚𝑎𝑥 (𝑚𝑎𝑠𝑘(√+ 𝛽Δt + 𝜇))V whereQ= 𝑇W, K= 𝑇W,V= 𝑇Ware query, key and value matrices obtained by linear transformations of𝑇.W, W,W∈ R,𝛽, 𝜇∈ Rare trainable parameters. Similar to the mutually exciting temporal network, we also apply temporal mask operation on the sequence to avoid leveraging “future information”. From Eq. (16), we obtain the discrete value of condition intensity function over events𝑇= {𝜆}. We use the output of the last term as the temporal representation of user ℎ. 3.1.4 Model Prediction. In addition, to model general social demands, we utilize the target user embeddingℎlearned from social heterogeneous graph as the query and apply a vanilla attention mechanism and average pooling to the target user interacted item sequence𝐼= {ℎ, ℎ, ...ℎ}, which is also generated by social heterogeneous graph, shown as: whereQ= ℎW, K= 𝐼W, V= 𝐼Ware query, key and value matrices transformed byℎ, 𝐼.W, W, W∈ Rare trainable parameters in transformation. The nal representation of user is obtained by a linear combination of the two parts: temporal behaviors and social inuence, shown as follows: where||denotes concatenation operation,W∈ Ris a transformation matrix andℎis the nal representation of the user. The prediction of next item is obtained through a softmax function. whereI ∈ Ris the embedding matrix of items,𝑌denotes the probabilities of items will be selected as the next one. In the training stage, we adopt the Bayesian Personalized Ranking (BPR) framework[25] for optimizing the recommendation task: where𝐷, 𝐷denote the training set and unobserved item set,ˆ𝑦 is the predicted probability of observed item𝑖andˆ𝑦is the predicted probability of the sampled unobserved item𝑖. To eectively learn from the temporal sequence, we consider the tting of temporal point process by optimizing the maximum log-likelihood of observed items: L= −𝑙𝑜𝑔(𝜆(𝑡|𝐻)) +𝜆(𝑡 |𝐻)𝑑𝑡 whereΔ𝑡is the time interval between observed items. It leverages trapezoidal rule, one of numerical approximations, to calculate the integral in Eq. (21). We nally adopt joint learning for optimizing both the loss of BPR and temporal point process, which is dened as Eq. (22): where𝛾andΘare regularization weights and the set of trainable parameters, respectively. 4.1.1 Datasets. To evaluate the performance of our proposed model and other baselines, we conduct experiments on three real-world datasets. We provide descriptive statistics of them in Table 1. Delicious.This dataset contains social networking and bookmarking information from Delicious online social bookmarking system. It involves the sequence of tagging for each user with timestamps and relationships between users. Yelp.This dataset contains abundant users’ reviews for local businesses (it is also timestamped) on yelp platform. Here we treat each review as an interactive behavior with a business. Ciao.This dataset involves users’ rating records and social relations, e.g., trust relations with other users. For data preprocessing, we follow the common previous works[11, 29] to convert all numeric ratings and reviews to implicit feedback with value 1. To avoid too large period, we choose rst 10% data as a division for Yelp dataset to do experiments. To guarantee the quality of datasets, we lter out users that interacted less than 5 times and items appear less than 10 times for Yelp and 5 for the others. For all datasets, we use the last item of each sequence for testing and use the penultimate item for validation. 4.1.2 Evaluation Metrics. We adopt several common evaluation metrics to evaluate the recommendation performance, including Recall, Normalized Discount Cumulative Gain (NDCG) and Mean Reciprocal Rank (MRR): • Recall@k.It means the percentage of groundtruth relevant items appear within the top-𝑘ranking list. Consider to next-item recommendation, it is equivalent to the hit ratio. • NDCG@k.It is a standard ranking metric and reects both the correlation and position for each recommended item. For nextitem recommendation, it is formulated as NDCG=, where 𝑟is the rank of the positive item. • MRR@k.It takes the actual rank of target item into consideration and is calculated by the mean value of the reciprocal of target item’s actual rank. When the actual rank is out of k, the reciprocal rank is set to zero. 4.1.3 Baseline Methods. To evaluate the performance of STEN, we choose several comparative baselines, including state-of-the-art methods from both sequential and social recommendation. • BPR-MF[24]: It utilizes matrix factorization and rating matrix to model latent factors of users and items with the loss of Bayesian pairwise ranking loss. • FPMC[26]: This method captures users’ preference from their sequential behaviors based on Markov Chain. • SRGNN[40]: This method treats user’s sequential behaviors as graph-structural data to capture features from complex transitions of items. • SASRec[11]: This method adopts an attention mechanism to capture users’ sequential behaviors and makes prediction based on relatively few actions. • BERT4Rec[29]: This method employs a deep bidirectional selfattention to model user behavior sequences and achieves strong performance. • THP[45]: This method is a temporal point process model, which utilizes a transformer to capture the long-term dependency in the temporal sequence. • TiSASRec[15]:TiSASRec is a time-sensitive method, which models both the absolute positions of items and the time intervals between them together. • SBPR[43]: This method leverages social connections to enhance the performance of Bayesian Personalized Ranking. • DANSER[39]: This method collaboratively learns representation of user-specic attention and context-aware attention in social information by dual graph attention networks. • Dinet[38]: Dinet is a deep inuence propagation model that stimulates how users are inuenced by the recursive social diusion process for social recommendation. 4.1.4 Implementation Details & Parameter Seings. In our experiments, we implement our model with Python 3.7 and Pytorch 1.7.0 and train it and other baselines on 4 Nvidia GTX 2080 GPU with 12G memory. In parameter settings, we use Adam[13] as the optimizer for all models. In addition, we also adopt mini-batch with batchsize of 256. The embedding size and learning rate for all methods are determined by grid search from {40, 60, 80, 100, 120, 140} and {0.001, 0.005, 0.01 }, respectively. The parameters are randomly initialized to t normal distribution N(0,0.01). To avoid overtting and improve robustness, we add the dropout operation with dropout ratio tuning from{0.1,0.2, ...,0.9}and regularization term with coecient tuning from{0.0001,0.0005,0.001,0.005}. For a fair comparison, the results for all baselines are reported with the optimal hyper-parameter settings. For Dinet, we remove the fusion component for both user and item to accommodate the absence of features. For THP, we transfer the task of event type prediction to item recommendation and remove the time prediction loss to improve its performance. For our model STEN, the max-order of the graph is set to 2. The sampling number of friends is set to 10 and the maximum sequence length depends on characteristics of datasets, we set {300, 30, 50} for three datasets, respectively. Table 2 shows the performance of our model and baselines over three datasets under the metrics of Recall@k, NDCG@k, MRR@k, k = {10, 20}. According to table 2, we can get the following observation. The conventional recommendation method only takes the rating or interaction into consideration, without both the social relationship and the temporal information, which could explain why BPR-MF achieves poor performance. For general sequential baselines, FPMC performs better than BPR-MF, which indicates the local sequential information is benecial to sequential recommendation. We believe that the reason SR-GNN performs worst in the general sequential method is that it treats each session individually. SASRec and Bert4Rec both utilize attention mechanisms to capture sequential information. Bert4Rec overcomes SASRec on two datasets, which indicates the advantage of bi-direction networks. In addition, for time-aware sequential methods, e.g., THP utilizes the transformer-based neural Hawkes process to model the asynchronous temporal sequences. However, its performance is worse than other methods. It shows the limitation that it aims to obtain the event representation via the neural Hawkes process. Besides, we think the way to transfer THP into the recommendation task is too direct to be eective. TiSASRec extends SASRec by taking the time interval into consideration and achieves the second-highest results over three datasets, which demonstrates that time interval is an important factor in recommendation. For social-based methods, SBPR is worse than the other two, which indicates GNN is a strong tool to model social relations. DANSER gets great improvement by utilizing the dual attention Table 2: Comparison of STEN and baselines over three datasets. The boldface indicates the highest score and the underline indicates the second highest score. BPR-MF is conventional baseline. FPMC, SRGNN, SASRec and Bert4Rec are general sequential baselines. THP and TiSASRec are time-aware sequential baselines. SBPR, DANSER and Dinet are social baselines. Table 3: Ablation study on three datasets. (R@10 for Recall@10, N@10 for NDCG@10) Method w/o GE 0.3355 0.2722 0.0468 0.0229 0.0976 0.0582 w/o MT 0.3201 0.2646 0.0431 0.0215 0.0833 0.0490 w/o ST 0.3075 0.2529 0.0447 0.0221 0.0815 0.0482 w/o TC 0.3163 0.2617 0.0463 0.0232 0.0826 0.0484 Default 0.3492 0.2833 0.0512 0.0262 0.1019 0.0596 mechanism to capture the social information for both users and items. Dinet, which uses the defusion graph structure to stimulate social inuence propagation to improve the performance, has a similar performance to the former. Finally, our proposed model STEN achieves the best performance on three datasets and all metrics. The reasons could be summarized as follows: (1) it introduces the temporal point process as the prototype to model both sequential order and time interval; (2) the designed structure mutually exciting attention network achieves the eect of directly modeling the inuence of friends sequence on the target user and capture the temporal relationships between behavior events across users; (3) it utilizes a social heterogeneous graph to generate eective social node embedding. To justify the eectiveness of our components, we analyze the impact of utilization of social and temporal information via an ablation study over all datasets. Table 3 shows the performance of STEN and all variants. The variants and the analysis of experiment results are listed as follows: (a) Remove SocialGraphEmbedding Layer. In our model STEN, social information is utilized by two components, the social heterogeneous graph network, and mutually exciting attention network. We replace the structural graph embedding with a trainable embedding lookup operation. The results show that it suers a clear decrease compared to the default model, which denotes the structural view of social relationships is important to describe user and item representations. (b) RemoveMutual-ExcitationTemporal Networks. Here we remove the part of mutually exciting and directly utilize the social graph embedding to calculate the event conditional intensity. The result shows that it suers a signicant drop. The phenomenon that it performs worse than (a) could demonstrate the superiority of the direct paradigm. Without the mutually exciting temporal networks, the model degrades to a user-level model and suers a lot of information loss. (c) RemoveSelf-ExcitationTemporal Networks. Here we replace the self-exciting module with average pooling. We can observe that it performs the worst among all variants. The result draws to the fact that the impact of the association between user’s own behaviors is more important than the impact of friend’s behaviors. (d) RemoveTemporalComponent. To test the eectiveness of leveraging temporal information, here we remove the temporal component in STEN. Specically, we remove the temporal term in Eq. (12) and the temporal loss functionL. The results indicate that removing the temporal component leads to signicant performance degradation. We believe when temporal information is lost, the model cannot capture the specic relationship between events. 4.4.1 Performance Comparison w.r.t. the Order of Neighbors. As discussed in Section 3.1.1, we test the impact of a dierent order of neighbors in the social heterogeneous graph. Here we choose order k∈ {1,2,3,4}to do experiments and the higher-order social relation graph involves the information of the lower-order neighbors. Figure 3 illustrates the performance under the condition of a dierent order of neighbors. We can nd that the performance is improved by the second-order graph. We analyze it for the reason that the secondorder graph provides extra information on social connections and contributes to social sparsity. However, when the order becomes larger, the results change to worse. We consider that it is because the higher-order graph leads to graph convergence and noise, i.e., the dierences between users are narrowed. 4.4.2 Performance Comparison w.r.t. the Window Size of Friend Sequence. STEN extracts the event-level social inuence through the mutually exciting temporal network. The larger window size brings richer social information and more complicated calculations. Hence, we explore the impact of the window size of friend behavior event sequence. As Figure 4 illustrates, with the increasing of the window size, the performance is rst improved and then converges. When the window size is too short, the model only captures the current state of the friend, which contains a large deviation. The selection of window size depends on the average length of the user’s event sequence. 4.4.3 Performance Comparison w.r.t. the Number of Sampled Friends. To reduce the computation for users with complex relationships, STEN adopts a random sampling operation for their friends in mutually exciting temporal network. Figure 5 illustrates how the model’s performance varies with the number of sampled friends. The results show that the performance of the model improves rst and then converges with the increase of the number of samples. When only one friend is sampled, the performance of the model decreases signicantly. Compared with the rest, the result on Delicious shows it is insensitive to the number of sampled friends. We consider the reasons can be summed up into two points: 1) As Table 1 shows, the average relations is obviously less than the rest. 2) It has a smaller proportion of Time-Ecient Friends (TEF). The denition of TEF is that the sequence of behavior events has an intersection with the target user in time. The proportions of TEF over three datasets are shown in Table 4. In this part, we conduct a case study on the Delicious dataset to show the explainability of our model. We visualize the attention weights Figure 4: The impact of the window size of friend sequences. Figure 5: The impact of the number of sampled friends. Figure 6: Visualization of attention weights in STEN. 𝐻denotes the impact of friends to target user. 𝐻denotes the impact of friends events on target user event. 𝐻, 𝐻denote the impact of target user behavior events on themselves, where 𝐻involves the temporal information, but 𝐻does not. of dierent modules in Figure 6. The value in𝐻, which is obtained from the graph network component, indicates the impact of friends on to target user. It shows the coarse-grained relationships at the user level, while𝐻, 𝐻, 𝐻describe the ne-grained relationships at the event level.𝐻is obtained from mutually exciting temporal network, which indicates the impact of a friend’s events on event #146. The value 0 in𝐻means that the event happens after event #146, which obeys the rule that no future information is leveraged. 𝐻, 𝐻indicate the impact of target user behavior events on themselves. The dierence is that𝐻involves temporal information and event-level social relation, while𝐻only has user-level social information. Besides, we use these two parts to make recommendations separately and show the predicted position of the ground truth event. It is clear that the two parts have dierent focuses on the event sequence and aect the performance of the model. We evaluate the temporal and space complexity of STEN by recording the inference time and the model parameters. We compare STEN with the best-performing baselines from three categories mentioned in section 4.2 and results are reported in Table 5. As online recommendation services usually have high requirements on latency, the computational cost during inference is more important than that of the training stage. Compared with the baselines, the increased inference time of STEN is 11% on average, which denotes the eciency of our model. Besides, we use the number of model parameters to measure the space complexity of models. Despite STEN has performed ne-grained modeling at the event level, it gets the 10% increase on average, within an acceptable range. Compared with the embeddings of both users and items, the parameters in heterogeneous graph component and temporal excitation networks only occupy a small proportion. Table 5: Comparsion of model complexity on Ciao dataset. MethodInferenceTimeINCR. Parameters INCR. In this section, we briey review the related research work from three aspects: social recommendation, general sequential recommendation, and time-aware sequential recommendation. Social Recommendation.Leveraging social information has played an essential role in alleviating the problem of data sparsity and enhancing recommendation. Kautz et al. [12] import social networks into traditional method collaborative ltering for item recommendation. Ma et al. [17] propose SoRec that incorporates trust network into user tastes analysis through probabilistic matrix factorization. In addition, factor-based random walk is combined with a coupled latent factor model in[41] to deal with both social connections and interest interactions. Besides, Zhao et al. [43] extend the framework of social networks with collaborative ltering to the one-class recommendation. With the development of neural networks, some research works[5,36] utilize deep neural networks to extract information of social networks and learn the complex latent representation. ARSE[30] combines attention mechanism with social LSTM to leverage the temporal information to enhance social recommendation. GraphRec[7] utilizes GNNs to model user-user and user-item graphs and heterogeneous strengths in social recommendation. To better simulate the recursive diusion in social networks, Dinet[38] is designed with an inuence propagation structure to model users’ latent embedding. To learn latent features from both neighbors and related items, a dual graph attention network model named DANSER[39] is proposed and it solves the problem of diversity of neighbor’s inuence. DGRec[28] utilizes RNNs to model users’ dynamic interests and generates the user representation rstly and then combines it with their social relationship through GNNs. General Sequential Recommendation.Sequential recommendation has attracted a lot of attention from both academia and industry. The key of sequential recommendation is to extract the hidden information from the user behavior sequence. Rendle et al. [26] propose FPMC, which imports Markov Chain (MC) to matrix factorization for user state transition. In addition, RNN and its variants, e.g., Long Short-Term Memory (LSTM) [10] and Gated Recurrent Unit (GRU) [3] are used to model the sequential behaviors of user for their latent features in many related studies[9,37,42]. However, RNN-based models usually suer from low computational eciency. CNN-based model Caser[32] is proposed to use a bi-direction convolution lter to learn sequential patterns. To improve the ability of modeling long sequence, attention-based method Transformer[33] and BERT[4] are utilized by SASRec[11]and BERT4Rec [29] to capture sequential information, respectively. Wu et al. propose SRGNN[40] that utilizes Gated graph neural network[16] to capture structure information from sequential data. Time-aware Sequential Recommendation.To take the time interval of user actions into consideration, there also develops many time-sensitive recommendation methods. Time-LSTM[44] captures the user’s long short-term dynamic interests through the specic time gates. Based on SASRec[11], TiSASRec[15] take the time interval between dierent actions into consideration and model different time intervals as relations between any two interactions. Besides, another way for the time-sensitive method is to formulate the sequence as a temporal point process. LSHP[2] models the long-term and short-term dependency between users’ online interactive behaviors through a Hawkes Process. With the development of neural point process, e.g., neural Hawkes Process[21], CTRec[1] utilizes a convolutional LSTM and attention mechanism to capture short-term and long-term interests, respectively, based on a demand-aware Hawkes Process. However, RNN-based point process models have limitations in both capturing long-term dependency and computational eciency. Hawkes process is combined with self-attention mechanism in[45] to alleviate the limitations. The above time-aware studies leverage the temporal information to model the behavior sequence of individual users. By contrast, our model STEN aims to leverage the temporal information not only to model the user’s dynamic interests but also to capture the relation among users through their temporal mutual dependency. In this paper, we propose a novel time-aware sequential recommendation model STEN, to model the ne-grained temporal behavior sequences of users with social information. STEN establishes a social heterogeneous graph to learn the node representations of users and items. In order to model the time-aware behavior sequence, we introduce two classical temporal point processes as prototypes to enhance STEN. STEN models the impact of friends behavior sequences and user’s behavior sequence in a direct paradigm by mutually exciting temporal network and self-exciting temporal network. Compared with the previous methods, STEN could model the temporal relationships between cross-user events. As a future plan, we will improve the current model to be type-aware to better model the inuence of dierent types of events and to expand its applicable scenario.
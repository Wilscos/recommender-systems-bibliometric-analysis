{xidongbo17s, zhuangfuzhen, heqing}@ict.ac.cn, yanchi.liu@rutgers.edu, gujingjing@nuaa.edu.cn, xionghui@gmail.com Human mobility data accumulated from Point-of-Interest (POI) check-ins provides great opportunity for user behavior understanding. However, data quality issues (e.g., geolocation information missing, unreal check-ins, data sparsity) in real-life mobility data limit the effectiveness of existing POIoriented studies, e.g., POI recommendation and location prediction, when applied to real applications. To this end, in this paper, we develop a model, named Bi-STDDP, which can integrate bi-directional spatio-temporal dependence and users’ dynamic preferences, to identify the missing POI check-in where a user has visited at a speciﬁc time. Speciﬁcally, we ﬁrst utilize bi-directional global spatial and local temporal information of POIs to capture the complex dependence relationships. Then, target temporal pattern in combination with user and POI information are fed into a multi-layer network to capture users’ dynamic preferences. Moreover, the dynamic preferences are transformed into the same space as the dependence relationships to form the ﬁnal model. Finally, the proposed model is evaluated on three large-scale real-world datasets and the results demonstrate signiﬁcant improvements of our model compared with state-of-the-art methods. Also, it is worth noting that the proposed model can be naturally extended to address POI recommendation and location prediction tasks with competitive performances. Recent years have witnessed the rapid development and popularity of location-based social networks (LBSNs) and location-based services (LBS). These services have attracted many users to post their life experiences in the form of a check-in which contains a POI (a physical location, such as museum or restaurant), a timestamp, and sometimes comments. Data collected by LBS has been effectively leveraged for POI-oriented applications like POI recommendation and location prediction for potential users to improve user experiences and quality of services. In this paper, we focus on missing POI check-in identiﬁcation, which is to identify where a user has visited at a speciﬁc time in the past, while existing POI-oriented studies mainly focus on recommending or predicting a POI where a Corresponding author: Fuzhen Zhuang Copyright © 2019, Association for the Advancement of Artiﬁcial Intelligence (www.aaai.org). All rights reserved. user may go in the future. This missing POI check-in identiﬁcation task is non-trivial due to the following reasons. First, geolocation information missing, which causes trouble for user understanding, frequently occurs in raw reallife check-ins. For example, if a user visits a location without GPS signal, the geolocation information may be missing. And missing POI check-in identiﬁcation helps to identify where a user has visited at given time. Second, there are many obvious unreal check-ins in raw real-life check-in data. For example, two check-in records of the same users are far apart in geographical distance, but the time interval is very short. The unreal data maybe recorded due to device failure or user cheating. Missing POI check-in identiﬁcation can give a reference list and preliminarily ﬁlter the data. Third, almost all kinds of POI recommendation and location prediction tasks suffer from data sparsity problem, which is much worse than other human activity data such as online purchase and browsing. And missing POI checkin identiﬁcation is able to alleviate the sparsity problem for user understanding. Moreover, the task can be used for social good, such as identifying traces of criminal activity or missing population analysis. Recently, efforts have been made to solve the POI recommendation and location prediction problems, which are most related to our problem. Factorizing Personalized Markov Chain (FPMC) (Rendle, Freudenthaler, and Schmidt-Thieme 2010) is one widely used method for sequential prediction, and has been applied to embed the personalized Markov chains and the localized regions (FPMCLR) (Cheng et al. 2013) for next-basket recommendation. Personalized Ranking Metric Embedding (PRME) (Feng et al. 2015) integrated sequence, preference and geographical inﬂuence to improve the recommendation performance. An unsupervised approach (Bao et al. 2012) has also been adopted to model personalized contexts of mobile users. Moreover, neural networks have been used in the ﬁeld of POI recommendation and location prediction (Liu et al. 2016; Wang et al. 2017; Yin et al. 2017). A method called Spatial Temporal Recurrent Neural Networks (ST-RNN) (Liu et al. 2016) was proposed to model local temporal and spatial contexts in each layer with time-speciﬁc transition matrices for different time intervals and distancespeciﬁc transition matrices for different geographical distances. However, these methods are not designed for missing POI check-in identiﬁcation. They can not model global spatial information and spatio-temporal dependence relationships, which are very important in check-ins. Besides, these methods utilize past check-in information for future prediction or recommendation from a single direction perspective, while the missing POI check-in identiﬁcation task needs to utilize the check-in information before and after the given time, which naturally calls for a bi-directional solution. Along this line, we propose a novel Bi-directional Spatial and Temporal Dependence and users’ Dynamic Preferences (Bi-STDDP) model for missing POI check-in identiﬁcation. The bi-directional model can utilize more information than the above recommendation and prediction methods and is more suitable for the proposed task. Moreover, Bi-STDDP integrates local temporal information and global spatial information. Therefore, Bi-STDDP can well model not only the local context relationships but also the global ones. As we know, check-ins have complex spatio-temporal dependence relationships. For example, it is impossible that two check-in records of the same user are far apart in geographical distance, but the time interval is very short. This kind of complex spatio-temporal dependence can be modeled by Bi-STDDP and learned automatically by gradient descent performed on the whole model. In addition, target temporal pattern in combination with user and POI information can capture users’ dynamic preferences. Finally, the spatiotemporal dependence together with users’ dynamic preferences provide accurate identiﬁcation on missing POI checkins. The main contributions of this work are listed as follows: • The proposed model can address the non-trivial missing POI check-in identiﬁcation task using bi-directional sequences to model complex global spatial and local temporal dependence relationships and users’ dynamic preferences. • The traditional POI recommendation and location prediction tasks can be seen as a special case of the missing POI check-in identiﬁcation task. And the proposed model can be easily extended to address POI recommendation and location prediction tasks by using only forward sequence information. • Experimental results on real-world datasets show the proposed Bi-STDDP model obtains signiﬁcant improvement compared with existing state-of-the-art approaches. The most related work to missing POI check-in identiﬁcation is location prediction and POI recommendation. In this section, we present the related work in twofold: general methods on location prediction and POI recommendation, and neural network based methods. Location Prediction and POI Recommendation The key difference between location prediction and POI recommendation is that POI recommendation focuses on recommending new locations which do not exist in users’ historical check-ins while location prediction can predict repeated locations. However recent work often does not make a clear distinction between them, we discuss them together here. Different from traditional recommendation tasks (e.g., product recommendation, movie recommendation), location prediction and POI recommendation are to predict the next location utilizing spatial, temporal information of users’ historical check-in sequences rather than user-item rating matrix. Therefore, the sequential information plays a crucial role in the successive check-in sequences. Users’ movement constraint was taken into account in FPMC-LR (Factoring Personalized Markov Chains and Localized Regions) (Cheng et al. 2013) via exploiting the personalized Markov chain in the check-in sequence. Personalized Ranking Metric Embedding (PRME) (Feng et al. 2015) integrated geographical inﬂuence to improve the recommendation performance. Similarly, embedding method has also been introduced in Graph-based Embedding (GE) (Xie et al. 2016). Besides, information such as temporal effects (Gao et al. 2013), spatial-aware (Yin et al. 2017), behavior patterns (He et al. 2016), category-aware (He, Li, and Liao 2017), various contexts (Yang et al. 2017a) have been studied accordingly. Neural Network for Location Prediction and POI Recommendation Recently, neural network based methods not only have been successfully applied in sequential click prediction (Zhang et al. 2014), but also have been extended to location prediction and POI recommendation. An extended RNN called Spatial Temporal Recurrent Neural Networks (ST-RNN) (Liu et al. 2016) modeled local temporal and spatial contexts with time-speciﬁc transition matrices and distance-speciﬁc transition matrices. Spatial-Aware Hierarchical Collaborative Deep Learning model (SH-CDL) (Yin et al. 2017) utilized heterogeneous features and spatial-aware personal preferences. Joint Network and Trajectory Model (JNTM) (Yang et al. 2017b) jointly modeled social networks and mobile trajectories via neural network-based approach. Deep Contextaware POI Recommendation (DCPR) (Wang et al. 2017) adopted CNN and RNN for POI and user characteristics respectively. Auxiliary meta-data information (e.g., textual description or category labels) was taken into consideration in NEXT (Zhang et al. 2017). Some LSTM-based approaches (Zhu et al. 2017; Zhao et al. 2018) tried to capture short-term and long-term characteristics via speciﬁcally designed gates. User preference over POIs and context associated with users and POIs were predicted simultaneously in PACE (Preference And Context Embedding) (Yang et al. 2017a). In this section, we ﬁrst formulate the problem of missing POI check-in identiﬁcation, then we present the details of the proposed Bi-STDDP model, which integrates bidirectional spatio-temporal dependence and users’ dynamic preferences. Problem Statement Let U = {u, u, ..., u} be a set of N users and P = {p, p, ..., p} be a set of M POIs. Each POI p is associated with its coordinate {x, y}, and each user u is associated with a list of check-ins C= {p, p, ..., p, }, where pmeans user u visit POI p at time t. Assume the tth check-in pof user u is missing, the task is to identify which POI the user u visited at a speciﬁc time taccording to the forward sequence before t, {p, p, ..., p}, and the backward sequence after t, {p, p, ..., p}. Bi-directional Spatial and Temporal Dependence Spatial and temporal information has very complex dependence relationships, here we ﬁrst introduce these two kinds of information separately, global spatial information and local temporal information. Global spatial information means we consider the relationship between the targeting POI and all the other POIs. While only local temporal information is considered since the missing check-in pof user u is more related to the POIs which user u visited at a short temporal interval before and after time t. We ﬁrst introduce the extraction of the global spatial information. For POI check-ins pand p, we deﬁne the global spatial vectors of POI check-ins pand pas follows: where σ is the standard deviation, D ∈ Ris the geographical distance matrix of all candidate POIs, which contains the global spatial information, and Dis the geographical distance vector between POI pand all candidate POIs. The geographical distance vector can be normalized by dividing the standard deviation. Besides, local temporal interval to the target time tis considered as follows: Due to the complex dependence relationships between spatial and temporal, for examples, it is impossible to go far away at a short time interval, but it is possible to go to a close POI at a great time interval. So we need take the global spatial and local temporal into overall consideration to model the complex dependence relationships, ﬁrstly, we transform the local temporal interval into the same space Ras the global spatial vectors: where w, w∈ Rand the activation function f(x) is chosen as a tanh function f(x) =. Finally, the bi-directional dependence relationships between global spatial and local temporal interval are encoded as follows: the dependence relationships are modeled by element-wise product operator  and can be learned automatically by gradient descent performed on the whole model. Users’ Dynamic Preferences Users’ check-in preferences change with time and the preference variance exists in several scales which is observed in (Gao et al. 2013). For example, users usually visit coffee house at afternoon and bars at night; users are usually around the ofﬁce in weekdays while go shopping on weekends. Our model captures the speciﬁc temporal pattern in two scales: hours of a day, and different days of a week. We split a week into weekday and weekend, and a day into the following ﬁve sessions: the morning [8 : 00, 11 : 30), the noon [11 : 30, 14 : 00), the afternoon [14 : 00, 17 : 30), the night [17 : 30, 22 : 00) and the rest one. Thus, the target time tis encoded to one 7-dim pattern vector vby setting the corresponding bits to 1 and the rests to 0. For example, target time 11 : 30 AM Aug 25 2018 on a Saturday can be encoded into a pattern vector as follows (The ﬁrst two bits correspond to the weekday and weekend, and the rest ones correspond to the ﬁve sessions): Then, we capture user and POI information with embedding layers. The embedding layers can be seen as performing the latent factor modeling for POI popularity and user preference. It learns two matrices Eand E, each row of which represents a POI and a user, respectively. If we use one-hot encoded POI p, p∈ Rand user u ∈ R as input vectors, the outputs of embedding layers can be expressed as where 1 ≤ k ≤ w, and w is the window width, E∈ R and E∈ Rdenote the embedding matrices for POIs and users, d is the dimension of embedding vectors. Finally, we utilize multiple hidden layers of feed-forward neural networks to transform POI popularity, user preference and target temporal pattern into the same space and add them up to model users’ dynamic preferences: h(e(p)) = f(We(p h(e(p)) = f(We(p where W, W, W∈ Rand W∈ Rare the parameters of hidden layers, h is the number of hidden units and f is tanh activation function. And the care the dynamic preferences of user u. We present the ﬁnal neural network architecture of BiSTDDP in Figure 1. The bi-directional check-in sequences, user and target time are fed into the embedding layers and users’ dynamic preferences are captured by hidden layer. The output of Bi-STDDP can be yielded via combining bidirectional spatial and temporal dependence and users’ dynamic preferences in Equation (7), (8) and (17) respectively. The prediction of where has user u been at time tcan be computed as: where W∈ Rare the parameters to transform the users’ dynamic preferences to the same space as the dependence relationships. The ois a distribution which indicates different probability of all candidate POIs the user u might visit at time t. And the POIs which k maximum probabilities corresponding to are the top-k identiﬁcations for the missing POI check-in. We need to minimize the cross entropy of predicted distribution and the actual distribution: where S is the number of samples, M is the number of POIs, y∈ Ris the one-hot label of sample xand θ is the parameters set. Training is done through stochastic gradient descent over shufﬂed mini-batches with the Adam (Kinga and Adam 2015) update rule. In this section, we conduct experiments to evaluate the proposed Bi-STDDP against various baseline methods on three real-world datasets. In the next, we ﬁrst introduce the datasets, implementation details, baseline methods and evaluation metrics, followed by our experimental results and discussions. Datasets Three real-world LBSN datasets, i.e., NYC, TKY, Gowalla, are used in the experimental study. The statistics of the three datasets are listed in Table 1. • NYC(Yang et al. 2015) is a dataset from Foursquare, it includes long-term (about 10 months) check-in data in New York city collected from April 2012 to February 2013. • TKY(Yang et al. 2015) is a dataset similar to NYC except it is collected from Tokyo. • Gowalla(Cho, Myers, and Leskovec 2011) is a dataset collected from Gowalla, with the time span from February 2009 to October 2010. Gowalla 107,092 1,280,969 6,442,892 99.995% We eliminate users with fewer than 10 check-ins and POIs visited by fewer than 10 users in these three datasets. Then, we sort each user’s check-in records by time, and take the ﬁrst 80% as the training set, the following 10% as the validation set and the remaining 10% as the test set. Implementation Details For all datasets we use: embedding dimension of 64, hidden units of 256, window width of 1 (temporal locality and a compromise between performance and efﬁciency), minibatch size of 128 and learning rate of 0.001. All these values are chosen via a grid search on the NYC validation set. We initialize all parameters in the neural network from glorot uniform distributions (Glorot and Bengio 2010), and we do not perform any dataset-speciﬁc tuning except early stopping on validation sets. Baselines We compare the proposed method with counting-based methods (Forward, Backward, TOP1, TOP2), traditional POI recommendation algorithms (PRME, PRME-G), neural network based approaches (RNN, LSTM, GRU, STRNN, PACE). Some earlier methods likes PMF (Salakhutdinov and Mnih 2007), FPMC (Rendle, Freudenthaler, and Schmidt-Thieme 2010), FPMC-LR (Cheng et al. 2013) have been proved to be not as good as PRME-G (Feng et al. 2015; Liu et al. 2016; He, Li, and Liao 2017), so we don’t compare these methods. POIs is taken as prediction for all users. https://sites.google.com/site/yangdingqi/home/foursquaredataset http://snap.stanford.edu/data/loc-gowalla.html POIs is taken as prediction for all users. • TOP1: The most popular locations in the training set are selected as prediction for all users. • TOP2: The most popular locations in the training set are selected as prediction for each user. • PRME(Feng et al. 2015): User and POI are embedded into the same latent space to capture the user transition patterns. • PRME-G(Feng et al. 2015): It takes distance between destination location and recent visited ones into consideration on the basis of PRME. • RNN(Zhang et al. 2014): This is a neural network method which directly models the dependence on user’s sequential behaviors into the click prediction process through the recurrent structure in RNN. • LSTM(Hochreiter and Schmidhuber 1997): This is a special RNN model, which contains a memory cell and three multiplicative gates to learn long-term dependence. • GRU(Cho et al. 2014): This is another special RNN model, which contains two gates and is simpler than LSTM. • STRNN(Liu et al. 2016): This is a RNN-based model for next POI recommendation. It incorporates both the timespeciﬁc transition matrices and distance-speciﬁc transition matrices within recurrent architecture. • PACE(Yang et al. 2017a): This is a deep neural architecture that jointly learns the embeddings of users and POIs to predict both user preference over POIs and various context associated with users and POIs. Evaluation Metrics To evaluate the performance of our proposed Bi-STDDP and the baselines described above, we use three standard metrics following the existing work (Liu et al. 2016): Recall@K, F1-score@K, and Mean Average Precision (MAP). Note we don’t use Precision@K since it is positively correlated with Recall@K and provides similar results in our settings. Recall@K is 1 if the POI visited appears in the top-K ranked list; otherwise is 0. The ﬁnal Recall@K is the average value over all test ground truth instances. MAP is a global evaluation for ranking tasks, and it is usually used to evaluate the quality of the whole ranked lists. We report Recall@K and F1-score@K with K = 1, 5 and 10 in our experiments. The larger the value, the better the performance for all the evaluation metrics. Performance Comparison The experimental results evaluated by Recall@K, F1score@K, and MAP on NYC, TKY and Gowalla are presented in Table 2. Since users’ behavior patterns are regular and follow the long-tailed distribution, we see that countingbased methods Forward and Backward have acceptable performances on all three datasets. And the performances of Forward and Backward are even better than PRME and PRME-G. Similarly, counting-based personalized TOP2 also have an good performance on NYC and TKY, while the non-personalized TOP1 performs worst. PRME-G slightly improves the results comparing with PRME via incorporating distance information. RNN-based methods (RNN, LSTM, GRU) obtain similar performance improvement over PRME-G because of their sequence modeling capability. PACE predicts both user preference over POIs and various context associated with users and POIs to achieves further improvement over RNN-based methods. Another great improvement is brought by ST-RNN, and it is the best method among the baselines on three datasets. It incorporates both the time-speciﬁc transition matrices and distance-speciﬁc transition matrices within recurrent architecture. Moreover, Bi-STDDP outperforms the baseline methods over all evaluation metrics on all three datasets. On NYC dataset, the Recall@1, Recall@5, Recall@10 improvements comparing with best baseline ST-RNN are 33.87%, 7.78%, and 2.98% respectively which indicates that the Bi-STDDP improves even more on higher ranking list, similar results can also be observed on TKY and Gowalla. These improvements indicate that our proposed Bi-STDDP can model the bidirectional dependence of global spatial and local temporal and capture users’ dynamic preferences. Impact of Different Parts In this subsection, we ﬁrstly investigate the impact of forward and backward sequences. It is intuitive that bidirectional sequences can bring more useful information and performance improvement than a single sequence. As shown in Table 3, Bi-STDDP improves the performance evaluated by Recall@K and MAP comparing with F-STDDP and B-STDDP which use forward and backward check-in sequences, respectively. Note that the performances of our method F-STDDP which only utilizes the forward sequence are still better than all baseline methods which contain POI recommendation and location prediction methods. It shows that the proposed Bi-STDDP model can be naturally applied to POI recommendation and location prediction tasks with competitive performance. Then, we study the impact of temporal pattern and dependence relationships. The Bi-STDDP is designed to model complex bi-directional spatio-temporal dependence relationships and capture users’ dynamic preferences by target temporal pattern. By removing both dependence relationships and target temporal pattern in Equation (7), (8) and (16) and only the dependence relationships in Equation (7), (8), we construct Bi-A and Bi-B models respectively for contrast experiment. Table 4 illustrates the performance of three models evaluated by Recall@K and MAP on NYC dataset. We see that Bi-B improves the results comparing with Bi-A by modeling the temporal pattern for users’ dynamic preferences which indicates the signiﬁcance of the temporal pattern. And Bi-STDDP achieves further improvement via taking the dependence relationships into consideration. So we can say that Bi-STDDP can capture dependence relationships between global spatial and local temporal and users’ dynamic check-in preferences for improving the missing POI check-in identiﬁcation performance. Table 3: Impact of forward and backward sequences on NYC dataset evaluated by Recall@K and MAP. Impact of Parameters Figure 2(a) and 2(b) show the results under different settings of embedding dimension d and hidden units h. We il- Table 4: Impact of temporal pattern and dependence relationships on NYC dataset evaluated by Recall@K and MAP. lustrate the Recall@K and MAP performance of Bi-STDDP on NYC test set. Note that the best parameters are selected by grid search on NYC validation set, while the impact of Figure 2: Performance of Bi-STDDP with varying embedding dimension and hidden units on NYC dataset evaluated by Recall@K and MAP. parameters is evaluated on NYC test set. Validation and test performances are similar on different parameters. Firstly, considering embedding dimension, we vary the embedding dimension as [2, 4, 6, 8, 12, 16, 32, 64, 128, 256]. we can see that as the embedding dimension increases, the performance of the model is gradually improved, and when the embedding dimension d larger than 16, the performance becomes stabilized. The embedding dimension determines the complexity and capability of the model. Smaller embedding dimension may ﬁt the data distribution insufﬁciently, especially if the numbers of POIs and users are large. While larger embedding dimension increases the complexity of the model and requires more computational cost, a proper embedding dimension can help achieve the best performance. Making a compromise between performance and efﬁciency, we ﬁnally select d = 64 as the embedding dimension. Similar results can also be observed with varying hidden units. We vary the number of hidden units as [2, 4, 6, 8, 12, 16, 32, 64, 128, 256, 512, 1024] to evaluate the performance on NYC dataset of our proposed Bi-STDDP model. As shown in Figure 2(b), the performance of the model becomes stabilized when the number of hidden units is larger than 32. The hidden layer which is closer to the output requires larger feature dimension than embedding layer which is closer to the input. So h = 256 is a proper number of hidden units. Finally, we can get the best parameters which d = 64 and h = 256 respectively. Even without tuned parameters, Bi-STDDP still outperforms other baseline methods according to Table 2 and Figure 2. Further, we can say that the performance of Bi-STDDP stays stable in a large range of parameters and is not very sensitive to both embedding dimension and hidden units. We also vary the window width w of our proposed model on NYC dataset to investigate the impact of the sequence length. Figure 3 shows the detailed Recall@K performance. There is no obvious difference between these results of different window width. It makes sense that the missing POI Figure 3: Recall@K performance of Bi-STDDP on NYC dataset with varying window width w. check-in pof user u is more related to the POIs which user u visited at a short temporal interval before and after time t, and user preferences and periodic information have been modeled by target temporal pattern in combination with user and POI information which can learn automatically by gradient descent performed on the whole model of all training data, so larger window width brings little useful additional information and may even hurt the model performance due to introducing noise information. Therefore, making a balance between performance and efﬁciency, we select w = 1 as the window width. In this paper, we focused on the missing POI check-in identiﬁcation task to identify where a user has visited at a speciﬁc time in the past, which is different from existing POIoriented tasks to recommend or predict a POI where a user may go in the future. To address this task, we proposed a novel neural network model called Bi-STDDP. Speciﬁcally, in our model the bi-directional global spatial and local temporal information are combined together to capture complex dependence relationships. Also, target temporal pattern in combination with user and POI information are integrated to capture users’ dynamic preferences. Finally, extensive experimental results on three large-scale real-world datasets demonstrated the substantial performance improvement of our proposed model over various kinds of state-of-the-art methods. The research work is supported by the National Key Research and Development Program of China under Grant No. 2018YFB1004300, the National Natural Science Foundation of China under Grant No. 61773361, 61473273, 91546122, Guangdong provincial science and technology plan projects under Grant No. 2015B010109005, the Project of Youth Innovation Promotion Association CAS under Grant No. 2017146.
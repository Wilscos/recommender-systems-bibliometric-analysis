Accurate user and item embedding learning is crucial for modern recommender systems. However, most existing recommendation techniques have thus far focused on modeling users’ preferences over singular type of user-item interactions. Many practical recommendation scenarios involve multi-typed user interactive behaviors (e.g., page view, addto-favorite and purchase), which presents unique challenges that cannot be handled by current recommendation solutions. In particular: i) complex inter-dependencies across different types of user behaviors; ii) the incorporation of knowledgeaware item relations into the multi-behavior recommendation framework; iii) dynamic characteristics of multityped user-item interactions. To tackle these challenges, this work proposes a Knowledge-Enhanced Hierarchical Graph Transformer Network (KHGT), to investigate multi-typed interactive patterns between users and items in recommender systems. Speciﬁcally, KHGT is built upon a graph-structured neural architecture to i) capture type-speciﬁc behavior characteristics; ii) explicitly discriminate which types of user-item interactions are more important in assisting the forecasting task on the target behavior. Additionally, we further integrate the graph attention layer with the temporal encoding strategy, to empower the learned embeddings be reﬂective of both dedicated multiplex user-item and item-item relations, as well as the underlying interaction dynamics. Extensive experiments conducted on three real-world datasets show that KHGT consistently outperforms many state-of-the-art recommendation methods across various evaluation settings. Our implementation code is available in https://github.com/akaxlh/KHGT. Recommender systems have been widely deployed in many Internet services (e.g., e-commerce, online review and advertising systems) to alleviate information overload and deliver the most relevant items to users (Liu et al. 2020; Huang et al. 2019a). In the recommendation scenario with the focus on implicit feedback, Collaborative Filtering (CF) becomes one of most popular paradigm which factorizes user-item Corresponding author: Chao Huang Copyright © 2021, Association for the Advancement of Artiﬁcial Intelligence (www.aaai.org). All rights reserved. Simon Fraser University, Canada interactions into latent representations and predicts user’s preference based on the projected low-dimensional embeddings (Chen et al. 2020). Many deep neural network techniques have been developed to enhance collaborative ﬁltering architecture for nonlinear feature interactions. Speciﬁcally, early studies, like NCF (He et al. 2017) and DMF (Xue et al. 2017) utilize the Multi-layer Perceptron to handle the non-linear interactions. Furthermore, autoencoder-based methods are designed for mapping high-dimensional sparse user-item interactions into low-dimensional dense representations (Sedhain et al. 2015; Wu, DuBois et al. 2016). Later works investigate the use of graph neural network to exploit the high-order user-item relations, and perform neighborhood-based feature aggregations (Zhang et al. 2019; Wang et al. 2019c). Although these methods have shown promising results, a deﬁciency is that they only model singular type of useritem interactions, which makes them insufﬁcient to distill the complex collaborative signals from the multi-typed behaviors of users (Jin et al. 2020). In particular, there typically exist multiple relations between user and item that exhibit various behavior characteristics in many real-world recommendation scenarios, which are particularly helpful in learning users’ preferences on the target type of behavior (Guo et al. 2019). For example, in online retail platforms, users’ page view and add-to-favorite activities over different items, can serve as the auxiliary knowledge for assisting the forecasting task of customer purchase (target behavior). Therefore, it is crucial to take such inter-type behavioral inﬂuences into consideration to more accurately infer user preferences. There are several key technical challenges that remain to be solved to realize the multi-behavior recommendation. First, how to distill the user-speciﬁc collaborative signals from the multiplex user-item interaction behaviors, is a signiﬁcant challenge to tackle. In practice, type-speciﬁc behavioral patterns interweave with each other in a complex manner (Gao et al. 2019b), like the complementary correlations between the add-to-cart and purchase behaviors, or users’ negative reviews are mutually exclusive with their positive feedback over the same item. Without the explicitly encoding of such heterogeneous relationships between user and item, models may suffer from the inability of capturing the complicated inherent cross-type behavior dependencies in a hierarchical way. Second, another core challenge lies in the incorporation of knowledge-aware item semantic relatedness into the encoding function of multi-behavioral patterns. The knowledge-aware side information often contains much fruitful facts and contextual connections about items (Wang et al. 2019a). It is desirable to rigorously design a joint embedding paradigm over the user-item and item-item relations in our multi-behavior recommendation. Third, a time-aware model is needed to better handle the temporal information of user-item interactions. There are a handful of recent models that attempt to integrate multi-behavioral interactive patterns for making recommendations (Jin et al. 2020; Gao et al. 2019b). However, these works intend to consider multi-typed interactions in a relatively independent and local manner (e.g., singular dimensional cascading correlations), and can hardly capture the high-order multiplex relationships across users and items. Additionally, how to account for the side knowledge from items as well as user-item interaction dynamics, is less explored in those multi-behavior recommender systems. In light of these differences and challenges, we present a general framework–Knowledge-Enhanced Hierarchical Graph Transformer Network (KHGT), for multi-behavior recommendation. Particularly, at the ﬁrst stage, we develop a multi-behavior graph transformer network which performs recursive embedding propagation, to capture behavior heterogeneity across users and items in an attentive aggregation schema. As a result, user-item and item-item relationships of different types are enabled to maintain their speciﬁc representation space. To handle behavior dynamics, we inject the time-aware context into the graph transformer framework through a temporal encoding strategy. In addition, to encode the inter-dependencies between type-speciﬁc behavior representations, a multi-behavior mutual attention encoder is proposed to learn dependent structures of different types of behaviors in a pairwise manner. Finally, a gated aggregation layer is introduced to discriminate the contribution of typespeciﬁc relation embeddings for making recommendations. The contributions of this paper are highlighted as follows: • We propose a framework KHGT, which explicitly achieves high-order relation learning in the knowledgeaware multi-behavior collaborative graph under the hierarchically structured graph transformer network. • To jointly integrate user- and item-wise collaborative similarities under the multi-behavior modeling paradigm of KHGT: i) the ﬁrst-stage graph-structured transformer module captures the type-speciﬁc user-item interactive patterns in a time-aware environment; ii) the second-stage attentive fusion network encodes the cross-type behavior hierarchical dependencies and discriminates the typespeciﬁc contribution, in forecasting the target behaviors. • We apply the proposed KHGT method to three real-world datasets of movie, venue and product recommendations. Experiments show that our model achieves signiﬁcant gains over many state-of-the-art baselines from various lines. Furthermore, model interpretation ability is also investigated with case studies of qualitative examples. We begin with the introduction of key notations and consider a typical recommendation scenario with I users ( U = {u, ..., u, ..., u}) and J items (V = {v, ..., v, ..., v}). We further deﬁne the relevant graph-structured data as: User-Item Multi-Behavior Interaction Graph. G. With the awareness of different types of user-item interactions, a multi-behavior interaction graph is deﬁned as: G= (U, V, E), in which the edge set Erepresents K types of relations (e.g., browse, add-to-favorite, purchase) between user and item. In E, each edge edenotes that user uinteracts with item vunder the behavior type of k. Knowledge-aware Item-Item Relation Graph. G. To incorporate the side information of items, we deﬁne graph G= (V, E) to characterize multiplex dependencies across items with the consideration of their external knowledge. In G, edge elinked between item vand vwith their meta relations, which is denoted as {(v, r, v)|v, v∈ V, r ∈ R}. Here, R indicates the set of relations which can be generated from different aspects, such as vand vbelong to the same category, from the same location, or interacted with the same user under the same behavior type. Task Formulation. Based on above deﬁnitions, we formulate the knowledge-aware multi-behavior recommendation: Input: the user-item multi-behavior interaction graph G and the knowledge-aware item-item relation graph G. Output: a predictive model which effectively infers the probability yof unseen interaction between user uand item vunder the target behavior type of k. We elaborate the details of KHGT, which investigates the multiplex user-item relations in an end-to-end manner. Attentive Heterogeneous Message Aggregation In this component, we aim to collectively capture the multibehavior user-item interactive patterns and item-item dependencies in a uniﬁed graph-structured neural network. The overall architecture is shown in Figure 2. Multi-Behavior Interactive Pattern Encoding. This module aims to aggregate the heterogeneous signals from multi-behavioral patterns between the user and his/her interacted items. Towards this end, we develop an adaptive multi-behavior self-attention network under a message passing paradigm with the enhancement of global behavior context, which consists of three key modules: temporal context encoding scheme, information propagation and aggregation. Temporal Information Encoding. To capture the inﬂuences between different types of user-item interactions in a time-aware scenario, we develop a temporal context encoding scheme, to incorporate the behavior dynamics in our heterogeneous message aggregation architecture. In particular, given the connection Ebetween user uand item v under the behavior of k, we map their corresponding interaction timestamp tinto the time slot as τ(t), and utilize Figure 1: The model architecture of KHGT framework. the sinusoidal functions for embedding T∈ Rgeneration, which is motivated by the positional embedding framework in Transformer (Vaswani et al. 2017; Hu et al. 2020; Wu et al. 2020). T= sin(τ(t)), T= cos(τ(t)) (1) where the element indexs (even and odd position index) in the temporal information embedding are represented as (2l) and (2l + 1), respectively. d is the latent dimensionality. To augment the tunable ability of our temporal context encoding, we further apply a projection layer over Tas: ¯T= T· W, W∈ R. Wis the transformation weights corresponding to k-th type of interactions. Information Propagation Phase. We perform the timeaware information propagation between the source and target node, over the multi-behavior user-item interaction graph G, with the following graph attentive mechanism: where mand mdenote the propagated message from item vto user u, and from uto v, respectively. pis the element-wise addition between initialized item embedding eand the corresponding temporal context representation ¯T. i.e., p= e⊕¯T. Similar operation is applied for the message from user side: p= e⊕¯T. V∈ R is the h-head projection matrix with respect to the k-th behavior type. In addition, ω, ωrepresent the learned attentive propagation weights over the constructed message pand p, respectively. Formally, they are calculated as: where Q, K∈ Rare the head-speciﬁc query and key transformation with respect to the k-th behavior type. Figure 2: The framework of global context enhanced parameter learning and behavior dynamics encoding in KHGT. To incorporate the global context across different behavior types in the message passing process, we learn the attention-based transformation matrices Q, K, Vin a multi-channel parameter learning framework. To be speciﬁc, we design a base transformation paradigm which consists of M channels of parameters, i.e.,¯Q,¯K,¯V(m = 1...M ). They correspond to M latent projection subspaces, which reﬂect different aspects of the common behavior context across different types. Formally, the type-speciﬁc transformation procedure is performed with the gating mechanism: where α, β, γare quantitative gated weights for the m-th channel transformation with respect to behavior type of k. Typically, the number of channels M is smaller than the number of behavior types K in practice, which enables the parameter-efﬁcient heterogeneous message aggregation. Information Aggregation Phase. Based on the constructed propagated message mand m, we aggregate the neighboring information with the summation operation: where Nand Ndenote the neighborhood of uand v in the user-item interaction graph G. q, qare the aggregated information of uand vunder the behavior type of k. f(·) is an activation function like LeakyReLU. Information Aggregation for Item-side Relations. We fuse the heterogeneous signals from the item-item interdependencies with the attentive aggregation: where r is the index of R different item-item relations and Nindicates the neighboring nodes of vover the graph G. In our multi-behavior recommendation scenarios, user behaviors with different types interact with each other in a complex and hierarchical way. To address this challenge, two questions arise: i) how do we effectively preserve mutual relations between different types of behavior; ii) how to promote the collaboration across different type-speciﬁc behavior representations in assisting the ﬁnal recommendation. Our mutual relation encoder is developed based on the scaled dot-product attention via learning the pairwise typewise relevance scores λ, which is formally represented: where˜Q,˜K,˜Vare learnable projection matrices of the h-th learning subspace. Similar operations are applied for updating the item embedding˜q. Next, we propose to fuse the learned type-speciﬁc behavior representations, by investigating the individual importance in forecasting the target type of user interactions. We present our gated fusion mechanism for conclusive representation Φas: σ(·) is the softmax function. ηand ξare the learned importance score of k-th type of user-item interaction representation˜q, and r-th type of item-item relation representation ˜q, respectively. They are formally calculated as: f(·) denotes the multi-layer network as: f(˜q) = B˜q+P B˜q+ c. Parameters in our gated fusion layer are denoted as a, b, B, B(transformations), cand c(bias terms). This gating mechanism is also utilized for obtaining user representation Φover type-speciﬁc embeddings˜q. High-order Multi-Behavior Pattern Propagation. Based on the deﬁned information propagation and aggregation functions, we capture high-order collaborative relations under the multi-behavior context (user-item interaction graph G) in our graph neural network. The update procedure from the (l)-th layer to the (l + 1)-th layer is (Φ∈ R): ΦPropagate(Φ, Φ, G)(9) Propagate(·) is the information propagation function which extracts useful features from both the user-item interactions (over E) and item-item dependencies (over E). Aggregate(·) denotes the information fusion function. The ﬁnal embeddings are summarized cross different orderspeciﬁc representations as: Φ= Φ⊕ ... ⊕ Φ. The Learning Phase of KHGT After generating the conclusive representations Φand Φ for users and items, the likelihood of uinteracting with v under the target behavior can be inferred as Pr= z· (Φ Φ). To perform the model optimization, we aim to minimize the following marginal pair-wise loss function: L =max(0, 1 − Pr+ Pr) + λkΘk(10) Table 1: Statistics of the experimented datasets where I denotes the number of trained users, and S denotes the number of positive-negative pairs for each user. In practice, we randomly sample S positive items v, v, ..., v and S negative items v, v, ..., vfor each user. In addition, Θ represents the set of all trainable parameters, and λ is the weight for the regularization term. Sub-graph Sampling for Large-Scale Data. One key challenge of graph neural architecture lies in the information aggregation over the entire graph in a full-batch mode, which consumes tremendous memory and computation cost. To endow KHGT with the ability of handling large-scale data, we develop a random-walk-based sub-graph sampling algorithm over the graph Gand G, and maintain a weight vector during the sampling process based on node relatedness extracted from the adjacent matrix of the graph. Model Complexity Analysis. Our KHGT spends O(K × (I + J) × d) to calculate the Q, K, V transformations, and O(|E| × d) for information aggregation. For type-wise relation modeling, the most prominent computation comes from the O(K × (I + J) × d) transformations. Overall, our KHGT could achieve comparable time complexity with the GNN-based multi-behavior recommendation methods. Also, KHGT costs moderate extra memory for the intermediate results, compared to the most existing GNN models. This section answers the following research questions: • RQ1: How does KHGT perform compared with the various state-of-the-art recommender systems? • RQ2: How do different designed modules and captured relational structures contribute to the model performance? • RQ3: How does KHGT work with the integration of different types of behavior in our heterogeneous aggregator? • RQ4: How does KHGT perform w.r.t different interaction sparsity levels as compared to representative competitors? • RQ5: How does KHGT perform with different parameter settings (e.g., latent dimensionality and GNN depth)? • RQ6: How is the interpretation ability of our KHGT in capturing behavior inter-dependencies? Experimental Settings Data Description. We show the data statistics in Table 1. MovieLens Data. We differentiate explicit user’s rating scores r (i.e., [1, ..., 5]) into multiple behavior types: (1) r ≤ 2: dislike behavior. (2) 2< r <4. neutral behavior. (3) r ≥ 4: like behavior. In this data, the target and auxiliary behaviors are set as (like) and (neutral, dislike), respectively. Yelp Data. User’s feedbacck interactions over items in this data, are projected into three behavior types by following the same partition rubric of MovieLens. We regard the like behavior as the target type and (dislike, neutral, tip) as auxiliary sources, where tip behavior indicates that users gave tips on their visited venues. Online Retail Data. We also investigate our KHGT in a real-world online retail scenario with explicit multi-typed user-item interactions, i.e., page view, add-to-cart, add-tofavorite and purchase. For this application, the target behavior is set as purchases and the other three types of user behaviors are considered as auxiliary behavioral signals. For the above applications, the knowledge-aware itemitem relation graph Gis generated with item meta-relations from two dimensions: i) v–u–vunder the behavior type of k; ii) the categorical relations between item vand v. Evaluation Protocols. We adopt two metrics: Normalized Discounted Cumulative Gain (NDCG@N ) and Hit Ratio (HR@N) which have been widely used in recommendation tasks (Wang et al. 2019c; Chen et al. 2018). Note that higher HR and NDCG scores signal better performance. Following the same settings in (Yu et al. 2019; Zhao et al. 2020), we employ the time-aware leave-one-out evaluation to split the training/test sets. The test set contains the last interactive item of users and the rest of data is used for training. For fair and efﬁcient evaluation, each positive instance is paired with randomly selected 99 non-interactive items, which is consistent with the experimental settings in (Sun et al. 2019; Huang et al. 2019b). Methods for Comparison. Baselines are presented as: Conventional Matrix Factorization Approach: • BiasMF (Koren, Bell, and Volinsky 2009): it enhances the matrix factorization paradigm by incorporating user and item bias with the corresponding implicit feedback. Autoencoder-based Collaborative Filtering: • AutoRec (Sedhain et al. 2015): it is a stacked autoencoder architecture to project user-item interactions into hidden representation unit with the data reconstruction loss. Autoencoder for user-item interaction modeling. Neural Network-enhanced Collaborative Filtering: • DMF (Xue et al. 2017): it enhances the MF with a multilayer perceptron to encode the interaction vector of users. • NCF (He et al. 2017): Three variants of NCF with different interaction encoders: i.e., Multilayer perceptron (NCFM), concatenated element-wise-product branch (NCF-N) and the ﬁxed element-wise product (NCF-G). Neural Auto-regressive Recommendation Methods: • NADE (Zheng et al. 2016): it incorporates the parameter sharing mechanism into the autoregressive CF model. • CF-UIcA (Du et al. 2018): it is a neural CF framework with auto-regression on user-item correlations. Graph Neural Networks Collaborative Filtering: • ST-GCN (Zhang et al. 2019): it is a graph-structured encoder-decoder framework to learn latent embeddings of users and items under data scarcity, via GCNs. • NGCF (Wang et al. 2019c): it is a message passing architecture to exploit high-order connection relationships. Recommendation with Multi-Behavioral Patterns. • NMTR (Gao et al. 2019a): it is a multi-task recommendation framework which explores the cascaded correlations between multiple types of user-item interactive behavior. • DIPN (Guo et al. 2019): this approach jointly considers the behavior patterns of browsing and buying with the bidirectional recurrent network based attention mechanism. • NGCF(Wang et al. 2019c): we integrate the multibehavioral relation learning with the neural graph collaborative ﬁltering model under a joint graph neural network. • MATN (Xia et al. 2020): it learns the type-wise interaction dependencies with a memory attention network. • MBGCN (Jin et al. 2020): it models the multi-behavior of users and uses graph convolutional network to perform behavior-aware embedding propagation. Knowledge-aware Recommendation Method. • KGAT (Wang et al. 2019b): it investigates the high-order connectivity of the semantic item relations over the collaborative knowledge graph, with GAT framework. Parameter Settings. We implement KHGT with TensorFlow and infer the model parameters with Adam optimizer. Our multi-head self-attention module is conﬁgured with the 2 heads for embedding learning. The channels of base transformations in our graph attention module is set as 2. The model training process is performed with the learning rate of 1e(with decay rate of 0.96) and batch size of 32. The regularization strategy with the weight decay, which is chosen from the set of {0.1, 0.05, 0.01, 0.005, 0.001}. This is applied in the training phase to alleviate the overﬁtting issue. Performance Validation (RQ1) We ﬁrst present the performance of all methods in forecasting the target type of user-item interactions on three datasets in Table 2. From the results, we observe that remarkable performance improvement can be achieved by KHGT on different types of datasets. Such performance gap can be attributed to the joint exploration of multi-type behavior interdependencies and the underlying knowledge-aware item collaborative signals. Among various competitive methods, the recommender systems (e.g., NMTR, NGCF, MBGCN) which consider multi-typed interactions, improve the performance as compared to other baselines. This points to the positive effect of aggregating multiplex behavioral patterns in the designed interaction encoding function. Furthermore, GNN-based neural approaches perform better than autoencoder and autoregressive CF models, suggesting the rationality of exploring high-order collaborative signals over user-item relations. We investigate the ranking quality of top-k items recommended by different methods ranging from 1 to 9. Table 3 lists the results of Yelp data. We can observe that the best performance is always achieved by KHGT under different top-N settings. Table 2: Performance comparison on Yelp, MovieLens, Online Retail data, in terms of HR@k and NDCG@k (k = 10). Table 3: Ranking performance evaluation on Yelp dataset with varying Top-K value in terms of HR@K and NDCG@K Model Ablation Study (RQ2) We consider different model variants of KHGT from ﬁve perspectives and analyze their effects (as shown in Figure 3): Type-speciﬁc Behavioral Pattern Modeling. KHGT-GA. We ﬁrst evaluate the effect of our type-speciﬁc behavior semantic learning by replacing our attentive heterogeneous information aggregation with graph convolutional network. Behavior Mutual Dependency Modeling. KHGT-MR. We remove the transformer-based mutual relation encoder to capture inter-dependencies of different types of behaviors. Cross-Type Behavioral Pattern Fusion. KHGT-BF. This simpliﬁed variant directly applies the mean pooling operation over the type-speciﬁc behavior representations, instead of using the designed gated fusion layer. Temporal Context Encoding. KHGT-Ti. This variant does not include the temporal context embedding when performing information propagation in our graph transformers. Incorporation of Item-Item Relations. KHGT-KG. It does not integrate the item-item relations in the framework. We can observe that the full version of our developed KHGT achieves the best performance in all cases. We further summarize the conclusions: (1) Modeling the type-speciﬁc user-item interactive patterns in an explicit attentive way, is better than performing graph-structured convolutions. (2) The efﬁcacy of augmenting the multi-behavior recommendation with the underlying mutual relation learning. (3) The necessity of explicit discrimination for the contributions of type-speciﬁc behavior patterns. (4) The positive effect of temporal context information in capturing the behavior dynamics. (5) The incorporation of item external knowledge in our graph neural network is helpful for more accurately encoding user’s multi-dimensional preference. Performance v.s. Multi-Behavior Integration (RQ3) We conduct the ablation experiments to validate whether the incorporation of more diverse behavior types could boost the performance. The model variants are generated with rubric as follows: (1) “+”behavior type indicates only using the target behavior itself to make predictions (e.g., +like, +buy). (2) “-”behavior type means removing this speciﬁc type of Figure 3: Ablation studies of sub-modules in KHGT. Figure 4: Impact study of different behavior types on Yelp and Online Retail data, in terms of HR@k and NDCG@k. interactions (e.g., -pv: page-view, -cart: add-to-cart) in forecasting the user’s target behavior. From the results in Figure 4, KHGT using all types of interaction behaviors consistently achieves the best performance compared to other variants, which suggests that more diverse behavior incorporation could improve the recommendation results with more comprehensive multi-behavior knowledge. Inﬂuences of Interaction Sparsity Degrees (RQ4) we further perform experiments to evaluate the model performance with respect to different sparsity levels of useritem interaction data. In particular, each user is grouped in one of ﬁve different data sparsity degrees in terms of his/her interaction density over items. The bars in the background of Figure 5 show the number of users which belong to the corresponding sparsity levels in x-axis. We keep the total number of interaction summation of each sparsity level as the same. The y-axis shows the recommendation accuracy of KHGT and several representative baselines. We can notice that the performance gap between our approach and other competitors become more signiﬁcant as data becomes more sparse, which also ascertains the reasonableness of KHGT in enhancing recommender systems with the capability of learning complex interactive patterns, by modeling interdependencies among various types of user behaviors. Hyperparameter Effect Investigation (RQ5) We show the parameter study results of KHGT in Figure 6. • Embedding Dimensionality: d. The model achieves better performance when we increase d from 4 to 16, since a larger hidden dimension representation might be beneﬁcial to capture more latent factors for user-item interac- Figure 5: Model performance on the online Retail data w.r.t. different data sparsity, in terms of HR@10 and NDCG@10. Figure 6: Hyper-parameter study for the like/purchase prediction in terms of HR@10 and NDCG@10. tions. Due to the overﬁtting phenomenon, the performance degrades with the further increase of d. • Time Resolution of Temporal Encoding: τ (·). The best performance is achieved with the projected time slot of week resolution, which indicates that the weekly interactive patterns is a good trade-off between the modeling of user-speciﬁc behavior dynamics and interweave correlations with others. • Depth of Graph Neural Network: L. By stacking more graph neural layers to jointly capture the high-order useritem and item-item collaborative relations, the recommendation performance is improved. KHGT with two recursive message propagation layers achieves the best results. • Sub-graph Sampling Scale N. Table 4 shows the performance when varying the sampled sub-graph size (measured by # of nodes). We observe that training with smaller sub-graph size (training with dropout regularization to alleviate overﬁtting), and relatively larger sample scale for test (more graph context is provided for prediction), results in better recommendations accuracy. Case Studies of KHGT’s Explainability (RQ6) We visualize the learned explicit relevance scores of our KHGT model for predicting purchases on retail data in Figure 7. We observe that different types of user-item interactions (4 types) and item-item relations (5 types) are correlated in a hierarchical and explainable manner (Brighter colors signal higher behavior relevance). In particular, Squares and circles represent the learned cross-type behavior dependencies in our type-wise behavior mutual relation encoder and cross-type behavioral pattern fusion, respectively. Both ﬁrst- and second-order attentive weights are presented. Recommendation with Multi-Relation Modeling. There exist many recommender systems which are developed to characterize user representations, with the consideration of different-typed relations from either user or item side (Yu Table 4: Inﬂuence of the sub-graph sampling scale. Figure 7: Visualized explicit relevance learned by KHGT. et al. 2018). For example, to alleviate the data sparsity issue, a lot of social recommender systems have been proposed to boost the prediction performance via integrating the useruser social inﬂuential dependencies with the user-item interactive relations (Huang et al. 2021b; Fan et al. 2019). Furthermore, another paradigm of multi-relation recommendation models leverage external knowledge graph information to construct different structural relations between a set of entities or items (Wang et al. 2019a,b). Different from them, this work generalizes the joint modeling of multiplex collaborative relations and knowledge-aware item dependency in the multi-behavior recommendation. Graph Neural Network Recommender Systems. With the recent success of graph neural network in aggregating information from various relational data, many graph neural techniques have been proposed to learn user’s preference over the graph-structured data for various recommendation tasks, such as GraphSAGE (Hamilton, Ying et al. 2017) and NGCF (Wang et al. 2019c) for encoding high-order useritem interactions, and GNNs for users’ sequential behavior modeling (Huang et al. 2021a). Inspired by the above research work, we propose a new method KHGT within the broader graph neural paradigm for multi-behavior recommendation, to solve its unique challenges resulting from relation heterogeneity between users and items. This paper explicitly models type-speciﬁc user behavioral pattern in enhancing recommender systems. We devise a novel hierarchical graph transformer network, termed as KHGT, to perform the joint information aggregation over the user-item and item-item collaborative relations in multiple knowledge-aware behavior modalities. This reﬁnes type-speciﬁc behavior representations and encode their ﬁnegrained interactive preference over items. Evaluation results on three datasets well validate our framework. Our future work is to fully deploy KHGT in an online working system to handing the streaming data in a recursive mode. We thank the anonymous reviewers for their constructive feedback and comments. This work is supported by National Nature Science Foundation of China (62072188, 61672241), Natural Science Foundation of Guangdong Province (2016A030308013), Science and Technology Program of Guangdong Province (2019A050510010).
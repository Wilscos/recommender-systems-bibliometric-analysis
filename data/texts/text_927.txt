cslianghao.xia@mail.scut.edu.cn, yxu@scut.edu.cn, chaohuang75@gmail.com, {peng.dai,mengyin.lu,liefeng.bo}@jd.com Abstract—Many previous studies aim to augment collaborative ﬁltering with deep neural network techniques, so as to achieve better recommendation performance. However, most existing deep learning-based recommender systems are designed for modeling singular type of user-item interaction behavior, which can hardly distill the heterogeneous relations between user and item. In practical recommendation scenarios, there exist multityped user behaviors, such as browse and purchase. Due to the overlook of user’s multi-behavioral patterns over different items, existing recommendation methods are insufﬁcient to capture heterogeneous collaborative signals from user multi-behavior data. Inspired by the strength of graph neural networks for structured data modeling, this work proposes a Graph Neural Multi-Behavior Enhanced Recommendation (GNMR) framework which explicitly models the dependencies between different types of user-item interactions under a graph-based message passing architecture. GNMR devises a relation aggregation network to model interaction heterogeneity, and recursively performs embedding propagation between neighboring nodes over the user-item interaction graph. Experiments on real-world recommendation datasets show that our GNMR consistently outperforms state-of-the-art methods. The source code is available at https://github.com/akaxlh/GNMR. Index Terms—Recommender Systems, Multi-Behavior Recommendation, Graph Neural Networks Recommender systems become the essential part of online platforms, to alleviate the information overload problem and make recommendation for users [7], [10]. The key objective of recommendation frameworks is to accurately capture user’s preference over different items based on their observed interactions [11], [17]. As effective feature learning paradigms, deep learning has attracted a lot of attention in recommendation, which results in various neural network-based methods being proposed for user-item interaction modeling [1], [5], [12], [21]. These methods transform users and items to vectorized representations based on different neural network structures. For example, autoencoder has been used for latent representation projection in collaborative ﬁltering [14]. To endow the collaborative ﬁltering architecture with the capability of nonlinear feature interaction modeling, NCF [5] integrates the matrix factorization and multi-layer perceptron network. However, these recommendation solutions mostly focus on singular type of user-item interaction behavior. In real-world online applications, users’ behaviors are multi-typed in nature, , JD Finance America Corporation which involves heterogeneous relations (e.g., browse, rating, purchase) between user and item [3], [16]. Each type of user behavior may exhibit different semantic information for characterizing diversiﬁed interactive patterns between user and item. Hence, the current encoding functions of useritem interactions are insufﬁcient to comprehensively learn the complex user’s preference. While having realized the importance of leveraging different types of user behaviors, encoding multi-typed behavioral patterns present unique challenges which cannot be easily handled by recommendation methods designed for single type of user-item interactions. In particular, it is non-trivial to effectively capture implicit relationships among various types of user behaviors. Such different types of interaction behaviors may be correlated in complex ways to provide complementary information for learning user interests. Additionally, although there exist some recent developed multi-behavior user modeling techniques for recommendation [2], [16], they fail to capture the high-order collaborative effects with the awareness of different user-item relations. Taking the inspiration from the effectiveness by employing graph neural networks in recommendation [11], [13], it is beneﬁcial to consider high-order relations between user-item interaction into the embedding space. Contribution. In this work, we propose a Graph Neural Multi-Behavior Enhanced Recommendation framework (short for GNMR), to capture users’ preference on different items via a multi-behavior modeling architecture. Speciﬁcally, the designed graph neural multi-behavior learning framework explores high-order user-item interaction subgraph, characterizing complex relations between different types of user behaviors in an automatic manner. In our graph neural network, we design a relation dependency encoder to capture the implicit dependencies among different types of user behaviors under a message passing architecture. With the aim of modeling the graph-structured interactions between users and items, our developed GNMR performs the embedding propagation over the multi-behavior interaction graph in a recursive way, with the injection of type-speciﬁc behavior relationships. We evaluate our framework on real-world datasets from MovieLens, Yelp and Taobao. Evaluation results show the effectiveness of our GNMR model compared with state-of-the-art baselines. The main contributions of this work are summarized as: laborative signals with the awareness of high-order relations over user-item interaction graph in the embedding paradigm for recommendation. for multi-behavior enhanced recommendation, with the exploration of dependencies between different types of behaviors under a message passing architecture. GNMR performs the embedding propagation between users and items on their graph-structured connections, and aggregates the underlying cross-type behavior relations with a high-order scenario. line platforms show the effectiveness of our GNMR model compared with state-of-the-art baselines. In a typical recommender system, there exist two types of entities, i.e., set of users U (u∈ U) and items V (v∈ V ), where |U| = I (indexed by i) and |V | = J (indexed by j). In our multi-behavior enhanced recommendation scenario, users could interact with items under multiple types of interactions (e.g., different ratings, browse, purchase). We deﬁne a threedimensional tensor X ∈ Rto represent the multityped user-item interactions, where K denotes the number of behavior types (indexed by k). In tensor X, each element x= 1 if there exist interactions between user uand item v given the k-th behavior type and x= 0 otherwise. In this work, we aim to improve the recommendation performance on the target behavior of users, by exploring the inﬂuences of other types of behaviors. We formally deﬁne the problem as: Problem Statement. Given the multi-behavior interaction X ∈ Runder K behavior types, the goal is to recommended a ranked list of items in terms of probabilities that user uwill interact with them under the target behavior type. Connections to Existing Work. Recent years have witnessed the promising results of graph neural networks in learning dependence from graph-structured data [15]. In general, the core of graph neural networks is to aggregate feature information from adjacent vertices over a graph under a message passing architecture [19]. Inspired by the effectiveness of graph convolutional network, recent studies, such as NGCF [11] and GraphSage [4], explore user-item interaction graph to aggregate the embeddings from neighboring nodes by employing graph convolutional network in collaborative ﬁltering. These work performs information propagation between vertices to exploit relations among users and items. This work extends the exploration of designing graph neural network models for recommendation by tackling the challenges in dealing with multi-typed user-item interactions for recommendation. This section presents the details of our proposed neural framework GNMR for multi-behavior enhanced recommendation. Based on the preliminaries in Section II, we generate the user-item interaction graph G = {U, V, E}, where nodes are constructed by user set U and item set V . E represents the edges connecting users and items based on their multi-typed interactions. Speciﬁcally, in graph G, there exists an edge e between user u∈ U and item v∈ V under the k-th behavior type if x= 1. The general graph neural network utilizes G as the computation graph for information diffusion, during which the neighborhood messages are aggregated to obtain contextual representations [6], [20]. In our GNMR framework, we update user and item latent embeddings by propagating them on the user-item multi-behavior interaction graph G, to capture the type-aware behavior collaborative signals for recommendation. We show the model architecture of GNMR in Figure 1. We suppose the output embedding of the l-th GNMR graph layer as Hwhich is then fed into the (l + 1)-th layer as input representation. Given edges between users and items under the behavior type of k, we construct the passed message as below: where H∈ Rand H∈ Rdenotes the embeddings passed to uand v, respectively. η(·) represents the embedding layer which preserves the unique characteristics of each type (i.e., k) of user behaviors. During the message propagation process, we initialize the embeddings Hand Hfor user uand item vby leveraging Autoencoderbased pre-training scheme [9] for generating low-dimensional representations based on multi-behavior interaction tensor X. In our message passing architecture, η(·) is designed to obtain representations for each behavior type of k, by considering type-speciﬁc behavior contextual signals (e.g., behavior frequency). We formally represent η(·) as follows: where αrepresents the learned weight of the k-th type of user behavior from the projected c-th latent dimension. N(i, k) denotes the neighboring item nodes connected with user u under behavior type of k in the interaction graph G. W∈ Rand b∈ Rare learn hyperparameters. We deﬁne δ(·) as ReLU activation function. In our embedding process, we aggregate embeddings from different latent dimensions with weight αand transformation parameter W∈ R. The message passing procedure for the target item node vfrom its adjacent user nodes N(j, k) under the behavior type of k is conducted in an analogous way in Eq 2. After performing the propagation of type-speciﬁc behavior embeddings between user and item, we propose to aggregate representations from different behavior types, by exploiting the underlying dependencies. In GNMR framework, our message aggregation layer is built upon the attentional neural mechanism. In particular, we ﬁrst deﬁne two transformation weight matrices Q and K for embedding projection between different behavior types k and k. The explicit relevance score between type-speciﬁc behavior embeddings is represented as β, which is formally calculated as follows: We perform the embedding projection process with multiple latent spaces (s ∈ S), to enable the behavior dependency modeling from different hidden dimensions. Q∈ Rand K∈ Rcorrespond to the transformation matrices of s-th projection space. We further apply the softmax function on β. Then, we recalibrate the type-speciﬁc behavior embedding by concatenating representations from different learning subspaces with the following operation: whererepresents the concatenation operation and V∈ Rdenotes the transformation matrix. We deﬁne the propagated recalibrated embedding as˜H. To preserve the original type-speciﬁc behavioral patterns, the element-wise addition is utilized between the original embedding Hand recalibrated representation˜H, i.e.,ˆH=˜H⊕H, whereˆHis the updated embedding propagated through the connection edge of k-th behavior type. To fuse the behavior type-speciﬁc representations during the embedding propagation process, we develop our message aggregation layer with the following functions as: where ψ(·) represents the message aggregation function. To fuse user/item embeddings from different behavior types, we aim to identify the importance score of individual behavior type-speciﬁc representation in assisting the recommendation phase between users and items. To achieve this goal, we feed ˆHinto a feed-forward neural network to calculate the importance weights as follows (take the user side as example): where γrepresents the intermediate values which are fed into a softmax function to generate the importance weight ˆγ. In addition, δ(·) denotes the ReLU activation function. W∈ Rand w∈ Rrepresents trainable transformation matrices. b∈ Rand b∈ R are bias terms. ddenotes the embedding dimension of hidden layer. After obtaining the weight ˆγcorresponding to behavior type of k, the embedding aggregation process is performed as: H=PP Hand Hserve as the input user/item embedding for (l + 1)-th graph layer. Given the generated graph structure of user-item interactions, we learn the high-order multi-behavioral relations over G = {U, V, E} by stacking multiple information propagation layers. The embedding propagation between the (l)-th and (l + 1)-th graph layers can be formally represented as below: H= ψ(ξ(η({H: x= 1})) H=ˆγ· MH-Att(Xα· H· W) (6) where H∈ Rdenotes the embeddings of all users for the (l + 1)-th graph layer. Given the behavior type of k, the adjacent relations are represented as X∈ R. Similarly, embeddings of items (v∈ V ) can be generated based on the above propagation and aggregation operations. To optimize our GNMR model and infer the hyperparameters, we perform the learning process with the pairwise loss which has been widely used in item recommendation task. Speciﬁcally, for each user uin the mini-batch training, we deﬁne the positive interacted items (i.e., (v, v, ..., v)) of user uas S. For generating negative instances, we randomly sample S non-interacted items (v, v, ...v) of user u. Given the sampled positive and negative instances, we deﬁne our loss function as follows: L =max(0, 1 − Pr+ Pr) + λkΘk(7) we incorporate the regularization term |Θkwith the parameter λ. The learnable parameters are denoted as Θ. The training process of our model is elaborated in Algorithm 1. In this section, we conduct experiments to evaluate our proposed GNMR method by comparing it with state-of-theart baselines on real-world dataests. 1) Data Description: We evaluate our GNMR on three datasets collected from MovieLens, Yelp and Taobao platforms. The statistical information of them is shown in Table I. mance evaluation of recommender systems. In this data, we differentiate users’ interaction behaviors over items in terms of the rating scores, i.e., r≤ 2: dislike behavior. (2) 2< r<4. neutral behavior. (3) r> 4: like behavior. repository from Yelp platform. Besides the users’ rating data, this data also contains the tip behavior if user gives a tip on his/her visited venues. Ratings are also mapped into three interactions types with the same partition strategy in MovieLens. Similarly, like behavior is the our target and other auxiliary behaviors are {tip, neutral, dislike}. behaviors from Taobao platform, i.e., page view, add-to-cart, add-to-favorite and purchase. 2) Evaluation Metrics: We utilize two metrics Hit Ratio (HR@N) and Normalized Discounted Cumulative Gain (NDCG@N) for evaluation. The higher HR and NDCG scores represent more accurate recommendation results. We sample each positive instance with 99 negative instances from users’ interacted and non-interacted items, respectively. 3) Baselines: We consider the following baselines: framework with the consideration of user and item bias. network to project users and items into embeddings. neural networks. We consider three variants with different feature modeling methods, i.e., i) NCF-N: fusing the matrix factorization and multi-layer perceptron; ii) NCF-G: performing ﬁxed element-wise product on user and item embeddings; iii) NCF-M: using multi-layer perceptron to model the interaction between user’s and item’s features. embedding generation in collaborative ﬁltering with the reconstruction objective in the output space. developed to learn latent representations of users and items with the incorporation of non-linearities. framework with parameter sharing strategy between different ratings of users, to improve collaborative ﬁltering. lations between users and items for collaborative ﬁltering. to project users and items into latent representations over the structure of user-item interaction graph. The embedding propagation is performed across graph layers. late the prediction of different types of user behaviors. In NMTR framework, a shared embedding layer is designed for different behavior types of interactions. nism and recurrent neural network to aggregate signals from users’ browse and purchase behaviors. 4) Parameter Settings: We implement our GNMR model with TensorFlow and the model is optimized using the Adam optimizer during the training phase. We set the dimension of embeddings as 16 and the number of latent dimensions in our memory neural module as 8. In addition, the batch size and learning rate in our model is set as 32 and 1e. The decay rate of 0.96 is applied during the learning process. In this section, we evaluate all approaches in predicting like behaviors of user over different items on different real-world datasets. We report HR@10 and NDCG@10 in Table II. We can observe that GNMR outperforms all baselines on various datasets in terms of both HR@10 and NDCG@10. For example, GNMR achieves relatively 6.06% and 8.34% improvements in terms of HR, and 8.28% and 15.0% improvements in terms of NDCG, over NMTR and DIPN, respectively on MovieLens dataset. Such signiﬁcant performance gain could be attributed to the explicitly modeling of inter-dependencies among different types of user-item interactions. The best performance is followed by NMTR which deﬁnes the correlations between different types of user behaviors in a cascaded way. In contrast, our GNMR model automatically captures the implicit behavior dependencies based on our developed graph neural networks. Furthermore, the performance gap between GNMR and the state-of-the-art graph neural collaborative ﬁltering model–NGCF, justiﬁes the advantage of incorporating the cross-interaction collaborative relations into the graph neural architecture for user’s preference encoding. In addition, we can observe that recommendation techniques (i.e., NMTR and DIPN) with the consideration of multibehavioral patterns improve the performance as compare to other types of baselines which fail to differentiate interaction relationships between user and item. This points to the positive effect of incorporating multi-typed interactive patterns in the embedding function of recommender systems. Among other baselines, the graph neural network-based model (i.e., NGCF) achieves better performance in most cases, which justiﬁes the rationality of encoding the collaborative signals by conducting the embedding propagation between neighboring nodes based on user-item graph-structural relations. We further measure the ranking quality of top-N recommended items with varying N from 1 to 9 with an increment of 2. The evaluation results (measured by HR@N and NDCG@N) on Yelp data are presented in Table III. We can observe that GNMR achieves the best performance under different values of N, which suggests that GNMR assigns higher score to the user’s interested item in the top-ranked list and hit the ground truth at top positions. We further conduct experiments to evaluate the componentwise effect of our proposed GNMR framework. Evaluation results of several designed model variants are shown in Figure 2. Type-speciﬁc Behavior Embedding Component. We ﬁrst design a contrast method GNMR-be without the type-speciﬁc behavior embedding layer, to generate the propagated feature embedding of individual type of user behavior during the message passing process. The performance gap between GNMRbe and GNMR indicates the effectiveness of our attentionbased projection layer to capture the type-speciﬁc behavioral features. Message Aggregation Component. Another dimension of model ablation study aims to evaluate the efﬁcacy of our message aggregation layer. GNMR-ma is the variant of our framework, in which the behavior dependency modeling component is removed in our graph-structured embedding propagation. From Figure 2, we observe that GNMR outperforms GNMRma, which shows that capturing the type-wise behavior dependencies is helpful for learning relation-aware collaborative signals and improving the recommendation performance. We also perform experiments to evaluate the recommendation accuracy with the consideration of different user-item relations from multi-typed user behaviors on both MovieLens and Yelp. Particularly, for MovieLens, we ﬁrst design three variants: w/o dislike, w/o neutral, w/o like indicate that we do not include the dislike, neutral and like behavior respectively into our multi-behavior enhanced graph-based recommendation framework. We further introduce another model variant (only like) which merely relies on the target type of behaviors for making recommendation. We apply similar settings to Yelp data with four variants of our GNMR method. Evaluation results in terms of HR@10 and NDCG@10 are listed in Table IV. As we can see, the improvement is quite obvious when we consider more diverse behavior types for multibehavioral knowledge integration in our graph neural network. In addition, compared with the model variant which only considers the target type of behavior data (i.e., like behavior) for prediction, we ﬁnd that our multi-behavior enhanced recommender system GNMR do help to improve the performance, which indicates the positive effect of incorporating auxiliary knowledge from other types of user-item interaction behaviors into the embedding function of recommendation model. In this subsection, we examine the inﬂuence of the depth of GNMR to investigate the effectiveness of stacking multiple information propagation layers. Speciﬁcally, we vary the depth of our graph neural networks from 0 (without the message passing mechanism) to 3. GNMR-1 is deﬁned to represent the method with one embedding propagation layer and similar notations for other variants. In Figure 3, the y-axis represents the performance variation percentage compared with GNMR2, so as to present results of different datasets in the same ﬁgure. From evaluation results, we can observe that GNMR2 and GNMR-3 outperform GNMR-1, which justiﬁes the effective modeling of high-order collaborative effects in our multi-behavior enhanced recommendation scenario. Learning second- or third-order collaborative relations is sufﬁcient to encode the user-item interactive patterns. Further increasing the number of propagation layers is prone to involve noise in our graph-based neural collaborative ﬁltering. This paper contributes a new framework, named GNMR for multi-behavior enhanced recommendation through modeling inter-type behavior dependencies under a graph-structured message passing architecture. GNMR effectively aggregates the heterogeneous behavioral patterns of users by performing embedding propagation over user-item interaction graph. Our GNMR could capture the heterogeneous relations among different types of user-item interactions for encoding graphstructured collaborative signals for recommendation. Through experiments on real-world datasets, our proposed GNMR is shown to achieve better performance compared with state-ofthe-art baselines. Furthermore, the ablation studies show that GNMR is able to comprehensively leverage the multi-typed behavioral patterns to improve recommendation accuracy. In future, we are interested in exploring the attribute features from user and item side, such as user proﬁle and item textual information, so as to further alleviate the data sparsity problem. More generally, we could extend our GNMR framework to model other heterogeneous relationships (e.g., different social connections or item dependencies) in recommendation. We thank the anonymous reviewers for their constructive feedback and comments. This work is supported by National Nature Science Foundation of China (62072188, 61672241), Natural Science Foundation of Guangdong Province (2016A030308013), Science and Technology Program of Guangdong Province (2019A050510010).
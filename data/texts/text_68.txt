change information and form online communities. Subject to the homophily effect [1] and the bias in the information towards like-minded peers [2], social network users tend to connect with others with similar opinion or partisanship, often leading to segregation. Impacts of segregation in social networks include limiting the exposure to diverse perspectives [3], amplifying economic inequality [4], and reinforcing user’s purchase interests in e-commerce [5]. A formal deﬁnition of segregation is as follows. Consider a social network represented by a directed graph G = (V, E) without loops or multiple edges, where V = R ∪ B is a partition of the set of users into red (R) community and blue (B) community. Let Ebe the set of edges connecting nodes in different communities. We deﬁne the segregation measure as:|E| This segregation measure compares the actual number and the maximal possible number of inter-community edges. When the network is completely segregated, s = 1. Similar deﬁnition of segregation can be found in the segregation index deﬁned in [6] and the assortativity coefﬁcient deﬁned in [7]. A vivid example of segregation in a directed graph is from Twitter users’ retweeting behavior before the 2020 presidential election [8], as shown in Fig. 1. This study aims to control segregation via exogenous incentives, i.e., keep the segregation measure s low by encouraging inter-community connections. Speciﬁcally, we construct a game which models users’ interactions on social networks. In this game, users are strategic decision makers. When deciding with who to connect, i.e., what edges to form, each user faces a trade off: staying connected to others within the same community vs. obtaining an exogenous incentive for making inter-community connections. First, we show that segregation is a natural consequence of the game. Then, we design a mechanism, named Algorithmic Recommendation Mechanism (ARM), which is based on the weak-tie theory [10] and encourages inter-community connections by offering exogenous incentives. With ARM incorporated in the game, we show that connecting with users both in the same community and different community, i.e., integration, is the only rational choice for users in the game to maximize their utilities, which leads to a low segregation measure s. In the end of Section 1, some important symbols used in this article are shown in Table 1. 1.1 Main Results and Organization (1) By representing the social network as a directed stochastic block model (DiSBM) [11], Section 2 formulates an edge formation game and shows that it leads to a Nash equilibrium where the network is segregated. (2) Section 3 proposes an Algorithmic Recommendation Mechanism (ARM) which offers users additional rewards by intercommunity recommendation. Incorporating this mechanism leads to a Bertrand-like game [12] with a unique Nash equilibrium where segregation is mitigated. (3) Section 4 considers the case where ARM’s recommendation acceptance probability evolves as a semi-Markov process. Analysis within a stochastic game framework shows that users in the network reach the time-evolving Nash equilibrium of the resulting game. (4) Finally, Section 5 presents numerical simulations to illustrate how the proposed ARM mitigates segregation and increases inter-community connections. The numerical study also suggests that higher recommendation acceptance probability is effective during polarizing events where the level of segregation is high. 1.2 Related Work Previous works that are related to ours can be considered under three categories: (1) Social network segregation: Agent-based opinion dynamics models [6], [13], [14], [15] are the mainstream approach to study the segregation on social networks. Sasahara et al. [6] introduced social inﬂuence and unfriending into their model, where users can change both their opinions and connections based on the received information. Baumann et al. [13] proposed a radicalization mechanism which reinforces extreme opinions from moderate initial conditions. Banisch and Olbrich [14] considered the social feedback’s effect on users expressing alternative opinions and analyzed the sufﬁcient conditions for stable bi-polarization on a stochastic block model-structured network. Blex and Yasseri [15] proposed a network-based solution to the Schelling’s model and derived that algorithmic bias in the form of rewiring is incapable of preventing segregation. In this work, we construct the network as a DiSBM and partition users into two communities (blocks) representing their ﬁxed labels. Similar procedure is considered in [14], [16]. More importantly, we adopt a game-theoretic model instead of opinion dynamics to analyze users’ decision of forming connections with others, which captures the psychological features of decision-making. (2) Nash equilibrium analysis of social networks: Game theory is a widely used analysis tool for social networks. Jackson and Wolinsky [17] analyzed the stability and efﬁciency of social networks when self-interested users can form or cut links in a game setting. Bramoull´e et al. [18] studied the edge formation as individual players choosing their partners in a 2-by-2 anti-coordination games. Avin et al. [19] constructed an evolutionary network formation game and demonstrated that preferential attachment is the unique Nash equilibrium. Alon et al. [20] formulated a game-theoretic model to deal with the incentives of interested parties outside the network in information diffusion. Mele [21] proposed a potential game on a network where user’s payoff depends on both directed links and link externalities. Game theoretic models have also been applied to structure identiﬁcation of industrial cyber-physical systems [22], conﬂict mitigation through third party interventions [23], and trust management mechanism in mobile ad hoc network [24]. In this work, we propose an edge formation game in which the players (i.e., social network users) face the trade off between connecting within community and forming inter-community connections. The link externalities [21] inspire the idea of inter-community friend recommendations in our model, as explained in Section 3.1. We analyze the Nash equilibrium of the game to learn whether the network is segregated or not. (3) Weak Ties and segregation mitigation strategies: In this paper, we propose an Algorithmic Recommendation Mechanism (ARM); an overview of the framework is shown in Fig. 2. The ARM incorporates the positive effect of weak ties, or ”friends of a friend”. Granovetter’s work [10] on Weak Tiestheory demonstrates that a person’s weak contacts are more likely to bring novel information such as job opportunities to him compared with his close contacts. Liu et al. [25] discussed the increased online weak ties with the emergence of new media platforms and functions such as ”follow the post”, and ”retweet”. Mele [21] proposed a network formation model involving indirect connections, which is an extended version of weak tie. In this section, we ﬁrst propose an edge formation protocol followed by users in the social network. This protocol re- Ethe set of directed edges at time t pthe probability that a red user followsanother pthe probability that a blue user follows another Uuser i’s utility at time t in the game with ARM D(i, j) whether user j follows user i from the different ”Red users” is abbreviation for the users from the red community. So is ”blue users”. Throughout the table and the rest of this paper, we use ”follow” interchangeably with ”connect with” to denote initiating a directed edge with others, with the edge from the ”friend” pointing to the initiator (i.e., ”follower”). sults in a directed stochastic block model (DiSBM) where, the parameters correspond to the actions of users. The edge formation protocol is based on a best response strategy followed by users i.e., users respond to what others did in the previous time instant in order to maximize a utility function. By analyzing the game that corresponds to the best response-based edge formation protocol, our main result of the section shows that it has a unique Nash equilibrium that corresponds to a segregated network (network with two disconnected communities), and the best response-based edge formation protocol converges to this Nash equilibrium. In social networks, users are naturally partitioned into communities based on nodal attributes such as geographic locations, party afﬁliations, and personal interests [26]. For example, [27] demonstrates that the network of political communication on Twitter exhibits a highly segregated partisan structure. The directed stochastic block model (DiSBM) [11] is frequently used to represent the structure of such networks with communities. We consider a time-varying version of the DiSBM model with two communities (N red users and N blue users) where the model parameters correspond to the actions taken by users in each community in a repeated game (i.e., a normal form game which is repeated via a best response strategy adopted by the players). More speciﬁcally, at each time instant t, user i chooses the edge formation probabilities (i.e., its actions) in a manner that maximizes the expected value of the utility function, where, D(i, j) =1 (i, j) ∈ E0 (i, j) /∈ E(3) The utility function Uconsists of two components. TheX ﬁrst componentD(i, j) is i’s number of followers in a different community i.e., its popularity in anotherX community. The second componentD(j, i) is i’s number of friends in different community, representing its efforts in maintaining inter-community connections. Thus, the utility function (2) represents how users face a trade-off between popularity in different community and homophily in its own community when forming connections in social networks. With this notation, the DiSBM based edge formation via utility maximization is given in Protocol 1. Input: G={V, E} where V =R ∪ B, t = 0, 1, 2, · · · Output: p, p Process: 1) p, p∼ Unif[0, 1] (i.e., the initial parameters of the model are sampled from a uniform distribution). 2) At each odd time instant (i.e., t = 1, 3, 5, · · · ), red users take actions according to steps 2.1 and 2.2 below while the blue users adhere to the action they adopted at time t − 1. 2.1) ∀i, j ∈ R, i connects with j with probability 3) At each even time instant (i.e., t = 2, 4, 6, · · · ), blue users take actions according to steps 3.1 and 3.2 below while the red users adhere to the action they adopted at time t − 1. 2.2 Discussion of Protocol 1 Protocol 1 induces a DiSBM characterised by best response strategy: In Protocol 1, red users and blue users take actions alternatively by maximizing utility functions. More speciﬁcally, at each odd time instant t, red users choose the probability pvia maximizing the expected utility of a sample uniformly drawn from the red community R, while blue users keep the probability p= p. Blue users choose their parameters at even time steps according to similar steps. Therefore, Protocol 1 can be viewed as a DiSBM with time varying parameters resulting from the best response strategies played by users in the network. In other words, Protocol 1 corresponds to a DiSBM with the probability where p, pare the best response strategies taken by the red and blue users at each time instant, respectively. Protocol 1 corresponds to the regime with dense intra- and sparse inter-community edges: In the context of real world social networks, Protocol 1 corresponds to the regime with sparse inter-community edges and dense intra-community edges.In other words, the the probability matrix Pis of the form, A connection probability matrix of the form (7) emulates the structure of many real world social networks where individuals are densely connected within a community (i.e., O(N) edges within a community of size N ) and sparsely connected between communities (i.e., O(N ) edges between two communities each of size N ). Connection probability matrices of the form (7) are further motivated by the fact that users act differently when forming intra-community and inter-community edges in social networks. For example, Twitter users have different political opinions and tend to follow or retweet users with similar opinions. Sports forum (e.g. Reddit) users have different favorite teams and tend to communicate more frequently with users who support the same team. Remark 1 (The game corresponding to the protocol). Note that there exists a normal-form game corresponding to Protocol 1 where, set of nodes V = R ∪ B are the players, the interval (0, 1] is the set of actions for each player i ∈ Vno and, the utility function of each i ∈ V is EUorno EU, i.e., the expected utility function of users in one community depending on the community i belongs to (where Uis given in (2) and t is any ﬁxed time instant). When this normal-form game is of a special type (e.g. a strictly dominant strategy proﬁle, a submodular game), the best response based Protocol 1 is guaranteed to converge to the game’s Nash equilibrium. Henceforth, for any such best response based protocol, we use the term the game corresponding to the protocol to refer to this induced normalform game by that protocol. 2.3 Nash Equilibrium Analysis of the Game Corresponding to Protocol 1 Thus far (in Sec. 2.1 and 2.2) we discussed the intuition behind the DiSBM based edge formation (Protocol 1) in which the network parameters arise from each community maximizing a utility function (i.e., a best response strategy). In this subsection, we analyze the game that corresponds to Protocol 1 (recall from Remark 1 that this is the induced normal-form game) and the main result of this subsection (Theorem 1) indicates that: i. Protocol 1 converges to a stationary state i.e., the sequence of parameters (p, p, t = 1, 2, ..) chosen by individuals from each community converges to ﬁxed values p, p; ii. the ﬁxed values at the stationary state are p= 1, p= 1 and they correspond to the unique Nash equilibrium of the normal-form game corresponding to Protocol 1 i.e., at the stationary state, the network will almost surely have no inter-community edges, leading to echo chambers. Theorem 1 (Convergence of Protocol 1 to the Nash Equilibrium). Consider the best response dynamics given in Protocol 1 (Sec. 2.1). Segregation (i.e., p=p=1) is the unique Nash equilibrium of the corresponding game and p, pboth converge to it as time t tends to inﬁnity. Proof. The proof of Theorem 1 is straightforward with the main idea being that the Nash equilibrium (p=p=1) corresponds to users’ strictly dominant strategy. The detailed argument is given in Appendix A.1 for completeness. Sec. 2 showed that segregation is the Nash equilibrium of the game corresponding to Protocol 1. This leads us to the following question: how can we augment Protocol 1 such that, i. the normal-form game corresponding to the augmented protocol has a Nash equilibrium that is not segregation; ii. the strategy proﬁles of the players converge to the Nash equilibrium (in the previous point) over time. To this end, this section presents an algorithmic recommendation mechanism (ARM), which incentivizes users to form inter-community edges. Then, we illustrate how ARM changes the Nash equilibrium of the corresponding game (compared with the segregation result shown in Theorem 1) and mitigates segregation in the network. 3.1 Algorithmic Recommendation Mechanism (ARM) The aim of introducing ARM is to reshape the Nash equilibrium of the game corresponding to Protocol 1 (which leads to a segregated network as shown in Sec. 2.3) such that the resulting network is not segregated. To this end, ARM incentivizes users to form inter-community edges by providing exogenous rewards. More speciﬁcally, if i follows j in the different community, and j has not yet followed i, ARM will recommend i to j with a probability proportional to the number of 2 hop connections from i to j. Then, the link recommendation is accepted by j with some probability, thus increasing i’s popularity in another community and its utility (as indicated in the utility function (2)). Fig. 2 shows an example of ARM recommending links. Recall the function Ddeﬁned in (3) to count the number of edges between different communities. Similarly, we deﬁne another function: S(i, j) =1 (i, j) ∈ E0 (i, j) /∈ E(8) Thus, for a given pair of nodes i, j, Sindicates whether an edge (i, j) exists and whether it is between the same community. With this notation, we are now equipped to present the ARM. Algorithm 1. Algorithmic Recommendation Mechanism (ARM) Input: E– the edge set at time t and R, B – the two node sets representing two communities. Output: {(i, j)} – the set of recommendation links. Process: At time t, for any ordered pair (i, j) such that i, j are in different communities, ARM forms an edge from i to j according to steps below: 1) If j follows i, i.e., (i, j) ∈ E, then stop recommendation; otherwise proceed to step 2. 2) For any user jsuch that S(j, j) = 1 , count the total number of edges between such jand i, i.e.,P D(i, j)+D(j, i). Recommend i to j with probability where is the number of 2 hop connections from i to j, and N − 1 is used to offset the linear growth of 2 hop connections (between two users) to the number of users in the network. 3) If i was recommended to j in step 2, j accepts the recommendation (i.e., the edge (i, j) is formed) according to a Bernoulli random variable with probability of success C, where C is the acceptance probability. Discussion of Algorithm 1: (1) Step 1 considers the fact that an edge ARM recommends may already exist. In that case, no further steps are taken by ARM. (2) Step 2 recommends inter-community links with probability according to (9), which favors recommending links between users with more 2 hop connections. To justify how 2 hop connections increase the recommendation probability, suppose i is a red user and j a blue user, then as indicatedX in (10),D(i, j)S(j, j) speciﬁes the case that i is followed by j’s blue friends;D(j, i)S(j, j) speciﬁes the case that i, j share blue friends in common. In both cases, the bigger the value is, the more likely that ARM will recommend i to j. (3) Step 3 considers the fact that each recommended link turns into an actual edge according to a Bernoulli random variable. In practice, the probability of success depends on the amount of incentive provided by the network administrator in the form of exogenous reward. (4) We provide the complexity analysis of ARM as follows. Step 2 queries the union of j’s follower list and i’s follower list/friend list. With hash table based data structure, the query takes O(1) time and the space complexity of the hash table is O(N). The overall time complexity and space complexity are both O(N). There are specialized data structure for real-world large-scale graphs which is out of scope in this work, and we refer interested readers to a survey of graph database models [29]. 3.2 Edge Formation Protocol with ARM To explore how ARM affects segregation, we ﬁrst augment the utility function (2) in a manner that reﬂects the tradeoff between staying connected within the same community and obtaining exogenous incentives provided by ARM. The augmented utility function is In (11), the ﬁrst summation term is the original utility as in (2). The second summation term is the expected number of inter-community edges formed by ARM for user i. The third summation term is the reward for connecting users from two communities (e.g. a red user connects its red followers to its blue friends) in ARM recommendations. These two summation terms represent ARM’s exogenous incentives, where the users’ beneﬁt of connecting with others depends on the composition of friends of friends. The edge formation via maximizing the augmented utility (11) is given in Protocol 2 below. Input: G={V, E} where V =R ∪ B, t = 0, 1, 2, · · · Output: p, p Process: 1) p, p∼ Unif[0, 1]. 2) At each odd time instant (i.e., t = 1, 3, 5, · · · ), red users take actions according to steps 2.1 and 2.2 below while the blue users adhere to the action they adopted at time t − 1. 3) At each even time instant (i.e., t = 2, 4, 6, · · · ), blue users take actions according to steps 3.1 and 3.2 below while the red users adhere to the action they adopted at time t − 1. 4) At each time instant, ARM forms inter-community edges according to Algorithm 1. 3.3 Nash Equilibrium Analysis of the Game with ARM In the previous subsection (Sec. 3.2), we proposed Protocol 2 where users play the best response in a network incorporated with ARM. In this subsection, we analyze the game corresponding to Protocol 2 (recall Remark 1) and show that: i. the game has a submodular structure similar to the Bertrand game [12], which guarantees that Protocol 2 converges to a ﬁxed value (p, p); ii. the ﬁxed value at the steady state depends on the acceptance probability C (deﬁned in Algorithm 1). If C >, the Nash equilibrium of the corresponding game leads to social integration, i.e., the only rational choice for users to maximize their utilities is to connect with both users in the same community and different community. Theorem 2 (Convergence of Protocol 2 to the Nash Equilibrium). Consider the best response dynamics given in Protocol 2 (Sec. 3.2). If the acceptance probability (i.e., C deﬁned in Algorithm 1) is greater than, then segregation is mitigated (i.e., p< 1, p< 1) at the unique Nash equilibrium of the corresponding game, and p, pboth converge to the Nash equilibrium as time t tends to inﬁnity. Proof. The main idea behind the proof of Theorem 2 is to show that the game corresponding to Protocol 2 is submodular, which guarantees the convergence of users’ best response dynamics to the Nash equilibrium. The detailed proof is given in Appendix A.2. Theorem 2 illustrates how the proposed ARM reshapes the segregation equilibrium of the game and results in an integrated network, where users are incentivized to form inter-community connections. Recall that in Protocol 2 (Sec. 3.2) we assume ARM’s link recommendation is accepted according to a Bernoulli random variable with ﬁxed acceptance probability C. In this section we relax the assumption by allowing C to evolve over time as the sample path of a semi-Markov process. We then modify Protocol 2 to account for this time-variant effect, and illustrate that the modiﬁed protocol (Protocol 3) induces best response dynamics which tracks the Nash equilibrium evolving with the time-variant C. 4.1 Edge Formation Protocol with Markovian Acceptance Probability Motivation: Real world social networks have time-variant level of segregation. We justify this phenomenon by the two motivating examples used in Sec. 2.2 as follows. During a politically polarizing event (e.g. election or legislation), Twitter users tend to segregate and reduce their connections with others from a different community. Similarly, on sports forums such as Reddit’s related channels, users’ online communication tend to be more polarized during sports league’s season (e.g. NBA’s playoff or NCAA’s March Madness), while less polarized during off-season. In the literature, [31] models Twitter users’ emotion dynamics as a Markov process. [8] characterizes the pattern of Twitter users’ retweets during the presidential election using a Markov bridge model. [32], [33] utilize Twitter users’ messages as signals to a hidden Markov model to determine when an anticipated event (e.g. social activities, sports, weather) starts. The seasonal pattern of segregation requires the network administrator to spend time-varying efforts to control it, i.e., spend different efforts on recommendation at different times to encourage inter-community connections. We capture this temporal pattern by modeling the acceptance probability C (deﬁned in Algorithm 1) as a semi-Markov process C, t = 0, 1, · · · . The semi-Markov process of the acceptance probability is Markovian only at speciﬁed jump instants, i.e., when C transits. As Ctransits into the next state, it stays there for a state holding time T, which we assume is a constant. T measures the interval between two consecutive transitions of C(i.e., how often the network administrator changes its operation condition), thus it is much longer than (e.g. 100×) the time scale of user’s action in the protocol. More precisely, we deﬁne the semi-Markov process as follows: Ctakes value in a ﬁnite state space S= {C, C, · · · , C}, has an initial state C∈ S, and a Markov transition probability matrix P conditionally independent of users’ actions P (C= j|C= i, p, p) = P (C= j|C= i) P, t + 1 mod T= 0 =6= 0 and i = j(16) 6= 0 and i 6= j where p, pare respectively red and blue users’ actions at time t. With these notations, the protocol with Markovian acceptance probability is given in Protocol 3. Protocol 3. DiSBM Based Network Edge Formation with Markovian Acceptance Probability Input: G={V, E} where V =R ∪ B, t = 0, 1, 2, · · · Output: p, p Process: 1) p, p∼ U [0, 1]; Cis the initial acceptance probability. 2) At each odd time instant (i.e., t = 1, 3, 5, · · · ), red users take actions according to steps 2.1 and 2.2 below while the blue users adhere to the action they adopted at time t − 1. 3) At each even time instant (i.e., t = 2, 4, 6, · · · ), blue users take actions according to steps 3.1 and 3.2 below while the red users adhere to the action they adopted at time t − 1. 4) At each time instant, Cevolves according to the transition rule (16). ARM forms inter-community edges according to Algorithm 1 with acceptance probability C. 4.2 Nash Equilibrium Analysis of the Game Corresponding to Protocol 3 In Protocol 3, we consider the edge formation process in an inﬁnite horizon where users aim to maximize their discounted sum of payoff. We study Protocol 3 by analyzing a corresponding stochastic game, with the Markovian acceptance probability Cas the state of the game. The main result of this subsection (Theorem 3) indicates that: i. Protocol 3 captures user’s best response dynamics, which converges to a steady state dependent on C. Once Ctransits to a new state, user’s best response will converge to a new steady state; ii. user’s optimal strategy is to myopically optimize its one-stage payoff at each round of the game (with C as the state of the game). Theorem 3 (Convergence of Protocol 3 to the time-varying Nash Equilibrium). Consider the best response dynamics given in Protocol 3 (Sec. 4.1). If the acceptance probability (i.e., C) evolves as a semi-Markov process speciﬁed in (16), then p, p both converge to the Nash equilibrium dependent on Cbefore Ctransits. Proof. The proof of Theorem 3 is based on the assumption that the transition dynamics of Care conditionally independent of users’ actions as shown in (16). Therefore before Ctransits to the next state, users’ best response dynamics is similar to that of Protocol 2, i.e., converges to the Nash equilibrium corresponding to C(which is ﬁxed during the state holding time T). The detailed argument is given in Appendix A.3 for completeness. Theorem 3 indicates that user’s best response dynamics will converge and reach the time-evolving Nash equilibrium in the game corresponding to Protocol 3. TION GAME In this section, we provide numerical results to illustrate how incorporating ARM (Algorithm 1) into the edge formation protocol (Protocol 2) reduces segregation, i.e., users form both intra- and inter-community edges at the Nash equilibrium of the corresponding game. We also illustrate that higher acceptance probability C moves the corresponding game’s Nash equilibrium closer towards social integration, i.e., users form more inter-community edges at the Nash equilibrium. 5.1 Convergence of Best Response Strategies Corresponding to Protocol 2 Recall that in Protocol 2, we propose that users alternatively play their best response strategies. In the following numerical example, we illustrate how users’ best response dynamics converges to the Nash equilibrium of the corresponding edge formation game. We consider two communities each with N = 20 users, and they play the edge formation game according to Protocol 2 for T = 20 time steps. The ARM’s acceptance probability C (deﬁned in Algorithm 1) is set to be 0.8. Fig. 4 displays the convergence of two users’ best responses to the unique Nash equilibrium (0.75, 0.75). The steady state indicates that with ARM incorporated in the protocol and acceptance probability C >, users are incentivized to connect with users in different community, which illustrates the usefulness of ARM in mitigating segregation. 5.2 The Effect of Varying Recommendation Acceptance Probability Recall that we set ARM’s acceptance probabilities to be a ﬁxed value in Protocol 2. In order to visualize the effect of different acceptance probabilities (deﬁned in Algorithm 1) on the edge formation game, we vary the acceptance probability fromto 1 and compare the resulting network structure sampled from the model at the Nash equilibrium. Fig. 5 shows the social network at the Nash equilibrium under different acceptance probabilities, indicating that intercommunity edges become denser with higher acceptance probability. We use the segregation measure deﬁned in (1) as a quantitative measurement of segregation. Networks with high segregation measure have dense intra-community connections but sparse inter-community connections. Fig. 6 shows that segregation measure decreases with higher acceptance probability values, which agrees with our observation of the network structure. The results indicate that, during polarizing events when users tend to be more segregated, the network administrator can mitigate segregation by spending more efforts on friend recommendations (i.e., to achieve a higher acceptance probability C) so that more inter-community edges can be formed. The results prove ARM’s capability under different social settings. 5.3 Validation of ARM in Opinion Dynamics Model To verify the efﬁcacy of ARM in mitigating segregation, we implement it on the opinion dynamics model proposed in [14]. In the model, there are two opinions that agents can adopt and express. More precisely, an agent i can adopt o∈ {1, −1}. The model also accounts for how conﬁdent i is about the two opinions by two real-valued terms Q(1) and Q(−1). At each step, an agent (say i) is chosen at random and expresses its opinion oto a randomly chosen neighbor j, and j responds to i’s expression with agreement or disagreement depending on o. The Q(o) represents an internal evaluation of the opinions based on the social response i obtains on expressing them. The value is updated Q(o) =(1 − α)Q(o) + αrif o = expressionQ(19) where leading to a positive feedback for o= oand to a negative one if o6= o. The parameter α represents learning rate. We incorporate ARM into this model as follows. When agent i’s expression is disagreed by j, i will be recommended to connect with j’s neighbors who share the same opinion with i. Similar to ARM, the recommendation will be accepted with an acceptance probability C. Therefore although i experiences disagreement with j, it will gain some conﬁdence in its expression through agreement with j’s neighbors. The Q(o) is updated as Q(o) =(1 − α)Q(o) + αrif o = expressionQ(21) where( We use the parameters provided by the authors. The network is a random geometric graph with neighborhood radius r = 0.175. There are N = 100 agents. Q take random initial values in Unif(−0.5, 0.5). The learning rate α = 0.05. Follow the authors’ implementation, we also set an exploration rate  = 0.1, which measures the probability that agents express their less favorable opinions. We set the recommendation acceptance probability C = 0.9. As shown in Fig. 7, when agents follow the opinion dynamics model without ARM, the segregation measure of the network keeps increasing and maintains at a high level in the ﬁnal stage, whereas the segregation measure remains at a relatively low level when agents follow the model is incorporated with ARM. Fig. 8 compares the evolution of the network’s community structure. The network is segregated into nearly disconnected components when ARM is not incorporated. On the contrary, the network is less segregated when ARM is incorporated. This numerical validation in opinion dynamics model veriﬁes the efﬁcacy of ARM in mitigating network segregation. Conclusions: This paper considered an edge formation protocol on social networks represented by a directed stochastic block model (DiSBM) to describe how users choose to connect with each other. The edge formation protocol represents how each individual chooses the connection probabilities in order to maximize a utility function that represents the tradeoff between homophily (preference to be connected with one’s own group) and popularity in the different community. Analysis of the game that corresponds to the best response based protocol shows that segregation is the unique Nash equilibrium. We then proposed an algorithmic recommendation mechanism (ARM) to mitigate segregation. ARM recommends users from different communities to form weak ties and provides incentives to those that form them. Assuming each recommendation suggested by the ARM is accepted with an acceptance probability, we show that the segregation level at the Nash equilibrium of the corresponding game depends on it. Thus, the segregation of the network can be controlled by introducing the ARM. We further extend our results to the case where the acceptance probability itself has Markovian dynamics and illustrate how the individuals in the network reach the time-evolving Nash equilibrium of the resulting game. Thus, our results provide a novel mechanism design perspective into the problem of mitigating segregation in social networks. Limitations and Extensions: The proposed edge formation game and its analysis can be extended to further contexts in several directions. 1) The edge formation protocol proposed in this paper assumes homogeneity among users in one community, i.e., users’ community information solely determines their edge formation probabilities. An interesting future direction is to incorporate heterogeneity (e.g., preferential attachment with ﬁtness) into the network model and apply methods such as friendship paradox sampling [34], [35], [36] to assign different weights to the 2 hop connections between different pairs of users. 2) Another interesting direction is to consider ARM’s parameter (e.g., the recommendation acceptance probability) depends on users’ actions and incorporates a feedback law, i.e., ARM raises the acceptance probability when users become more segregated in network. Such extensions might be helpful in analyzing the existence of Markov Perfect Equilibrium (MPE) of the corresponding stochastic game, which enhances the understanding of users’ long-term strategy in an evolving social network. 3) The segregation measure (1) based on inter-community edges can be further applied in other network topics such as community detection [37], [38], [39], and estimation of latent network factors [40]. A.1 Proof of Theorem 1 In Protocol 1, the utility function (2) of each user in the same community is a random variable with the probability distribution induced by the DiSBM model, which has the same expected value. Users in the same community can be viewed as independent copies of a single player. Thus the edge formation game can be reduced to a two-player game, where each player represents users in one community. The utility of the two players, Uand U, are respectively the expected value of the utility function (2) for red and blue users: It is shown from (23) that p= 1 is red player’s strictly dominant strategy. This is equivalent to say, at red player’s turn, it will choose p= 1 as its best response strategy regardless of blue player’s previous action, and will never switch again. Similar result holds for blue player. Therefore the game converges in 2 time steps, i.e., p= p= 1 for all t = 2, 3, · · · . Thus, the game corresponding to Protocol 1 converges to its unique Nash equilibrium (p, p) = (1, 1) after each player acted once, i.e., users only form intra-community edges and the social network is segregated into echo chambers after t = 2. A.2 Proof of Theorem 2 Similar to the proof of Theorem 1, we assume users in one community are independent copies of a single player and reduce the game with ARM to a two-player game. Based on (11), the utility of the red player and blue player in the two-player game are respectively: U= p− p+ Cp(2 − p− p) + p(1 − p)(25) U= p− p+ Cp(2 − p− p) + p(1 − p)(26) A detailed derivation can be found in Appendix B. Since C > 0, the game is submodular, which guarantees that players’ best response strategies converge to a Nash equilibrium [41]. This submodular game also has quadratic utility, which makes it similar to the Bertrand game [12] and thus can be analyzed in a similar approach. We apply iterated strict dominance to attain the Nash equilibrium. Let red player’s initial best response set b= (0, 1]. 1) If p<, then≥ 0 → any p<is strictly dominated. 2) If p>+, then≤ 0 → any p>+is strictly dominated. The following analysis depends on two different cases of the acceptance probability C. 1) If 0 < C ≤, then≥ 1, i.e.,≥ 0 holds for red player’s possible actions p∈ (0, 1]. Thus red player’s best response is Therefore, the Nash equilibrium of the game is i.e., the social network is in segregation. 2) If< C ≤ 1, then+≥ 1. Thus, after one iteration, red player’s remaining undominated strategy set, i.e, the best response set is b= [, 1]. Let the set after i iterations be b= [b,¯b], where Therefore, by iteratively applying the best responses and eliminating strictly dominated strategies, the best response strategy converges to the unique Nash equilibrium of the game, which is The Nash equilibrium (p< 1, p< 1) indicates that ARM incentivizes both red and blue users to form intercommunity edges, leading to social integration. A.3 Proof of Theorem 3 Following the proof of Theorem 1 and 2, we assume users in one community are independent copies of a single player and reduce the game to a two-player game. We deﬁne the two-player stochastic game resulting from Protocol 3 as follows: 1) A state of the game, C, representing the acceptance probability at time t. 2) Actions of red player and blue player p, p∈ (0, 1], representing their best response strategies at time t. 3) One-stage payoffs for red player and blue player which are the same as (25) and (26), except that the ﬁxed C is substituted by the time-variant C 4) A transition rule of Cspeciﬁed in (16), which is conditionally independent of players’ actions. 5) A discount factor γ ∈ (0, 1). 6) Value functions of red player and blue player representing their discounted sum of payoff from time t Based on the above deﬁnition of the stochastic game, we aim to derive the player’s optimal strategy under the condition that the acceptance probability evolves as a semiMarkov process. Recall that in Protocol 2 where the acceptance probability is ﬁxed, (in the proof of Theorem 2) we have illustrated the convergence of players’ best response dynamics to the steady state corresponding to the game’s Nash equilibrium. Considering that the state holding time T(deﬁned in (16)) is large compared with the time that players take action, we claim that in Protocol 3, players’ best response dynamics converges to the Nash equilibrium corresponding to Cbefore it transits. With this claim, what remains to be proved is how players adapt their actions when Ctransits. Below we illustrate players’ strategy at t when Ctransits to another state C. Bellman’s dynamic programming recursion yields [42]: In (41), Vand Vdenotes the red user’s value function at time t and t+1 respectively, assuming that it took the best response pat time t, which corresponds to the Nash equilibrium of the game with C. The transition dynamics of Care conditionally independent of players’ actions. Only the ﬁrst term in (41), i.e., the one-stage payoff U, depends on players’ actions. Thus red player’s optimal strategy is to myopically maximize the one-stage payoff without concerning about the transition of C. Similar result holds for blue player’s optimal strategy. Based on the Nash equilibrium (36) derived in Sec. 3.3, (+,+) are the optimal strategies for red and blue users. Thus, players’ best response dynamics will converge to (+,+), i.e., they will reach the time-evolving Nash equilibrium in the resulting game. Take red user as an example. The expected number of intercommunity edges formed by ARM for any red user is = C(2 − p− p)p where E denotes expectation over the probability distribution induced by the DiSBM. On the second line of (42), C is the acceptance probability, N is the number of blue users, (1 −) is the probability that the recommendation target has not followed i yet, +pis the probability that i is recommended by ARM to any blue user. The third line satisﬁes when N is large, i.e.,≈ 0. Similarly, i’s expected reward for connecting users from two communities (e.g. a red user connects its red followers to its blue friends) during ARM recommendations is = C(1 −1 − pN)Np(N − 1)N − 1 Combining (42, 43) for the additional reward, and (23, 24) for the expected utility of users in the game without ARM, we can derive the expected utility of users, i.e., the utility of red and blue player, in (25, 26). This research was supported in part by the U. S. Army Research Ofﬁce under grants W911NF-21-1-0093 and W911NF19-1-0365.
Zijian Li, Ruichu Cai, Member, IEEE, Fengzhu Wu, Sili Zhang, Hao Gu, Yuexing Hao, Yuguang Yan Abstract—Sequential recommendation aims to choose the most suitable items for a user at a speciﬁc timestamp given historical behaviors. Existing methods usually model the user behavior sequence based on the transition-based methods like Markov Chain. However, these methods also implicitly assume that the users are independent of each other without considering the inﬂuence between users. In fact, this inﬂuence plays an important role in sequence recommendation since the behavior of a user is easily affected by others. Therefore, it is desirable to aggregate both user behaviors and the inﬂuence between users, which are evolved temporally and involved in the heterogeneous graph of users and items. In this paper, we incorporate dynamic user-item heterogeneous graphs to propose a novel sequential recommendation framework. As a result, the historical behaviors as well as the inﬂuence between users can be taken into consideration. To achieve this, we ﬁrstly formalize sequential recommendation as a problem to estimate conditional probability given temporal dynamic heterogeneous graphs and user behavior sequences. After that, we exploit the conditional random ﬁeld to aggregate the heterogeneous graphs and user behaviors for probability estimation, and employ the pseudo-likelihood approach to derive a tractable objective function. Finally, we provide scalable and ﬂexible implementations of the proposed framework. Experimental results on three real-world datasets not only demonstrate the effectiveness of our proposed method but also provide some insightful discoveries on sequential recommendation. Index Terms—Sequential Recommendation, Conditional Random Field, Dynamic Heterogeneous Graph, Recommendation System The sequential recommendation system is achieving more and more attention because of its practicality and effectiveness [1]–[4]. In a sequential recommendation system, the users access different items at different time stamps and frequently interact with each other. The difﬁculties of sequential recommendation mainly come from two aspects: the temporal dependency of historical behaviors and the nonstationarity of users The temporal dependency of historical behaviors means that the decision of a user is inﬂuenced by the historical behaviors. And the nonstationarity of users means that the decision of a user is inﬂuenced by the social relationship with the neighbors and the user-item interactions of the neighbors. Therefore, one important challenge is how to effectively leverage the historical behaviors and the social relationship between users. Focusing on the above challenge, numerous sequential recommendation algorithms have been proposed in recent years, which leverage the user behavior sequence and employ the Markov Chains to model the transition of items. Eskandanian et al. [1] mine the user preference and identify change-points in the sequence of user interactions by using Hidden Markov Model (as shown in Figure 1 (a)). He et al. [2] model the personalized sequential behavior by using the personalized translation vectors and the previous item embedding to predict the next item. These transition-based methods assume that the users are independent of each other, which ignores the inﬂuence between the users. Considering that the behavior of a user is easily affected by the neighbors, ignoring the dependence between users will suffer from limited performance in sequential recommendation. Another kind of recommendation algorithm [4]–[7] focuses on analyzing the social relationships between users and useritem interactions in a static user-item graph. The typical methods include the traditional Collaborative Filtering (CF) methods [8]–[10], the deep learning enhanced approaches [11]–[14], the recently developed graph neural networks based methods [15], as well as the social-network-based methods [5], [16], [17]. These methods reveal that both the interactions among users in social networks and the user-item bipartite graphs are beneﬁcial to the performance of recommendation system. However, almost all the aforementioned methods assume the heterogeneous graphs of the users and the items are static, which ignores the dynamical inﬂuence of the temporal interaction between items and social networks, and further results in the suboptimal performance of recommendation systems. Take Figure 1 (b) for a toy example. The existing methods without considering the dynamic user-item heterogeneous graph might recommend the vin preference to vsince more friends of user Uchoose v. Thus, it is essential to devise a uniﬁed framework to take advantage of both the historical behaviors of a user and dynamic interactions between the neighbors and items. Figure 1 (c) illustrates our main idea that models the temporally user-item heterogeneous graphs and generates a more accurate prediction. In the ﬁgure, the decision of whether a user u will choose a given item vis controlled by two important factors: (1) the historical interactions between him or her and items; (2) the temporal dynamic heterogeneous graph, including the interactions between the neighbors and items. Hence, the goal of the proposed method is to estimate the conditional probability of vgiven a user u, the historical accessed item sequence v, as well as the heterogeneous graph sequence H, which can be formulated as P (v|u, H; v). Based on the above idea, we propose the Temporally Evolving Aggregation (TEA in short) framework for sequential recommendation by aggregating the user behavior sequence as well as the dynamic user-item heterogeneous graph. Inspired by the sequence labeling in natural language processing [18], [19] to model the joint probability distribution), we adopt CRF to model the item decision sequence and estimate P (v|u, H; v). In order to alleviate the issue of the large item space, we use the pseudo likelihood method to approximate the aforementioned conditional probability. By doing this, the training procedure can be performed by estimating the unary score and transition score in CRF, which are implemented by our designed modules. Technically, we design a Time-Restricted User Behavior Sequence Aggregation Module to estimate the transition score of CRF, and a Temporal Dynamic Heterogeneous Graphs Aggregation Module to estimate the Unary Scores of CRF. We further provide two different practical implementations based on the proposed framework. Extensive experimental studies demonstrate that our TEA framework outperforms the stateof-the-art recommendation methods on two published datasets and one real-world WeChat ofﬁcial accounts dataset. The remainder of this paper is organized as follows. In Section II, we review related researches into recommendation systems, including social recommendation and sequential recommendation. In Section III, we deﬁne the problem of sequential recommendation under the dynamical heterogeneous graph and further derive the objective function based on the conditional random ﬁeld. In Section IV, we provide the implementation details of the proposed TEA model. We further analyze the connection to existing methods in Section V. And then, we present our experimental results based on two standard benchmarks and one real-world dataset in Section VI. Finally, we give our conclusion of the proposed method. In this section, we mainly discuss the existing techniques on social recommendation and sequential recommendation. In order to effectively mine the deep demands of users, researchers set their sights on social relations, hence social recommendation has received more and more attention. One of the most important methods is Matrix Factorization (MF) [20]–[22]. Based on the traditional matrix factorization methods, Hao et al. [23] proposed a co-factorization method, which shares a common latent user-feature matrix factorized by both ratings and social relations. With the development of deep learning methods, He et al. [24] propose NeuMF by replacing the inner product with a neural architecture that can learn an arbitrary function from data. Fan et al. [25] propose a deep neural network-based model to learn non-linear features of each user from social relations and to integrate them into probabilistic matrix factorization for the social recommendation. Deng et al. [26] propose a two-phase recommendation process to utilize deep learning to calculate the impact of community effect from the interests of users’ trusted friends for recommendations. Recently, graph neural networks (GNNs) [15], [27] are widely used to aggregate node information and topological structure from social networks, hence GNNs are employed to address the social recommendation problem. In order to well aggregate the heterogeneous information, Fan et al. [5] propose the GraphRec for the social recommendation. Fu et al. [28] leverage the metapaths [29] to obtain the heterogeneous graph embedding. Considering that the inﬂuences in the social network may be context-dependent, Song et al. [16] address the session-based social recommendation by using a dynamicgraph-attention neural network architecture. However, the aforementioned methods rarely consider the fact that different friends in social networks choose different items. In this work, considering the fact that social inﬂuence and user behaviors are time-dependent, the proposed TEA method focuses on aggregating the temporally evolving social inﬂuence and the user behavior sequence. Since users usually access the items in chronological order, the users are likely to choose the items that are closely relevant to those they just accessed. Many works on sequential recommendation follow this assumption. Aiming to model the item-item transition probabilities, some traditional works borrow the idea of the Markov chain. Rendle et al. [30] bridge the Matrix Factorization (MF) and Markov Chains (MC). He et al. [2] propose TransRec to model such thirdorder relationships (e.g. the relationships among a user, the previously accessed item and the next item) for large-scale sequential prediction. Motivated by the advantages of sequence learning in natural language processing, many neural networkbased methods are proposed to learn the sequential dynamics. Tang et al. [31] leverage convolutional neural networks to encode the sequences into the embeddings. Other works [32], [33] leverage recurrent neural networks and their variants to model the sequences of items. Kang et al. [34] further leverage attention-mechanism and propose the SASRec to balance the goal of MC-based methods and RNNs based methods. Moreover, Sun et al. [35] argue that such left-toright unidirectional models are sub-optimal. So they propose BERT4Rec, which employs deep bidirectional self-attention to model user behavior sequences. In this paper, the proposed TEA leverage the Conditional Random Field (CRF) to model the translation of items, which calculates the transition score and the unary score by respectively aggregating the user behavior sequence information as well as the dynamic useritem heterogeneous graph. In this section, we begin with the problem deﬁnition of sequential recommendation. Then we derive the uniﬁed objective function under conditional probability Let U = {u, u, ··· , u} and V = {v, v, ··· , v} denote the sets of users and items respectively, in which n is the number of users and m is the number of items. For user-item interactions, we let G= {U ∪ V, E} be the useritem bipartite graph with edges (u, v) ∈ E. As for useruser relations, we let G= {U, E} be the social graph with edges (u, u) ∈ E. If we combine the bipartite graph and the social graph, we obtain the following heterogeneous graph H = {U ∪ V, E∪ E}. Let vbe the user behaviors sequence for u. Since we consider the temporal evolving social inﬂuence, we let H= {H, H, ··· , H} be the heterogeneous graph sequence, where H= {U ∪V, E∪E} and Eis the user-item interactions in t-th time-step. For user u, given the behavior sequence vand the heterogeneous graph sequence Has well as the item v, our goal is to estimate the conditional probability of P (v|v, u, H). The mathematical notation and the corresponding descriptions are summarized in Table I. We begin with the traditional Conditional Random Field (CRF), which is a probabilistic graphical model widely used in sequence labeling [18]. CRF has shown to be very effective since it can jointly model the label decision by capturing the dependencies across adjacent labels. Considering the general deﬁnition of CRF, let x = {x, ··· , x, ··· , x} and y = {y, ··· , y, ··· , y} denote the observed sequence and its corresponding labels respectively. Formally, the conditional distribution p(y|x) of Linear Chain CRF [36] is given by: p(y|x) =1Z(x)exp(f(x, y; Θ) +g(y, y; Θ)), Z(x) =exp(f(x, y; Θ) +g(y, y; Θ)), in which Θand Θare the trainable parameters. There are three important components in the above CRF model: the partition function Z(x), the unary scores function f(x, y) and the transition scores function g(y, y). The partition function Z(x) is a normalization factor in order to obtain a probability. The unary scores function f(x, y) is used to estimate the probability of ygiven the observed x. And the transition scores function g(y, y) is used to estimate the probability of ygiven t. The three components framework provides us a uniﬁed solution to aggregate both the historical behaviors of users and the dynamic social inﬂuence from the social networks. Following the formulation of CRF, the purpose of our model is to estimate the conditional distribution as follow: Z(H, u) =exp(f(H, u, v; Θ) in which f(H, u, v; Θ) denotes the aggregation of temporal evolving social inﬂuence, g(v, v; Θ) denotes the aggregation of user behaviors. In speciﬁc, f(H, u, v; Θ) describes the relationship between the the dynamic heterogeneous graph Hand the available item vand g(v, v; Θ) models the dependency between the available item vand the user behavior sequence. However, it is almost impossible to calculate Z(H, u) since the sequence length is too large. In order to address this issue, we employ the pseudo likelihood method as an effective approximation method [37], [38], and further derive the following estimation of the conditional probability: Combining Equation (2) and Equation (3), we further derive the following estimation of the conditional probability P (v|v, u, H) = Finally, we can obtain the objective function of our proposed model as follows: The aforementioned objective function is usually impractical because the size of the item set is very large and the computation cost is unaffordable. Inspired by [39], we employ the negative sampling strategy to obtain the tractable uniﬁed objective function of sequential recommendation as follows: where σ is the sigmoid activation function and vis the negative item uniformly sampled from the whole item set V . The objective function enjoys an appealing physical meaning. It provides the insights of how to design the model for sequential recommendation: f(H, u, v; Θ) models the information of temporal evolving heterogeneous graph in the forms of the unary energy function; meanwhile g(v, v; Θ) not only models the alternative item vbut also the user behavior sequence in the form of the pairwise energy function. In this section, we provide the implementation details of the proposed temporally evolving aggregation model. As illustrated in Figure 2(a), our implementation takes both the aggregation of user behavior sequences and the aggregation of temporally dependent heterogeneous graphs into consideration and employs the GRU cells [40] and CRF layers to predict the ﬁnal results. The details of the two aggregation modules are presented in Figure 2 (b) and Figure 2 (c) respectively. We will give detailed descriptions of these two aggregation modules in the following subsections. A. Time-Restricted User Behavior Sequence Aggregation for the Transition Scores In this subsection, we will introduce the technical details of g(v, v; Θ). Given user uand the corresponding behavior sequence v, we aim to calculate the user-speciﬁc item transition score. 1) User Behavior Sequence Aggregation: Considering that the future behavior of a user is not only inﬂuenced by the latest accessed items but also the items that the user has accessed before, the user behavior sequence aggregation block should consider both the transition between items and the long-term dependency of items. Inspired by the great success of the self-attention mechanism [41] in various tasks like machine translation, we propose an extension of the selfattention mechanism to model the personalized item transition and long-term dependency by simultaneously leveraging the item information and the position information. Formally, given the j-th candidate item, we calculate the weights of each historical item as follows: a= softmax(W(q+ k) (W(q+ k))√),τ < j, where qis the embedding of item v, kis the position embedding at j-th position of the input sequence, W, W√ are trainable projection parameters andd is the scaling factor, and d is the dimension of the embedding. As a result, we can calculate the historical item aggregated representation as follows: in which Ware trainable projection parameters. 2) Time-Restricted Aggregation: Since the temporal interactions between users and items are very sparse, for the users that contain limited social relationships and items interactions, it is hard to obtain a ideal user embedding for the sparse social substructure, and it is also difﬁcult to obtain a debiased item embedding. Therefore, it is a challenging task to well aggregate the information from the users to the items and vice verse. Fortunately, we ﬁnd that the users that select the same items usually share the same interests and intent. Inspired by this intuition, we further proposed the timerestricted aggregation module. First, we selected the walk with three nodes (e.g., USERITEM-USER) with the restriction of time window τ. In detail, given the interaction (u, v), we ﬁnd the other users that select the same item in the time window of [t−τ, t+τ], where τ is the window size. In our experimental implementation, we choose τ = 60 days. Therefore, we can collect the τ−restricted walks for example u−v−u. Sequentially, we employ another GRU to aggregate the information from the dense substructures to the sparse substructures, which can be formalized as follow: in which we take the walk u− v− uas input and h, h, hare the output of GRU of each timestamp; W are the trainable parameters. 3) Calculate the Transition Scores: In order to well perform the personalized user behavior sequence aggregation, we further add the user embedding pinto the transformed item representation. Formally, we can calculate the transition score sas follows: {W, W, W, W, W, W, b, b, p, q, k, ω} be the trainable parameters of g(v, v; Θ). B. Dynamic Temporal Heterogeneous Graphs Aggregation for the Unary Scores In this part, we will introduce the details of the dynamic temporally heterogeneous graphs aggregation f(H, u, v; Θ), which is used to calculate the unary scores. The dynamic temporally heterogeneous graphs aggregation contains the bipartite graph aggregation and the social network aggregation. 1) Bipartite Graph Aggregation: In this part, we aim to obtain the aggregated of the bipartite graph at t-th timestep. Given user uand the heterogeneous graph sequence H, we ﬁrst obtain the user-speciﬁc representationˆhof H. Speciﬁcally, we employ two different aggregated strategies and raise two variants of the proposed method: the GraphSAGE [42] based method (named TEA-S) and the graph attention networks [43] based method (named TEA-A). More experimental details will be introduced in the next section. As for the TEA-S variation, we can obtain the user-speciﬁc representationˆhas follows: ˆh= ReLU (WMEAN (q, ∀k ∈ I(N(u where Ware the trainable parameters and I(N(u)) denotes the items interacted by u’s neighbors at between t-th and t+1-th time-step; and MEAN denotes the average pooling operation. As for the TEA-A variation, we aggregate the item information to the user with the help of the graph attention mechanism, which can be formulated as: where αis the weight of user uand item vand is deﬁned in which qis the embedding of the item interacted by uat t-th time-step and ⊕ is the concatenation operation. wand Ware trainable parameters. And LeakyReLU is the leaky version of a rectiﬁed linear unit. In order to model temporally dependent heterogeneous graphs propagation, we feedˆhinto the Gated Recurrent Unit [40]. The GRU cell operation at the t-th time-step can be formulated as: in which Wdenotes all trainable parameters of the GRU cell. 2) Social Network Aggregation: To propagate the information of neighbors’ interests, we further aggregate the information from the social network. For simplicity, we only formulate the GraphSAGE aggregation as follows: h= ReLU (WMEAN (p, ∀k ∈ N(u where Wis the trainable parameters. 3) Calculate the Uunary Scores: Based on the aforementioned aggregation, we fuse the time-dependent representation hand time-independent representation hinto one vector and calculate the social inﬂuence score s, i.e., the output of unary scores function f (·). It is formulated as: h= WReLU(W[h⊕ h] + b) + b, {W, W, ω, W, W, b, b, p, q} be the trainable parameters of f (H, u, v; Θ). The total loss of our proposed model is summarized as follow: where Lis the L2 normalization on all parameters and γ is a trade-off hyper-parameter. Based on this objective function, our model is trained by the following procedure: All parameters are jointly optimized using the Adam [44] algorithm. In the testing, we estimate the probability of P (v|v, u, H) as follows: P (v|v, u, H) = We will discuss the connections to the existing transitionbased sequential recommendation methods. Most of the existing works of transition-based sequential recommendation methods [2], [30] are based on Markov Chains. These methods mainly consider two important factors: (1) the interactions between users and items to capture the inherent intent of users, (2) the sequential dynamics between items to capture the relationships between items. Thus, we ﬁnd that our method is more general and some of the existing works can be taken as special cases of ours. The detailed discussions for each work are as follows. Regarding the work FPMC [30], it simpliﬁes the huge state space problem by introducing the basket of items and consequently ignores the sequence information of historical items in each basket. In the contrast, our method utilizes the historical item sequence by using the self-attention mechanism with position embedding and is more general than FPMC. Regarding the work TransRec [2], it models the personalized sequential behavior by using the personalized translation vectors and the previous item embedding to predict the next items but ignores the long-term dependencies since it only considers the relationships between any two items. Moreover, TransRec addresses the problem of the huge state space of items by introducing the subspace, while our method utilizes the negative sampling strategy. Thus, our method is more feasible and efﬁcient to capture the dynamic social inﬂuence of the target users. In this section, we experimentally evaluate the performance of our method on three datasets against the state-of-the-art compared methods. The preprocessed scripts and the source code can be found at. We evaluate our proposed TEA framework on two public datasets (Epinions and Yelp) and a large-scale private dataset (WeChat Ofﬁcial Accounts Dataset). The statistics of datasets are summarized in Table II. The brief information of the datasets is as follows: In Epinions, a user can rate and give comments on items. Besides, a user can also select other users as their trusters, and we use the trust graphs (which are composed of the trust relationships) as the network information. local businesses (e.g., restaurants and shops). The useritem interactions and the social networks are extracted in the same way as Epinions. nese multi-purpose messaging, social media, and mobile payment application developed by Tencent. And WeChat ofﬁcial accounts dataset is one of the functions. On the WeChat Ofﬁcial Account platform, users can read and share articles. This dataset is constructed by user-article clicking records and user-user social networks on this platform. We preprocess the datasets following the approach in [2]. Speciﬁcally, for all these datasets, we follow the previous works [34], [35] and treat a rating or review as implicit feedback. We further use the timestamps to determine the sequence order of actions. We discard users and items with fewer than 5 associated actions. In cases where star ratings are available, we take the item with a rating higher than 3 as users’ positive feedback. For data splitting, we employ the widely used leave-one-out evaluation [10], [24]. We hold out the latest interaction of each user as the test set and select the second latest interaction as the validation set. The remaining data are used for training. We use PyTorch to implement our model and deploy it on RTX 2080 GPU. Hyper-parameter settings for all three datasets are as follows: embedding dimension d = 64, batch size B = 1024, dropout rate p= 0.5, L2 regularization weight γ=5e-4, negative sampling size n= 50, sequence truncation length L= 50, neighbor truncation length L= 20, and learning rate η = 0.01. We train all the methods with ﬁve different random seeds and report the means and standard deviations. We evaluate all the models with two widely used Top-N metrics: Hit Rate@K (HR@K) and Normalized Discounted Cumulative Gain@K (NDCG@K). HR measures the percentage that recommended items contain at least one correct item interacted by the user, while NDCG considers the positions of correct recommended items. In the context of sequential recommendation, since we only test on the latest item in a user behavior sequence, HR is identical to recall and proportional to precision [34]. Since it is time-consuming to rank all items for each user during the evaluation, we followed the strategy in [34]. Speciﬁcally, for each user, we randomly sample 100 negative items and rank these items with the ground-truth item. HR and NDCG are estimated based on the ranking results. We report the experiment results for K = 5/10/20. We compare our proposed models (TEA-S and TEA-A) based on TEA framework with three kinds of baselines: the matrix factorization based models, the graph neural networks based models, and the sequence recommendation methods. Matrix Factorization based Methods: alized ranking recommendation uses implicit feedback. layer perception (MLP) to learn the user-item interaction function. propagation of social information into the matrix factorization model. rating matrix and user-user social relations matrix. Graph Neural Network based Methods: combine user behavior information and social network information into the recommendation task. For fairness, we discard the opinion/rate embedding in our implementation. rative ﬁltering method. It explicitly integrates a bipartite graph structure into the embedding learning process to model the high-order connectivity in the user-item interaction graph. that combines the user action-temporal information and the social information via recurrent neural networks and dynamic graph attention networks. Sequential Recommendation Methods: models each user as a translation vector to capture the transition from the current item to the next. users’ sequential behaviors. adversarial training strategy. segmenting the overall behavior sequence and maintaining the long-term interests of users. Model Variants: method in the bipartite graph aggregation. aggregation method in the bipartite graph aggregation. use the GraphSAGE based aggregation method in the bipartite graph aggregation. use the Graph Attention mechanism based aggregation method in the bipartite graph aggregation. Tables III, IV and V present the recommendation performance of all the methods on the three datasets, respectively. We do not report the performance of LightGCN, DMAN on WeChat Ofﬁcial Accounts dataset because of the limitation of memory. First, by modeling social inﬂuence, the performances of social-aware methods (SocialMF, SoRec, GraphRec, and DGRec) are improved compared with that of BPRMF in most cases, which is consistent with previous works. This observation indicates that social information reﬂects users’ interests effectively. Second, the sequence based methods (DGRec, TransRec, SAS, and ASAS) also perform comparably well. These improvements reﬂect the importance of temporal information on recommendation tasks. Third, DGRec and our proposed methods (including TEA-S and TEA-A) that combine social information and temporal information achieve much better performance, especially on large datasets. At last, our proposed TEA-S and TEA-A consistently outperform all the compared methods on both public and real-world datasets with an average improvement of 3.15% on HR@10 and 8.38% on NDCG@10 against the best competitor. The signiﬁcant improvements validate the effectiveness of aggregating the user behavior sequence and the the inﬂuence between the users. We also observe that performance of TEA-A is slightly lower than that of TEA-S, indicating that the graph attention mechanism is difﬁcult to handle the high sparsity of temporally evolving heterogeneous graphs. 1) Embedding Dimension.: In Figure 3 we analyze the sensitivity of the embedding dimension d by showing HR@10 and NDCG@10 of our proposed TEA-S with d varying from 8 to 64. We can observe that our model signiﬁcantly beneﬁts from a larger dimension when the dataset is large. A small embedding dimension (d = 16) is enough for TEA-S to achieve the best performance on Epinions. 2) Sensitivity of the Number of Negative Samples.: Figures 4 and 5 shows the sensitivity of the number of negative samples nin Equation (6) by showing HR@10 and NDCG@10 of our proposed TEA-S with nvarying from 1 to 100. The variant with n= 5 performs comparably well, though using n≥ 10 still boosts performance especially on the largescale dataset, which means that using more negative samples is helpful to estimate the item transition probability. The variant with n= 100 achieves similar performance to the default setting n= 50, which indicats that our model is stable with In order to evaluate the effectiveness of the time-restricted aggregation, we remove the aforementioned aggregation module and obtain the variants TEA-RS and TEA-RA. experimental results are shown in Figures 6 and 7. From these results, we can ﬁnd that the models with time-restricted aggregation achieve a better performance, especially the results on the Yelp dataset. We also ﬁnd that the promotion in Epinion dataset is not so remarkable, this is since the social networks in Epinion are much denser than that of Yelp. To some extent, the experiment results reﬂect that the proposed timerestricted aggregation can mitigate the drawbacks of sparse social networks and user-item interactions. This paper presents a temporally evolving aggregations framework for the sequential recommendation. Beginning from the original conditional random ﬁeld, we derive the uniﬁed objective function for the sequential recommendation, which leverages the social inﬂuence between users and the dynamic user-item heterogeneous graph. The proposed framework provides the insights and principles of designing the sequential recommendation model. We further provide two different implementations of the proposed framework. Experimental results on three real-world datasets show that the TEA framework outperforms state-of-the-art methods. We would like to thank Lingling Yi and Li Li from WeChat for their help and supports on this work.
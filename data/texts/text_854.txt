Abstract—Recommendation systems are perhaps one of the most  important  agents  for  industry  growth  through  the modern   Internet  world.  Previous  approaches   on recommendation systems include collaborative filtering and content  based  filtering  recommendation  systems.  These  2 methods are disjointed in nature and require the continuous storage of user preferences for a better recommendation. To provide better integration of the two processes, we propose  a hybrid recommendation system based on the integration of collaborative and content-based content, taking into account the top critic consensus and movie rating score. We would like to present a novel model that recommends movies based on the combination of user preferences and critical consensus scores.  Keywords—Recommendation   System,   Critic   Consensus, Collaborative filtering, Content based filtering, EDA on Rotten tomatoes   Dataset,   KNN  Algorithm,   SVM   Algorithm, Transformers, Fast Text.  I.             INTRODUCTION (HEADING 1)  In the last 20 years, the Internet has transformed the way we live  in all the  aspects  we can  think  about.  From purchases, online streaming to news recommendations and emails,   recommendation   systems   have   become   an indispensable part of our life that helps us to achieve the ultimate   goal  of   making   our   decisions  easier. Recommendation systems are systems that help us make our experience with an easy and attractive Internet. Since it helps us choose our shopping cart to decide which is the best news based on our preferences, plays an integral role in the life of our smartphone generation.  Movie recommendation systems help's us choose the best films we can like based on the user’s previous interests and type of film. The goal of the recommendation system is delivering the movies that the user likes in the lowest possible number of suggestions, which helps the user to reduce time in navigation for the film. The main requirement for an effective recommendation system is that of the data. There is a data requirement and user preferences so that they can suggest the most precise recommendations. In general terms, recommendation systems can be classified into 2 types   of   recommendations   based   on   content   and collaborative recommendation systems.  During the design of the recommendation system, we have  taken  into  account  the  need  to  integrate  user preferences and critical consensus in the scoring mechanism. Our   recommendations   can   provide   better   quality recommendations, since users preferences and critic scores take into account  In the last 20 years, the Internet has transformed the way we  live in  all  the  aspects we can  think about.  From purchases, online streaming to news recommendations and emails,   recommendation   systems   have   become   an indispensable part of our life that helps us to achieve the ultimate  goal   of   making   our   decisions   easier. Recommendation systems are systems that help us make our experience with an easy and attractive Internet. Since it helps us choose our shopping cart to decide which is the best news based on our preferences, plays an integral role in the life of our smartphone generation. We can broadly classify the work done  into  2  categories  -  content  Based  Filtering  and Collaborative Filtering. The details and trends for each  of these methods is explained in this section.  Content  based  filtering  can  be  defined  as  the recommendation based on the item types and the user profile description. Here we compute the similarity of different items  and  the  items  that the  user wants  based  on the similarities between them. In the context of movies we take into instance the summary of the movies.  FLEX: A Content Based Movie Recommender [1] : In this paper the author uses a mixture of tf-idf method and doc2vec to create a hybrid model. Plots, regions , genre  , year of release are used to help create a better and  robust recommendation system.  Movie Recommender System Based on Percentage of View [2] : Generally we don’t get an explicit feedback  on most of the movies. Hence, the authors of these papers have proposed  a  unique  method  of  rating  and  score  calculation based on the number of views. The method is effective and has delivered better recommendations.  A content-based movie recommender system based on temporal user preferences [3] : In this paper the authors explore the recommendations based on the temporal user preferences.  The  model  converts  content  attributes into Dirichlet Process Mixture Model to infer user preferences and provide a proper recommendation list.  Movie Recommender system using Sentiment Analysis [4] : Here the authors combine KNN methods with content based similarity using a weighted formula to compute a score and rate the movie accordingly.  Collaborative  filtering  takes  into  account  similarities between   the   users   and   the   items   while   making recommendations.  There are mainly two algorithms constituting the memory based  collaborative  filtering  which  are  the  user-user collaborative filtering and item-item collaborative filtering. For user- user collaborative filtering, we find similar users and make recommendations to one user on the basis of what similar users liked whereas for item-item based collaborative filtering we recommend items similar to those liked by the user.  Optimizing  Collaborative  Filtering  Recommender Systems [9] : This paper recognises the issues of assigning all items an equal weight and makes use of a GA based weighting technique in order to focus on the more useful ones and not give too much importance to the other. It has produced considerably better results.  An Optimization Method for Recommendation System Based on User Implicit Behavior [10] : In this paper, the issue of sparse matrix is dealt with. It is observed the that the matrix being sparse is due to the explicit behavior of the user is low. Hence, it also starts relying on the user’s implicit behavior to remedy this issue. This include's whether the user chooses to watch a recommended video, time of watching a video and how frequently the user watches the video.  A Particle Swarm Approach to Collaborative Filtering based Recommender Systems through Fuzzy Features [8]  : Here, the paper demonstrates the use of particle swarm  optimization and the use of fuzzy sets in order to present the user information more efficiently. measurement  and  others  are  deliberate,  using specifications that anticipate your paper as one part of  the entire proceedings, and not as an independent document. Please do not revise any of the current designations.  The datasets of Movielens and Rotten tomatoes have been merged with movie name and ID as the primary  key. The RT dataset has a total of 7552 reviews by expert and top critics.The  reviews  have  been  given  from  various  sources like the NYT, Hollywood reporter. The EDA Performed on the Rotten Tomato’s dataset has been give below.  A. Collaborative Filtering:  We use collaborative filtering in two different ways.  In the first way we recommend movies to the user by finding users similar to the chosen user and recommending movies liked the similar users to the chosen user. For the  second method, we find movies similar to those liked by the  user and  recommending  these  two  users.  The  above  mentioned methods  are  conjoined  to  build  an effective  movie recommender model. We find ways to improve this  model performance and scalability wise in the methods  discussed below.  A Particle Swarm Approach to Collaborative Filtering based Recommender Systems through Fuzzy Features [8]  : Here we use maintain user profiles in order to extract information from the implicit behaviour of the user. For instance the user rating a movie represents the how much he has enjoyed the movie. Further we take all this information and determine the similarity between the users and items with the help of fuzzy set using it later to rank our output.  Optimizing   Collaborative   filtering   based recommendation systems [9] – Here we add in the feature of Genetic Algorithm based weight which helps filter out the choices which are less important and lay emphasis on the more important ones. This is an improvement over the original collaborative filtering as it reduce the amount of data to process in further computations.  An Optimization Method for Recommendation System Based on User Implicit Behaviour [10] : Here we take implicit information of the user such as whether he has watched the video, the amount of time he has watched  the video  in  order  to  compensate  for  the  sparsity  of  explicit information, and we make prediction which is later analysed using MAE.  The content based recommendation system is based  on similarity between of a movie with another based on  their summaries. There are many methods where the o effectively capture the the meaning of different sentences. The methods used here are SBERT and Universal sentence encoder.  Sentence  Bert: Sentence-BERT [5] employments  a Siamese arrange like engineering to supply 2 sentences as an input. These 2 sentences are at that point passed to BERT models and a pooling layer to create their embeddings. At that  point  utilise  the  embeddings  for  the  combine  of sentences as inputs to calculate the cosine similarity.  Universal sentence encoder: Universal sentence en- coder  [7]  consists  of  transformer  and  deep  averaging network.  Sentences  are  periodically  combined  and best feature are extracted through softmax and in this way we get the best holistic representation of the sentences.  Rating System: A critic review to score model has been developed based on amazon movie reviews dataset. We have a top 1 accuracy of 83% and is effective for calculating the score. We have used RoBERTa based S-BERT [5] [6] model. This creates an effective model. The outputs produces were in range 0–5, and they are normalized in range of 0-0.2.  The  first  task  was   to  calculate  similar  movie recommendations using collaborative filtering. We have used the methods of Swarm optimization and KNN to provide state-of-the-art results  Swarm optimization has been used to extract information about the user and fuzzy sets to calculate the similarity between users. We have taken into account user implicit behaviour to make up for the sparsity of user explicit behaviour such as whether user has chosen a video, the amount of time user has spent watching the video, how frequently the user watches the video.  KNN was used to extract similar users. Users based on similarity in movie preferences are segregated based on the principle of nearest neighbours. The intersection movies watched by similar users are recommended.  There  are  3  similarity  metrics  available  –  jaccard, pearson and cosine - of which we will be using the the pearson. We then make use of pairwise distances to calculate the pearson correlation coefficient with help of which a similarity matrix is obtained. With the help of this we  can now assign scores to movies not assigned a score  The output of the collaborative filtering are the movie titles. We have used the following methods for preprocessing of the text  • Used Demoji API to convert all emoji to words for effective representation  We then pass these preprocessed movies title descriptions to SBERT or Universal sentence encoding. The encoding used are pre-trained state-of-the-art embeddings based on transfer learning.  We have used cosine similarity as a metric for calculating similarity.  The  outputs for  each  movie is  cosine  with description of movie’s from the  collaborative filtering. The critic score for each movie is added to its respective score.  Then based on the descending order of the calculated scores we compute the order of the movies. The computed movies are suggested based on their calculated weighted score. More the score better the recommendation.  In this way we are able to penalise the recommendation that is having low critic score yet keeping the essential issues of user preferences and context in light.  The model has effectively been able to predict the various movies that the user likes and is able to penalize the movies with bad critic rating with less score. In this way we are able to holistically represent the movies that the user may watch only suggesting the best movies. The results have been displayed below. The base movie is chosen as " Grown Ups 2 ".  The following difficulties are always raised with recom- mender systems. We assess our system in light of these concerns and offer an implementation strategy to address them.  The New User Problem, for starters, is concerned with the  situation in  which  a  new  user is  added to  the recommender system. He has yet to submit any ratings  for any of the movies in the system. This is referred to as a User Cold Start. One simple option is to recommend toprated movies or movies that have recently been introduced to this new user. Second, no new item is recommended, which is a source of concern. It’s what’s known as an Item Cold Start issue. When a new film is added to the system, it does not yet have any ratings attached to it. What is the best way to find it and recommend it? One resolution could be to recommend films in the same genre as the top-rated films. If the new film belongs to that genre, it will be noticed.However, in order to achieve this goal, we will need to create a system based on the film’s genre.  Movie recommendation systems are very useful in our lives to help reduce time and efforts adopted to decide  the value of the film. We have used state-of-the art methods like swarm based collaborative filtering, KNN with S-BERT and universal sentence encoder.This paper also includes how you can deal with the challenges to systems. Based on the results of the experiment, we can conclude that the system  is effective for predicting high quality films. 
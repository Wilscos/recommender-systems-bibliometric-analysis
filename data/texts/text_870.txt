Session-based recommendation aims to predict a user’s next action based on previous actions in the current session. The major challenge is to capture authentic and complete user preferences in the entire session. Recent work utilizes graph structure to represent the entire session and adopts Graph Neural Network (GNN) to encode session information. This modeling choice has been proved to be eective and achieved remarkable results. However, most of the existing studies only consider each item within the session independently and do not capture session semantics from a high-level perspective. Such limitation often leads to severe information loss and increases the diculty of capturing long-range dependencies within a session. Intuitively, compared with individual items, a session snippet, i.e., a group of locally consecutive items, is able to provide supplemental user intents which are hardly captured by existing methods. In this work, we propose to learn multi-granularity consecutive user intent unit to improve the recommendation performance. Specically, we creatively propose Multi-granularity Intent Heterogeneous Session Graph (MIHSG) which captures the interactions between dierent granularity intent units and relieves the burden of long-dependency. Moreover, we propose the Intent Fusion Ranking (IFR) module to compose the recommendation results from various granularity user intents. Compared with current methods that only leverage intents from individual items, IFR benets from dierent granularity user intents to generate more accurate and comprehensive session representation, thus eventually boosting recommendation performance. We conduct extensive experiments on ve session-based recommendation datasets and the results demonstrate the eectiveness of our method. Compared to current state-of-the-art methods, we achieve as large as 10.21% gain on HR@20 and 15.53% gain on MRR@20. Code is available at https://github.com/SpaceLearner/SessionRec-pytorch. • Information systems → Recommender systems. Recommender System, Session-based Recommendation, Graph Neural Networks ACM Reference Format: Jiayan Guo, Yaming Yang, Xiangchen Song, Yuan Zhang, Yujing Wang, Jing Bai, Yan Zhang. 2022. Learning Multi-granularity Consecutive User Intent Unit for Session-based Recommendation. In Proceedings of the Fifteenth ACM International Conference on Web Search and Data Mining (WSDM ’22), February 21–25, 2022, Tempe, AZ, USA. ACM, New York, NY, USA, 10 pages. https://doi.org/10.1145/3488560.3498524 With the rapid growth of the amount of information on the Internet, massive products, contents, and services (which are uniformly described as items) are emerging every day. It becomes dicult for users to view all items due to the time limit. Thus Recommender Systems (RS) have played an important role in helping make efcient and satisfying choices. As is pointed out, user preference tends to be dynamic, hence short-term user history captures more accurate user intent [32]. In such scenario, session-based recommendation [10,17,19,24,30], which encapsulates a range of latest consecutive user-item interactions as sessions, draws increasing attention and leads to better performance Traditional session-based methods treat each session as a sequence of items sorted by click time and widely adopt Recurrent Neural Networks (RNNs) [8,12,26] to solve the recommendation problem. Although remarkable performance has been achieved, these methods are arguably insucient to obtain accurate user representations in sessions and neglect complex transitions of items [37]. Instead, recent work [1,7,16,29,37,40] utilizes graph structure to represent the session and employ Graph Neural Networks (GNNs) [11,44] to conduct information propagation between adjacent items. Results on various academic session-based recommendation datasets demonstrate the signicant superiority of GNN based methods over traditional methods. However, most of these GNN based methods only take individual items as basic units to extract user preference and ignore the rich hidden user intents revealed by a group of consecutively adjacent items (which is modeled as intent units). Such intent units encapsulate local context-aware user preferences, thereby enabling the recommendation system to generate comprehensive and accurate recommendation results in multiple granularities. For Figure 1: An example of hidden user intents revealed by groups of consecutive items. A session (“F lour”, “Butter”, “Eggs”) is given, “Fry Eggs”, “Breakfast” and “Bake Butter Cakes” are user intents revealed by grouping dierent consecutive items in the session. Items in the right are possible items the user will click next under each intent. example, in Figure 1, given a session with (“Flour”, “Butter”, and “Eggs”), when focusing on the last item, eggs, the user may want to buy some foods for breakfast. In this case, a reasonable recommendation for his or her next purchase is milk. At the same time, if the intent unit with length two is considered, the local context with “butter” and “egg” reects that the user wants to fry eggs. In this scenario, a new pan for cooking is a better suggestion for his or her next purchase. Furthermore, if all three items (“Flour”, “Butter”, and “Eggs”) are considered, the intent for such user is obviously changed as the user wants to make a cake or bread, hence an oven is a more suitable recommendation. The example described above shows that a group of consecutive items enriches user intents, and dierent group granularities reveal dierent user intents and can help to provide multiple recommendation candidates.. However, 1) how to model the interaction among these grouped intents and 2) how to ensemble these user intents from dierent granularities are not trivial. To tackle these two challenges, we rst introduce a novel intent extraction method, i.e., mining user intents both from individual items and combined locally consecutive items. Specically, besides modeling items independently, we also compose consecutive item groups with dierent lengths as consecutive intent units (CIUs) and then model the transition relationships among these CIUs by a Multi-granularity Intent Heterogeneous Session Graph (MIHSG). In this heterogeneous graph [39], nodes (CIUs) with dierent numbers of items are categorized into dierent groups and the transition edges among the same type of nodes capture the spatial continuity of the user-item interactions in the corresponding intent granularity. We also introduce a special type of edge to represent the transition between high order intent units and the single items, which explicitly encode the intent evolution between coarse and ne-grained granularities. Compared with existing session graphs, the proposed heterogeneous graph can extract richer user preference, which contributes to alleviate the information loss during the graph modeling process. We then apply Heterogeneous Graph Attention network (HGAT) to extract the node representations [15,21,28,33,41,43]. Since the high-level intents can provide compressed yet accurate session intent information, such information can be propagated more eectively through dierent intent units. The long-range dependency problem can thus be alleviated. To solve the second problem, we propose Intent Fusion Ranking (IFR), i.e., utilizing last attention to learn session representation for each intent granularity level and compose recommendation results to predict the next item. We name our model MSGIFSR (Multi-granularity Intent HeterogeneousSessionGraph andIntentFusion Ranking forSession-basedRecommendation). Empirically, our method signicantly improves the model’s performance by enriching contextual user intent within one session and achieves state-of-the-art performance on ve benchmark datasets. In summary, our contributions in this paper are as follows: •We propose consecutive intent unit (CIU) to extract user intent from dierent granularities. Newly formed consecutive intent units contain more accurate user preference and provide supplementary information for recommendation. •To better exploit CIU, we propose Multi-granularity Intent Heterogeneous Session Graph (MIHSG) to model complex transition relationship between dierent granular intent units explicitly. The MIHSG can propagate information efciently, especially in long sessions. We also propose Intent Fusion Ranking (IFR) strategy to fully utilize the intent representation from all granularity levels to enhance the recommendation performance. •We compare the performance of MSGIFSR against state-ofthe-art baselines on ve public benchmark datasets. The results show the superiority of MSGIFSR over the state-ofthe-art models, i.e., as large as 10.21% gain on HR@20 and 15.53% gain on MRR@20. In this section, we review the related work for session-based recommendation. Inspired by the fact that similar users tend to buy similar items, the earliest session-based methods are mostly based on nearest neighbors [3,4,19]. These methods need a similarity function to compute similarity scores. Then some approaches notice that exploiting sequential behavior is benecial to predict the next item. Some of them employ Markov chain (MC) to capture the sequential signal of interactions. For example, Rendle et al. [23] propose factorization of personalized Markov chains (FPMC) to capture both sequential user behavior and long-term interest. King et al. [31] propose a hierarchical representation model (HRM) to improve FPMC with a hierarchical architecture. However, Markov chain-based methods are usually unable to capture more complex higher-order sequential patterns. The rapid growth of deep learning methods brings signicant performance gain on session-based recommendation. Recently proposed neural-based methods employ sequential structure neural networks like RNNs [2,9] to capture the user’s sequential behavior. For instance, Balázs et al. [8] propose GRU4Rec to use the gated recurrent unit (GRU) [2] to model user sequential behavior, Tan et al. [26] apply data augmentation and generalized distillation to improve GRU4Rec and Li et al. [12] propose to use attention mechanism to improve the representation capacity of RNNs. In addition, as sessions can be very limited as in-progress information, the neighbor information is introduced to assist in modeling ongoing sessions [10,17,30]. For example, Jannach and Ludewig [10] introduce a neighborhood session using the K-nearest neighbor (KNN) method. Unlike traditional KNNs, Wang et al. [30] propose CSRM Figure 2: Overview of the MSGIFSR framework. Given a session, we rst construct the multi-granularity intent unit heterogeneous session graph (MIHSG). Then the MIHSG is passed to a heterogeneous graph attention network to get the representations for intent unit from all granularity levels. After that, the intent fusion ranking (IFR) module combines session representations from all intent unit representations granularity levels to get the recommendation results. to incorporate neighbor sessions information via memory network [25,36]. To learn better session representation, in NARM [12] an attention pooling method is proposed and is widely applied in subsequent neural recommendation methods [1,14,16,29,40,42]. Specically, these methods use global and local preference to make a recommendation. However, they still consider single items as the base recommendation units thus lack the description of in session combined information. Graph neural network (GNN) is introduced to capture the complex transition relationships of sessions [1,16,29,37,40]. For instance, SR-GNN [37] takes transition relations between adjacent items to construct unweighted session graphs and uses gated graph neural network (GGNN) [13] to extract the transition information. Based on this work, Xu et al. [40] propose a method that uses a GGNN to extract local context information and a selfattention network (SAN) to capture global dependencies between distant positions. These GNN-based methods have shown a new and promising direction for session-based recommendation, while the constructed session graph faces a lossy session encoding problem. To alleviate such problem, Chen and Wong [1] propose lossless edge-order preserving aggregation and shortcut graph attention to eciently aggregate information and make a recommendation. To propagate information more eciently in long sessions, Pan et al. [16] propose to use a star node to bridge items. The newly added star node can lter out irrelevant items, thus make better recommendations on long sessions. However, all these works take single items as intent unit and ignore the consecutive combined user behavior of a group of items, thus losing the recommendation accuracy. Some works employ Hypergraphs [5] to enhance item representation [29,38]. Xia et al. [38] take each session as a hyperedge to model cross-session item relationship, and Wang et al. [29] propose SHARE that uses a sliding window to construct a hypergraph of a single session to capture group intent. However, such hypergraph structure loses the user sequential behavior information, i.e., the sequential order of items. In addition, the last attention pooling only uses the item representation to generate session representation which can not fully utilize the user intent information from all intent unit granularity levels. In this section, we rst introduce the formal denition of the general session-based recommendation problem (Section 3.1). Then we describe the proposed multi-granularity consecutive intent unit (Section 3.1). Afterwards, we elaborate on three components of the proposed model i.e. the Multi-granularity Intent Heterogeneous Session Graph (Section 3.3), the Heterogeneous Graph Attention Network (Section 3.4), and the Intent Fusion Ranking (Section 3.5). Session-based recommendation is to predict the next-item based on a sequence of clicked items. Formally speaking, let𝐼 = {𝑣, 𝑣, ...𝑣} represent all items in the dataset. A session𝑠= {𝑣, 𝑣, ...𝑣} is a collection of clicked items where𝐿is the session length and 𝑡is the id of the item the user clicked at position𝑙. Given𝑠, the session-based recommendation is to recommend the next most likely clicked item𝑣. In practice, the recommender takes𝑠 as input and predict the probability distributions of the the next item𝑝 (𝑣|𝑠). Then the items with the top-K largest probability scores are recommended. Current session-based recommendation methods consider each item separately and the higher level intent of a local session snippet are ignored. In this work, we not only learn the intent revealed by the individual items but also the combined intent from items in a consecutive fragment. We dene𝑣as a consecutive intent unit in which the items are from a consecutive fragment started from 𝑗and with length𝑘, i.e.,𝑣= (𝑣, ...𝑣). The length𝑘also represents the granularity level of the intent unit. An example is illustrated in Figure 2 where a session𝑠 = {𝑣, 𝑣, 𝑣, 𝑣, 𝑣, 𝑣, 𝑣, 𝑣} is given. The items from the original sequence denoted by𝑣, ...𝑣 compose the level-1 consecutive intent units. The session snippets (𝑣, 𝑣), ..., (𝑣, 𝑣)are level-2 consecutive intent units denoted by 𝑣, ..., 𝑣and(𝑣, 𝑣, 𝑣), ..., (𝑣, 𝑣, 𝑣)are the level-3 consecutive intent units denoted by 𝑣, ..., 𝑣. Given session𝑠, we assign a learnable embedding vector𝑒to represent the intent of the level-1 consecutive intent unit revealed by item𝑣. For the high order level-𝑘consecutive intent units, we utilize a readout functionRto fuse intents of each item in the corresponding intent unit to generate the representation. Specically, the intent of a level-𝑘consecutive intent unit can be calculated by We consider two kinds of readout functions i.e. set-based and sequence-based to generate representation for high level intent unit. The set-based readout functions e.g. MEAN, MAX etc. can extract order-invariant intent while the sequence-based readout functions e.g. Gate Recurrent Unit (GRU) can extract order-sensitive intent. In our method, we utilize both kinds of readout functions to extract the complete intent for high order intent unit. For𝑗-th level-𝑘consecutive intent unit the nal intent can be computed by Where𝑒and𝑒are corresponding to the order-invariant and order-sensitive intent respectively. In this section we introduce the construction of the Multi-granularity intent unit Heterogeneous Session Graph (MIHSG). The proposed MIHSG is composed by multiple subgraphs and each subgraph models the transitions between the intents of same level consecutive intent units. The graph constructed by the level-𝑘consecutive intent units is dened as the level-𝑘intent session graph. We rst describe how to construct the level-𝑘intent session graph and then introduce the proposed MIHSG. 3.3.1 Level-𝑘Intent Session Graph. The level-𝑘session graph captures the spatial continuity of the user-item interactions. It is a directed graphG= (V, E)where each node represents the intent of a level-𝑘consecutive intent unit and each edge connects two consecutive adjacent level-𝑘consecutive intent units. Nodes have connection if they are adjacent in the session item sequence. The level-1 session graph captures the ne-grained intent transition between items. As the length of intent unit increases, the session graph contains higher level transition patterns between intent units. 3.3.2 Multi-granularity intent unit Heterogeneous Session Graph. We merge session graphs from dierent granularity levels to form a unied heterogeneous session graph i.e. MIHSG. Specically, we introduce a special edge i.e. inter-granularity edge to link the high level session graphs and the level-1 consecutive session graph. It connects intent unit with its level-1 predecessor and successor. The order of a MIHSG𝑘is the same as the largest granularity level. An example of MIHSG is given as illustrated in Figure 2. In this graph, each node type represents an intent granularity level and two kinds of edges are considered i.e. intra-granularity edge and inter-granularity edge. The intra-granularity edge denoted by(𝑣, intra-𝑘, 𝑣)connects intents of the same granularity level as discribed in section 3.3.1 while the inter-granularity edge i.e.(𝑣, inter, 𝑣)and(𝑣, inter, 𝑣)models the intent transition between high level consecutive intent unit and their adjacent individual items. For example, in session𝑠 = {𝑣, 𝑣, 𝑣, 𝑣}, two intergranularity edges can be constructed. They are(𝑣, inter, (𝑣, 𝑣)) and((𝑣, 𝑣), inter, 𝑣). This enables capturing cross granularity level intent transition patterns. We do not consider inter-granularity edge between high granularity levels to avoid redundancy. In this section, we introduce how to generate the representations for consecutive intent units and the whole session. 3.4.1 Learning Representation of Consecutive intent units. We employ the heterogeneous graph attention network (HGAT) to learn the representation of each consecutive intent unit. Given an directed edge(𝑠, 𝑒, 𝑡)where𝑠and𝑡are the source and target intent units and𝑒is the edge. Without loss of generality,𝑠and𝑡 can be in any granularity levels. Specially, we denote𝑘and𝑘 as the granularity levels of𝑠and𝑡respectively and denote𝜙 as the edge type. For a level-𝑘MIHSG,𝑘, 𝑘∈ {1, ..., 𝐾 }and 𝜙∈ {inter, intra-1, ..., intra-𝐾 }. For each layer, we apply the bidirectional attention to aggregate the representations of the direct in-neighbors and out-neighbors. Given an in-neighbor set i.e.𝑁, the aggregation mechanism to aggregate the in-neighbors is as following: Where𝑊∈ Randa∈ Ris the learnable projection weights which are not shared between dierent layers and edge types.ℎ= 𝑒,ℎ= 𝑒is the initial representation of intent units𝑠and𝑡. Following [28], we also adopt LeakyReLU activation function 𝜎(·) to increase the non-linearity. We also adopt multi-way attention to stabilize the learning process. After getting the representation of each head, a readout function is applied to generate the output node representation. where𝐻is the number of attention heads and𝑖is head index. We empirically nd element-wise max operation is consistently better than concatenation and mean operations. As MIHSG is a directed graph, each node has context from both in-neighbors and out-neighbors. To extract context information from two directions, we apply the HGAT to aggregate the in-neighbors and out-neighbors information to generate node representations. Thus for each intent unit𝑣, we get two embeddings−→←− i.e.ℎandℎfor two directions respectively. Then the local representation of node𝑣is the summation of node embeddings−→←− from two directions,˜ℎ=ℎ+ℎ. The nal representation of node𝑣is the summation of the local representation and the mean of all embeddings in the sessionℎ=˜ℎ+ ℎ. 3.4.2 Learning Representation of Whole Session. Current methods generate the user preferences by combining the representations of the last clicked individual item and the whole session. Since the high order granularity intents are ignored, the user preferences captured by these methods may be inaccurate or incomplete. To better utilize information of all granularity intents, we generate a separate session embedding for each level of consecutive intent units. As illustrated in Figure 2, given a session𝑠and the corresponding consecutive intent unit embeddingsℎ∈ R, 𝑖 =1, ..., 𝑛, 𝑘 =1, ..., 𝐾, where𝑛is the number of intent units for level-𝑘and𝐾is the number of intent levels. For each level of consecutive intent units, we generate a local representation𝑧and a global representation 𝑧to capture the user preferences. We take the last intent unit ℎas𝑧and adopt a soft attention mechanism to generate𝑧. To make session representation from each level captures complete user intent we compose embeddings of all intent units to generate a context set i.e.𝐶 = {ℎ|𝑖 = 𝑖, ..., 𝑛, 𝑘 =1, ..., 𝐾 }and denote ℎ∈ 𝐶 as one of the context embedding. Then we obtain 𝑧by: where the priority𝛾is decided by the corresponding local representation 𝑧and the contexts. Specically, 𝛾is calculated by: where𝑊∈ R,𝑊∈ R,𝑊∈ Rare learnable parameters,𝑏∈ Ris the bias and𝜎 (·)is the sigmoid function. Since queries are dierent, the importance of each intent unit for dierent granularity levels are distinguished, which making a balance between capturing complete user intent and generating distinguishable level-𝑘session representation. We then combine the local representation and global representation to generate the user preferences for each level of consecutive intent units. The representations of user preferences for level-𝑘 can be calculated by: where[·]is the concatenation operation and𝑊is the projection matrix to transform 𝑧from Rto R. After generating session embeddings from dierent granularity levels i.e.𝑧, ..., 𝑧, ..., 𝑧, we propose to utilize Intent Fusion Ranking mechanism to capture comprehensive user preferences. Specically, we rst make a separate recommendation based on each level of intents and then fuse the results to make the nal recommendation. For each intent level𝑘, we adopt the inner product to calculate the similarity between candidate item intent and the level-𝑘 session embedding. Specically, given a candidate item set𝐼 = {𝑣, 𝑣, ...𝑣}, we can calculate the similarity between the session embedding 𝑧and 𝑒which is the intent of item 𝑣as following: where ⟨·, ·⟩ is the inner product operate. Inspired by [22,34], we also consider the repeat click behavior and exploration behavior. Specically, we distinguish the inner session items from outer session items and apply the Softmax normalization separately as: where𝑅 = {𝑟, ..., 𝑟, ..., 𝑟}and𝑂 = {𝑜, ..., 𝑜, ..., 𝑜}represent the inner session items and outer session items respectively and we have|𝑅| + |𝑂 | = |𝐼 |.˜𝑦∈ Rand˜𝑦∈ Rare the corresponding normalized probabilities. By separate normalization, we distinguish the repeat click behavior and exploration behavior. Then, we use a discriminator to re-weight the item scores to balance the focus between repeat click and exploring click. Then the scores y is the combination of the two parts, by: where[;]is the concatenation operation,˜y∈ Rand˜y∈ R are probability distributions for inner session items and outer sessions items respectively and we have˜𝑦∈ ˜y,˜𝑦∈ ˜y.𝑊∈ Rand𝑊∈ Rare the learnable projection matrix,𝜎is the sigmoid function. We denote this strategy as Repeat-Explore Normalization (RENorm). We propose the Intent Fusion Ranking (IFR) to fuse the recommendation results predicted by all granularity levels of intents. Specially, we introduce a weighted summation operator to fuse the probability distributions generated by all levels of intents to generate the nal probability distribution ˆy. where𝛼is the learnable factor for each probability distribution i.e. yandˆ𝛼is the normalized weight. We adopt cross-entropy as the optimization objective to learn the parameters and the loss function is: where𝑦∈ yreects the appearance of an item in the one-hot encoding vector of the ground truth, i.e.,𝑦=1 if the𝑖-th item is the target item of the given session; otherwise,𝑦=0. We also add𝑙norm on the item embeddings to prevent popularity-bias phenomenon [7] and use scaled softmax with scaled factor 12 at the normalization stage Eq. (9) to prevent over smoothing. In addition, following [16], we apply the Back-Propagation Through Time (BPTT) algorithm [35] to train the MSGIFSR model. In this section, we rst describe the experimental settings including the datasets, baslines, and evaluation metrics. Then we do detailed analyses for the experimental results.. We conduct the experiments on four real-world datasets which are commonly used in the literature of session-based recommendation. •Diginetica is a personalized e-commerce search challenge dataset provided in CIKM Cup 2016. The dataset contains transition history which is suitable for session-based recommendation. Following [1,12,14,22,37,42], we use the sessions in the last week for test. • Gowalla is a check-in dataset that is widely used for pointof-interest recommendation. Following [1,6,27], we kept the top 30,000 most popular locations, and grouped users’ check-in records into disjoint sessions by splitting intervals between adjacent records that are longer than 1 day. The last 20% of the sessions were used as the test set. •Last.Fm is widely used in many recommendation tasks. The music artist recommendation is used as the task. Following [1,6,22], we kept the top 40,000 most popular artists and set the splitting interval to 8 hours. Similar to Gowalla, the most recent 20% of the sessions were used as the test set. •Yoochoose is a dataset that is obtained from the RecSys Challenge 2015, which contains a stream of user clicks on an e-commerce website within 6 months. We use the typical method in [1,12,14,22,37,42] to split the dataset and use the 1/64 and 1/4 subsample of all training sessions as the training set. Following [1,12,14,18,20,22,37,42], we lter out sessions of length 1 and items appearing less than 5 times. We adopt the data augmentation method described in in [12,14,22] to process the dataset. The statistics of these datasets are described in Table 1. We consider three kinds of methods as our baselines: the conventional Nearest Neighbors (NN) based methods, Neural-based sequence methods and GNN based methods. The description of the baselines are as follows: • Item-KNN[3] is a NN based method which recommends items that are similar to the previous items in current session and cosine similarity is adopted to measure the similarity between two items. • GRU4Rec[8] employs gated recurrent unit [2] to model the sequential behaviour of items in a session. • NARM[12] adopts GRU to extract sequence information and employs attention mechanism to capture user preferences. • SR-GNN[37] uses gated graph neural networks to capture the transition relations between items. • GC-SAN[40] applies a self-attention layer after the graph neural network module to integrate contextual information. • NISER+[7] utilizes dropout and𝑙norm to alleviate overtting and long-tail eect. • SGNN-HN[16] uses highway network to reduce over-smooth and long-range dependency problems. • LESSR[1] introduces two kind of session graphs to solve the information loss and long-range dependency problem. • SHARE[29] proposes utilizing hypergraph and attention network to exploit the contextual windows to model sessionwise item representations. For all methods, we employ grid search to nd the best hyperparameters. We random split 10% samples from the training set as the validation set and the hyper-parameters which achieve best performance on the validation set are selected. Specically, for GNN-based models, the number of layers is searched in{1,2,3,4,5}. For the proposed MSGIFSR, we also search the best intent unit granularity level𝐾in{1,2,3,4,5,6,7}. We use Adam to optimize the model while set learning rate and weight decay to 1𝑒and 5𝑒respectively. We follow [7,16,37] to decay the learning rate every 3 epochs with a 0.1 rate. We x the embedding dimension to 256 and the batch size to 512. For all models, we compare the HR@20 (Hit Rate) and MRR@20 (Average Reciprocal Ranking) metrics. In this section, we compare our methods with the state-of-the-art baselines to validate the eectiveness. The empirical results of all methods are shown in Table 2. From the results, we have the following important observations: Firstly, neural network based methods are signicantly better than conventional methods (e.g. Item-KNN), proving the neural network based models are capable of capturing complex sequential patterns for making recommendations. However, among them, the GRU4Rec achieves inferior performance and the reason is that in GRU4Rec only sequential information is leveraged. In contrast, NARM achieves competitive performance because it exploits both of the sequential information and global preferences. Moreover, we nd that GNN-based models [1,7,16,29,37,40] are better than previous methods. The GNN-based methods demonstrate the superiority of session graphs in representing transition relationships between dierent items. In current GNN based methods, SGNNHN achieves better performance since it introduces a star node to help lter out irrelevant items and adopt high-way network to relieve the over-tting problem. Secondly, our method MSGIFSR outperforms all baselines by a large margin, indicating that the session-based recommendation can benet from our proposed consecutive intent units. We attribute such signicant gain to the following reasons: 1) the proposed MIHSG can exploit the intents from multiple granularity levels and model the complex transitions between dierent user intents; 2) the proposed IFR module can integrate the intents of dierent granularity levels to capture more accurate and complete user preferences. In addition, we nd that MSGIFSR has larger gains on datasets which contain relative long sessions e.g. Last.FM. Table 2: Results(%) of main experiments. ∗ denotes a signicant improvement of MSGIFSR over the best baseline using a paired 𝑡-test (𝑝 < 0.01). The reason is that MSGIFSR captures the user preferences in a hierarchy way i.e. low level of intent unit to capture the ne grained intents while the high level intent unit to capture complex intents. Such a design can help propagate information between dierent intents more eectively and eciently. We also notice that our proposed methods obtain relatively larger gains on Gowalla and Yoochoose1/64. From the statistics, we can learn that Gowalla and Yoochoose1/64 have relative small number of items and sessions. In such situation, our proposed high level consecutive intent units can help extract richer user intent, thus boosting the recommendation performance. Table 3: Results(%) of ablation experiments. In this section, we conduct ablation study to evaluate the contribution of each key components. Specically, in each experiment we remove one of the components and the performance change indicates the importance of the removed component. The results are shown in Table 3. 4.5.1 Eectiveness of Multi-granularity Intent Heterogeneous Session Graph. To study the impact of MIHSG, we train models without intra-granularity edges (intra-E), without inter-granularity edges (inter-E), and without MIHSG (without both types of edges) respectively and compare the performance. From Table 3, we nd that either removing intra-granularity edges or inter-granularity edges harms HR@20 and MRR@20. It indicates that both kinds of transition relationships are important to capture the sequential information. By removing MIHSG, the transition information is completely lost and the context awareness is largely restricted since the sequence info has been removed. Meanwhile, by doing so, the propagation path for long dependency is cut o, which further aggravates the information loss. Besides, removing intra-granularity edges has a larger impact than removing inter-granularity edges. This is because the transitions between the intent units within the same granularity serve as the foundation of the user preference description, and the inter-granularity edges can also benet from it. 4.5.2 Impact of Intent Fusion Ranking Module and RENorm. The intent fusion ranking module composes recommendation results from all intent granularity levels. To study the eectiveness of IFR, we train a reduced model only taking the results from the level-1 intent granularity to make recommendations. As shown in Table 3, both of HR@20 and MRR@20 decays signicantly, which means that information from higher intent granularity levels is complementary to the original level-1 intent granularity item sequence. We also train another reduced model without RENorm and nd that worse MRR@20 are reported on all four datasets. It indicates that distinguishing repeat click behaviors and exploration behaviors is benecial. By comparing the eectiveness of IFR module and RENorm module, it is observed that the IFR module brings larger gains on HR@20 while RENorm module impacts the MRR@20 more. An explanation is that the IFR module can help to recommend more correct items which favor HR and the RENorm aims to obtain strictly correct order, which leads to better MRR. 4.6.1 Performance on Dierent Session Lengths. We study relation of the performance and session lengths. We rstly split the test set into long sessions and short sessions. Following [16,37], sessions with length larger than 5 are long sessions while remain sessions are short ones. After that, we compare our method, i.e., MSGIFSR with intent unit granularity level 3 and Mean-GRU readout function with two state-of-the-art baselines NISER+ and SGNN-HN, and report the result on the four datasets. All GNN layers are set to 1 for fair comparisons. The results are shown in Figure 3. From the gure, we nd that NISER+ performs worse than SRGNN-HN. It is because SRGNN-HN applies star node to lter out irrelevant items. Among the three datasets, MSGIFSR achieves the best result on both long and short sessions, indicating the effectiveness of MSGIFSR. Moreover, we observe that the baseline methods suer from the long-range dependency problem, especially for the long sessions, and the relative gains of MSGIFSR to baselines in long sessions are larger than in short ones. The reason is that the proposed high-level intent unit granularity can model more accurate user intent from a combined perspective, i.e., the overall meaning of a group of consecutive items. And, the information of the former intent units can be eciently transported to the later ones through MIHSG. Thus, the long-dependency problem can be well handled. Figure 3: Comparison on dierent lengths of sessions. 4.6.2 Results on Dierent intent unit Granularity. We test the result with respect to intent granularity level on four datasets. The results are shown in Figure 4. We use the 1-layer HGAT network to avoid the inuence of high-order information propagation. We nd that MSGIFSR with higher level intent granularity is consistently better than that with only single items. For Diginetica, in the beginning, the performance of MSGIFSR improves as higher level of intent granularity is incorporated into the MIHSG. Then the performance gain becomes stable as the level of granularity increases. We observe similar phenomenon in Yoochoose, Gowalla. For Last.FM, the performance of MRR@20 has a drop when intent granularity level increase to 4 and 5 and then becomes better for 𝐿 =6. It indicates that for the datasets with a long average session length, we need to incorporate higher-level granularity of intent to capture the user preference. We also nd that as the granularity goes coarser, the performance becomes stable. That is because sessions are usually not so long and keep increasing the granularity level brings no more useful information. 4.6.3 Comparisons with Hypergraph. We replace MIHSG with other topological structures like hypergraph [29] to test the eectiveness of MIHSG. We then apply a hypergraph attention neural network to perform message passing operations on such hypergraph while keeping the remaining settings the same as our model. We denote the model SHARE-IFR since it utilizes the proposed IFR module for fairness. The representations of hyperedges are considered as high-level granularity intent. The intent-granularity levels are among 1 to 7. The results are shown in Figure 4. We nd that MIHSG performs better than hypergraph across dierent granularity levels. It is because hypergraph only considers the group intent information of items and ignores the sequential behavior of them, which may cause information loss problem. In contrast, MIHSG can capture such information by using a recurrent neural network like GRU. Moreover, we also nd that SHARE-IFR is not stable as the intent granularity level increases. An explanation is that the hypergraph attention neural network conducts message passing by two steps, i.e., from nodes to hyperedges and then from hyperedges to nodes. This makes information transported between two hyperedges ineciently and destabilizes the performance when multiple hyperedges are involved. While heterogeneous GAT makes message passing for nodes with dierent intent granularity levels directly, hence avoid such phenomenon. In this paper, we study the session-based recommendation problem and proposed MSGIFSR, a novel model that extracting dierent in-session intent granularity information. It is observed that varied consecutive combined intent granularity provides richer user preference, and our proposed MIHSG successfully captures complex preference transition relationships among multi-level consecutive intent units and long-range dependencies by modeling intraand inter-granularity intent unit edges. In addition, the intent unit encoder mechanism considering both the order-variant and order-invariant relations of a group of items which are good at representing intent unit meanings. Last but not least, the ablation study demonstrates the Intent Fusion Ranking module successfully incorporates recommendation results from all intent unit levels. We will extend our work in a streaming session-based setting and reduce the time complexity and popularity bias for recommendations in the future work. Acknowledgments.Jiayan Guo and Yan Zhang are supported by National Key Research and Development Program of China under Grant No. 2018AAA0101902, and NSFC under Grant No. 61532001.
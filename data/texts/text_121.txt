Abstract—User purchasing prediction with multi-behavior information remains a challenging problem for current recommendation systems. Various methods have been proposed to address it via leveraging the advantages of graph neural networks (GNNs) or multi-task learning. However, most existing works do not take the complex dependencies among different behaviors of users into consideration. They utilize simple and ﬁxed schemes, like neighborhood information aggregation or mathematical calculation of vectors, to fuse the embeddings of different user behaviors to obtain a uniﬁed embedding to represent a user’s behavioral patterns which will be used in downstream recommendation tasks. To tackle the challenge, in this paper, we ﬁrst propose the concept of hyper metapath to construct hyper meta-paths or hyper meta-graphs to explicitly illustrate the dependencies among different behaviors of a user. How to obtain a uniﬁed embedding for a user from hyper meta-paths and avoid the previously mentioned limitations simultaneously is critical. Thanks to the recent success of graph contrastive learning, we leverage it to learn embeddings of user behavior patterns adaptively instead of assigning a ﬁxed scheme to understand the dependencies among different behaviors. A new graph contrastive learning based framework is proposed by coupling with hyper metapaths, namely HMG-CR, which consistently and signiﬁcantly outperforms all baselines in extensive comparison experiments. Keywords-Hyper Meta-Path; Graph Contrastive Learning; Recommendation Systems; Online shopping is becoming more and more essential nowadays, which generates a large volume of user behavioral data depicting users’ purchasing motivations, interests, behavioral patterns, etc. However, many traditional recommendation systems [1], [2] pay signiﬁcant attention to purchasing alone, leaving other associated behavioral data unexploited. Though recent works [3]–[7] reveal the gap and try to leverage multi-behavior information to improve recommendation quality, there are still limitations. For instance, some path-based works [3], [8] leverage meta-paths [9], [10] to extract recommendation context to better characterise users’ multiple behaviors. However, there exist many meta-path schemes observed in heterogeneous graphs, resulting in the , Philip S. Yuand Guandong Xu difﬁculty of ﬁnding out the best one from multiple metapath schemes via exhaustive search or learning a speciﬁc rule or scheme from the heterogeneous graphs to construct meta-paths [8]. Selecting effective and meaningful meta-path scheme in this case is time-consuming, and the reasons of the selection are usually unknown. To overcome the above limitation of existing path-based approaches, we propose a new concept of hyper meta-path that consolidates multiple paths in a well-organised and holistic way. Similar to hyperedge in hypergraph [11]–[14] where an edge can connect more than two nodes, a hyper meta-path is a composition of multiple meta-paths between speciﬁed two end nodes in a heterogeneous network. As shown in Figure 1, let us assume that before purchasing a phone, the user had viewed the item twice. If metapath based approaches are adopted to model the different shopping-related behaviors, three independent meta-path instances (Fig. 1.(a)) can be discovered to characterise this purchasing context. Though from these three meta-paths we can learn the user has viewed and purchased the item, it dose not explicitly reﬂect the exact behavioral pattern of the user. That is, it is unclear whether the user purchased the item directly or viewed the item carefully before purchasing. In contrast, the proposed hyper meta-path is capable of achieving such a goal. As shown in part (b) of Fig. 1, a hyper meta-path between the user and the phone consolidates all three behaviors in a sequential order, which explicitly shows that the user carefully viewed the phone twice before the ﬁnal purchasing action. Note that the way of consolidating related meta-paths into a hyper meta-path can be ﬂexible and generalized to any reasonable rule depending on particular application scenario. Besides, the concept of hyper meta-path is also useful for differentiating different behavior patterns between different users or when facing various categories of items presented to a user. For instance, normally technical people may research on different substitutable electronic products and take longer time to compare them, while non-technical people are not keen on investigating them and would probably directly buy one based on someone’s recommendation. Even for the same user no matter their age and gender, they usually exhibit quite diverged buying patterns when facing different categories of products. For example, a user may have totally different buying patterns when purchasing large items (e.g., white goods like fridge or TV) and small fast-moving consumers goods (e.g., periodically buying tissues from online market without viewing again and again). Nevertheless, it is not straightforward to incorporate the modelling of hyper meta-path into existing learning frameworks. Currently, graph-based unsupervised learning approaches are mainly used for path-based recommendation. For example, GNNs based approaches [4] are a popular means for multi-behavior recommendation via aggregating information passed from different types of edges or nodes in heterogeneous information networks [15]. Despite its popularity, these methods usually fuse the learned features of different behaviors independently, which is too naive to reﬂect hyper meta-path context for recommendation. Moreover, multi-task learning based models [5], [6] are also possible ways that introduce additional supervision signals from the observed multiple behavior data to improve recommendation quality. However, extra efforts on wellelaborated tasks are tricky, and researchers have to carefully work out the effective dependencies among related tasks. For example, taking purchasing prediction as a primary task while modelling the add-to-cart behavior prediction as an auxiliary task might not be always right as some users may buy some items directly without putting them into the cart. Thus, to further reveal and capture the differences between buying patterns, together with hyper meta-paths, we innovatively leverage graph contrastive learning [16], [17] paradigm for the multi-behavior recommendation problem. The main idea of graph contrastive learning is to distinguish the differences among graphs to obtain the useful structure information of each graph, raising a recent surge of interest [16], [17]. The rationale of incorporating contrasitive learning with our proposed hyper meta-paths is that, a user may have multiple hyper meta-paths explicitly illustrating his/her behavioral patterns when facing different products. Since hyper meta-path explicitly describes users’ behaviors towards purchasing different items, graph contrastive learning becomes a best ﬁt for comparing and extracting the key structures in the graph consisting of hyper meta-paths. More speciﬁcally, we combine multiple hyper meta-paths of a user to construct several hyper meta-graphs. Each hyper meta-graph contains different number of types of behaviors, For example, the ﬁrst hyper meta-graph contains buy and the second hyper meta-graph contains buy and page view. In this case, different hyper meta-graphs reﬂect different behavioral patterns regarding different products of the user. Then, we conduct graph contrastive learning among the constructed hyper meta-graphs to adaptively obtain the complex dependencies among different behaviors and the embeddings representing different behavioral patterns. For instance, in HMG-CR, we ﬁrst build the target contrastive graph that only contains buy interactions between users and items as it is the target behavior for recommendation systems, and the other contrastive hyper meta-graphs are added for comparison by incrementally introducing auxiliary behaviors to the precedent hyper meta-graph. After that, we conduct graph contrastive learning between the constructed contrastive hyper meta-graphs to successively obtain progressive and comprehensive representations for each types of behaviors. Finally, the recommendation will be performed based on those discovered behavior patterns and features. The contributions of this paper can be summarized into three aspects: illustrating the logical relations among a collection of meta-paths, which tackles the limitation of meta-path that is insufﬁcient to model the interactions among meta-paths. Hyper meta-path can be regarded as an approach to enrich graph structures. capture the complex behavior patterns of users adaptively, alleviating existing methods’ limitation. framework coupling graph contrastive learning with hyper meta-path, which achieves the superior performances in the comprehensive comparison experiments. This section will introduce some preliminaries regarding the proposed concept of hyper meta-path. Heterogeneous networks have been intensively studied by a lot of researchers due to its ability of utilizing multi-model multi-typed graph data. To illustrate the power of hetergeneous networks, Sun et al. [9] proposed the concept of metapath, which is widely used by many existing works [10], [18] in the research area of heterogeneous networks modeling. Each meta-path captures the features among the nodes on the meta-path from a particular semantic perspective. Due to the diversity of meta-paths in a heterogeneous graph, for the target (e.g., a node or an edge), there exist multiple metapaths. Thus, the informative meta-paths give heterogeneous network models the chance to obtain the multi-model multityped features of nodes and their relations. This kind of data structure indeed shows the advantage in many real-world graph data mining applications [19], [20]. However, there are limitations existing in meta-paths mentioned in Section I, failing to capture the interaction information among multiple meta-paths. Though we can build extra meta-paths based on the interactions among existing meta-paths, we cannot take an exhaustive method to compute on every meta-paths since the computation complexity is unaffordable. Inspired by the concepts of hyperedge and hypergraph, we ﬁnd a way to integrate interaction information among meta-paths into the target. According to the limitation of conventional metapath mentioned above and advantages of hyperedge and hypergraph, we propose the concept of hyper meta-path to capture meta-path features and interaction information among them simultaneously. Deﬁnition 1: Hyper meta-path. A hyper meta-path is a logical composition of multiple meta-path schemas connecting two end nodes in a heterogenous information network. Hyper meta-path has the following properties: order, spatial order and topological order) among a sort of meta-paths with the same end nodes. node, compose a hyper meta-graph. In this section, we will introduce details of our proposed framework as shown in Figure 2, Hyper Meta-Graph Contrastive learning for Recommendations, namely HMGCR. GNNs based recommendation methods [21] have recently achieved tremendous success due to the power of GNNs. Data is critical to neural network models’ performances. One way to leverage GNN based recommendation models is to construct proper graphs for them. The most common way to construct graphs in recommendation systems is building bipartite graphs via user-item interaction history. Since useritem interaction graphs are bipartite graphs, they are lack of semantic information because of their simple structure. To tackle this limitation, researchers have taken measures to further enrich semantic information carried by graphs. For example, adding side information into the graph [22], utilizing meta-paths existing in the graph [8], and constructing more complex graph structures (e.g., hypergraph) [23], [24]. To improve recommendation results, in our work, we utilize the proposed concept of hyper meta-path to construct hyper meta-graphs carrying rich semantic information. Next we will introduce details to construct hyper meta-graphs for our proposed recommendation framework. Given a set of interaction records in a recommendation system, {(u, r, i)|u∈ U, i∈ I, r∈ R}, where U = {u, u, · · · , u} denotes the set of all users, I = {i, i, · · · , i} denotes the set of all items, and R = {r, r, · · · , r} denotes the set of all different kinds of user behaviors. According to the number of types of different user behaviors, we construct |R| = l + 1 hyper metagraphs for each user. For the t-th hyper meta-graph of user u, it is deﬁned as HG= {(u, (r, r, · · · , r), i)|i∈ I, ∀r ∈ {r, r, · · · , r, r}}, where behavior sequence (r, r, · · · , r) is sorted in chronological order, and each behavior r in the sequence solely bridges user uand item i. Hence, we will have a set of hyper meta-graphs HG= {HG, HG, · · · , HG} to illustrate user-item interactions of user uin the recommendation system. Note that the order among different behaviors in R is based on the distance between behaviors and behavior buy in the semantic space. For example, four types of common user behaviors, page view, favorite, add to cart, buy. Behavior page view is farthest from behavior buy, we can deﬁne a sorted set of behaviors here, {r, r, r, r}. So, the ﬁrst hyper meta-graph of a user solely contains the behavior of buy, the second one contains page view and buy, the third one contains all the behaviors except add to cart, and the last hyper meta-graph of the user contains all of four types of behaviors. Graph encoder is the essential part of the whole framework since it determines whether the framework can learn representative embeddings for users’ behavior patterns from hyper meta-graphs. GNN models are widely used graph encoders, e.g., GCN [25] and GAT [26]. Technically, any GNN models can be used in our framework with sufﬁcient information (e.g., edge types and node features). Note that we do not need exquisite GNN models since we have built hyper meta-graphs which carry rich semantic information (e.g., geometric information, topological structures). In the practice of our framework, we could apply geometric or topoloy based GNNs, like GIN [27] and TAG [28], as the graph encoder because of their simplicity and effectiveness. Further more, they can leverage the structure information from proposed hyper meta-path and advantages of structurelevel contrastive learning [16]. As mentioned in the previous section, each user in the recommendation system have |R| hyper meta-graphs. We assign |R| independent graph encoders to process these hyper meta-graphs accordingly, note that these graph encoders are shared among different users. Given the t-th hyper metagraph of user uand a graph encoder g(·), where · denotes a hyper meta-graph, we will have the embedding of the t-th hyper meta-graph of user u: where h∈ Rand h denotes the hidden dimension of the user behavior pattern embeddings and item embeddings. For each user, we build several hyper meta-graphs. The graphs carry the interaction records of the user. We can capture this information via graph encoders learning on the hyper meta-graphs separately. However, the behavior patterns of a user would be complicated. According to the example mentioned in the previous section, we have four different hyper meta-graphs for each user. The complexity of the hyper meta-graph is increasing following the number of behavior types it contains. For example, the ﬁrst hyper meta-graph solely includes buy, and the second hyper metagraph includes page view and buy. The second hyper metagraph contains at least two purchasing patterns: buying the item directly, which is also contained in the ﬁrst hyper meta-graph, and buying the item after viewing. Suppose we adopt graph encoders to learn on each hyper metagraph separately. In that case, different behavior patterns in the same hyper meta-graph will be fused. This result may neglect the performances when using the learned behavior patterns for the recommendation. It is critical to extract different behavior patterns from a sequence of hyper metagraphs whose complexities are cascadingly increasing. A potential solution is to contrast the hyper meta-graph with its previous one to obtain the differences (e.g., different behavior patterns) between these two adjacent hyper metagraphs. Thanks to the recent success of contrastive learning in graph learning, we propose to utilize hyper meta-graphs discrimination as the solution to obtain different behavior patterns and InfoNCE as the contrastive learning objective. We give an example here. For the user u, we give out two adjacent hyper meta-graphs of u, which are HGand HG. We assign g(·) and g(·) as their graph encoders, respectively. Hence, we will have embeddings of two hyper meta-graphs: In this example, hand hcompose the negative pair. To satisfy the setting of InfoNCE, we must construct the positive pair to fulﬁll the contrastive learning process. Following the graph contrastive learning settings in GCC [16], we use g(·) to encode HGto obtainˆh: which is together with hto compose the positive pair. In our work, we adopt InfoNCE such that: L= − lnexp (d(h,h))ˆ, (5) where d(·, ·) denotes the metrics measuring the distance between two vectors. For the recommendation system having n + 1 users and l + 1 different types of user behaviors, we will have a total contrastive learning objective: The intuitions of adopting such a strategy are twofold: mentation. Some works [17] utilize graph augmentation to generate negative pairs. But in the recommendation scenario, graph augmentation would disturb the users’ interaction records and affect behavior pattern generation, which may cause misleading results in the downstream recommendation tasks. Such a strategy is an alternative solution for us to generate the negative pair without disturbing original semantics. for us to link the embeddings generated from different graph encoders with different graphs in semantic space. However, with such a strategy, we can build an implicit connection between contrasting hyper meta-graphs in the contrastive learning process. We will have |R| user behavior embeddings for a user after contrastive learning process, which will be fed into fusion layer and downstream recommendation tasks. After obtaining |R| different embeddings which denote different behavior patterns of a user, we have to fuse them and obtain a uniﬁed embedding to conduct recommendations. There is a sort of widely used linear fusion methods, like sum and mean. And there is another type of fusion method, which is neural network-based methods (e.g., Multi-Layer Perceptron (MLP) and Personalized Non-Linear Fusion (PNLF) [29]). Given a fusion function f (∗), we can have a uniﬁed behavior pattern embedding for the user: There are plenty of collaborative ﬁltering-based recommendation frameworks, which leverage the explicit or implicit feedback of users, like [1]. To fully demonstrate the ability of the proposed model, we use vector product to make prediction instead of those complex and state-ofthe-art models to avoid the improvement brought by the recommendation model. Let hdenotes the embedding of item i. With the uniﬁed behavior pattern embedding of user u, we can obtain the predicted score between the item and the user via: where the trainable weight matrix W ∈ R. The matrix W is used to map the uniﬁed behavior pattern to the space where item embeddings in for score prediction. To train model parameters, we take the negative logarithm [1] of the likelihood function: to normalize the loss value of loss function on recommendation tasks, we take L=L|{(u, i)|(u, i) ∈ Y ∪ Y}|(10) as the objective, where Y and Ydenote postive interaction records and sampled negative interaction records, p∈ {0, 1} represents if there is an interaction between user u and item i. To train the model from end to end, we couple two objectives as the total loss function: where β is a hyperparameter contoling the signiﬁcance of two objectives in the total training objective. This section evaluates HMG-CR on recommendation tasks with two real-world datasets. We will ﬁrst report the comparison experiment results of HMG-CR and baselines. Then, we analyze how the graph contrastive learning works in our model. Lastly, we conduct ablation studies on graph encoder and fusion layer in the model. We evaluate the proposed framework on two real-world datasets, which have high quality and are widely used. including Taobaoand Tmall. To ensure the quality of the datasets, we follow the customary practice [30] to discard users and items with less than ﬁve interactions of buy. We also ﬁlter users with too much interactions of page view in Tmall to discard noise. The statistics of the ﬁltered datasets are shown in Table I. To verify the effectiveness of the proposed framework, we compare it with three categories of baselines. The ﬁrst category is conventional GNNs including GCN [25] and GraphSAGE [2], which cannot distinguish different types of edges in the graph, they treat different user behaviors as the same. The second category is edge types-aware GNNs including GAT [26] and RGCN [4], which can process various types of edges in the graph explicitly or implicitly to capture the features of different user behaviors. The last category is novel multi-behavior recommendation frameworks, NMTR [5] and EHCF [6] which achieve stateof-the-art performances on multi-behavior recommendation tasks. For reproducibility, we introduce the details of the hyperparameter settings of the proposed framework. We train our model on dataset Taobao with learning rate lr = 0.0001, weight decay wd = 0.000001, hidden dimension h = 16 advised by [31], and 3-layer TAG as graph encoder. As to dataset Tmall, we tune our model with the same learning rate, weight decay and hidden dimension. We take 3-layer GIN as graph encoder for dataset Tmall. To ensure the fairness in the comparison studies, we follow the widely used leave-one-out strategy [1] to conduct comparison. The metrics we adopt are Recall@K and NDCG@K, which show the recommendation quality of top-K recommended items. For more details, you can refer to the source code of this project via this link. All experiments are conducted on NVIDIA TITAN Xp. Table II lists the comparison experiment results for all methods on two datasets. Overall, the proposed framework HMG-CR with different graph encoders consistently and signiﬁcantly outperforms all baselines in terms of all metrics. Particularly, our proposed framework has more signiﬁcant improvement on the metric NDCG, which shows that our proposed framework pays more attention to sorting recommended items. Note that HMG-CR on dataset Taobao slightly outperforms that on dataset Tmall. According to the statistics of the two datasets, as shown in Table I, we note that the average numbers of total interactions for each user are close in two datasets, but there are differences among the distribution of numbers of different user behaviors. The ratio of add to cart in dataset Tmall is much less than that in dataset Taobao. Each user in both datasets has four hyper meta-graphs since there are four different types of user behaviors. Due to lack of add to cart in dataset Tmall, the third hyper meta-graph for a user, including page view, add to cart, and buy, is similar to the second hyper metagraph for the user, including page view and buy. Under such a scenario, it is hard for graph contrastive learning to maximize the dissimilarities between the second hyper meta-graph and the third hyper meta-graph. Hence, the user behavior pattern embedding generated in this part would be misleading for uniﬁed user behavior pattern embedding generation. Graph neural network-based methods have unsatisfying performances in our experiment. The interaction graphs for each user in the recommendation systems have simple structures (e.g., bipartite graphs). Conventional GNN models, like GCN and GraphSAGE, may be insufﬁcient to capture user behavior pattern embeddings on such simple graph structures. Edge types-aware GNN models, like GAT and RGCN, slightly outperform GCN and GraphSAGE since they integrate fruitful side information regarding different types of user behaviors. Overall, two categories of GNN models have no signiﬁcant gaps, because page view takes the most of place in the datasets. Message passing and aggregation are not capable to capture sophisticated relations among different types of user behaviors, since semantics of page view would conceal other information. NMTR and EHCF are state-of-the-art multi-behavior recommendation frameworks. They leverage the well-designed recommendation models and multi-task learning strategy to utilize the supervision signals from all types of user behaviors. However, there is a limitation for both frameworks. Both of them have an assumption that each type of user behaviors has strong connections with precedent types of user behaviors. This assumption is not solid, because users’ behavioral patterns are complex as shown in a toy example in Section II-B. The proposed HMG-CR adopts a more ﬂexible manner to utilize graph contrastive learning to capture the dependencies among different types of user behaviors instead of assuming there are strong connections between a behavior and the precedent one. Because of it, even without multi-task supervision signals and welldesigned recommendation models, the proposed HMG-CR still outperforms NMTR and EHCF with leveraging the advantages of hyper meta-graphs and graph contrastive learning. In this section, we will introduce to you the detailed mechanism of graph contrastive learning in our proposed framework. First, as shown in the Figure 3, we demonstrate the training loss of the proposed framework on two datasets during the training process. The training loss is twofold, contrastive loss and recommendation loss. We observe a clear tendency that contrastive loss drops ﬁrst and remains stabilized, and then the recommendation loss starts to decrease. This phenomenon reﬂects that our proposed framework ﬁrst maximizes the dissimilarity among hyper meta-graphs to obtain user behavior pattern embeddings and updates parameters on the recommendation task. And the contrast among hyper meta-graphs is maintained within the whole training process. To further illustrate the impact of graph contrastive learning on our proposed framework, we conduct hyperparameter studies on β, which controls the relative signiﬁcance of graph contrastive learning tasks and recommendation tasks. The experimental results of hyperparameter studies are shown in the Figure 4. Overall, our proposed framework is not that sensitive to β as long as β is not too small. However, we note that the proposed framework has worse results when β takes the boundary values (e.g., β = 0.1). When β is too low, the model pays less attention to the recommendation tasks. The model cannot acquire sufﬁcient supervision signals from training data to update the parameters. Under this scenario, it is difﬁcult for our model to converge quickly and precisely on recommendation tasks. With β increasing, the performances of the proposed framework increase accordingly. When β is larger than some speciﬁc values, e.g., β = 0.4 for dataset Taobao and β = 0.2 for dataset Tmall, the performances start to decrease slightly. Large β values will neglect graph contrastive learning tasks, which would undermine the ability of the model to acquire user behavior pattern embeddings from sophisticated hyper meta-graphs. This phenomenon also veriﬁes that graph contrastive learning is helpful to our proposed framework. In summary, graph contrastive learning tasks and recommendation tasks should have a relatively balanced signiﬁcance and β should not be too large in our proposed framework to avoid decreasing model performances and cannot be too small in which case the framework may not work. F. Ablation Studies Graph Encoder Choosing a proper graph encoder for the framework determines whether it can achieve good performances. We select three common categories GNNs, conventional message passing based GNNs including SG [32] and GCN, attention mechanism based GNNs including GAT, and graph topological or geometric structure aware GNNs including TAG [28] and GIN [27]. The experiment results are shown in the Table II. According to the results, the proposed HMG-CR with any graph encoders outperforms all baselines. Speciﬁcally, HMG-CR with SG or GCN slightly outperforms baselines since conventional message passing based GNNs are insufﬁcient to capture complex user behavior features from the constructed hyper meta-graphs. Despite the user-item interactions in the hyper meta-graphs, there are also chronological dependencies among different user behaviors. With such sophisticated relations in the hyper meta-graphs, GAT leverages attention mechanism to learn user behavior embeddings via adaptively distinguish different relations (edges) in the hyper-meta graphs. However, we replaced different types of edges, which represent user behaviors, with different types of nodes in the hyper metagraphs. We explicitly add the information of interactions among users and items into the hyper meta-graph. It means that the improvement brought by attention mechanism, distinguishing different edges is limited. Note that the hyper meta-graphs have a structure which is similar to tree topology. Hence, the hyper meta-graphs have not only fruitful semantic information but also excellent structure. HMG-CR with graph structure aware graph encoders leverages the advantages of the hyper meta-graphs and achieve the best results in our experiments. To verify the improvement is brought by our proposed framework instead of TAG or GIN solely, we conduct supplementary experiments with TAG and GIN shown in the Table III. Fusion Layer Fusion layer is the output layer of the proposed framework. We focus on two categories of fusion layers, linear fusion layer, mean and sum, and non-linear fusion layer, MLP and PNLF. The experimental results are shown in the Table IV. According to the results, HMGCR taking mean as the fusion layer achieves the best result. Overall, HMG-CR with linear fusion layer has better performances in our experiments. We note that there are mapping layers in MLP and PNLF. In this component, mapping mechanism may disturb the user behavior pattern obtained in the space in which the graph contrastive learning was conducted. Hence, we should take linear fusion layer to output the uniﬁed user behavior pattern embeddings to avoid disturbing caused by conducting fusion in another embedding space. Graph contrastive learning recently attracts attention from researchers leveraging contrastive learning idea to enhance existing GNNs. The core idea of contrastive learning is to maximize representation agreement among sampled and transformed data. Some works [16], [17] introduce contrastive learning to graph representation learning and had achieved promising results. There are two main measures to generate contrasting pairs, including graph perturbation and sub-graph sampling. However, how to adpatively construct contrasting pairs instead of randomly and how to implement graph contrastive learning in real-world problems are fully explored. Multi-behavior recommendation utilizes multiple useritem feedback for enhancing recommendation on target behaviors. There are different approaches to make use of users’ multi-behavior information. In a multi-behavior interactions graph, [4], [26], [33] assign different weights to different types of edges, representing different types of behaviors, before conducting aggregation. Graph based recommendation methods [4], [26], [34] achieve good performances in recommendation tasks with leveraging advantages of GNNs. Moreover, [5], [6] adopt multi-task learning techniques to acquire more supervision signals from multi-behavior data. For embedding generation, they assume that one behavior is strongly related to the precedent behaviors and embeddings of different types of user behaviors are adjacent in the embedding space. Both aggregation in [4], [26] and assumptions in [5], [6] are insufﬁcient to capture complex relationships among different behaviors of users. In this paper, we propose the concept of hyper metapath and a novel framework, HMG-CR, which ﬁrst utilizes graph contrastive learning techniques into recommendation systems. Leveraging the advantages of hyper meta-path and HMG-CR, we achieve the SOTA performances on the task of purchasing prediction on both datasets. We also conduct extensive analysis on HMG-CR and fully demonstrate the details of it. The concept of hyper meta-path and the framework are ﬂexible and can be used in other heterogeneous graph mining tasks. This work is supported by the Australian Research Council (ARC) under Grant No. DP200101374 and LP170100891, and NSF under grants III-1763325, III1909323, III-2106758, and SaTC-1930941.
Link prediction in structured-data is an important problem for many applications, especially for recommendation systems. Existing methods focus on how to learn the node representation based on graph-based structure. High-dimensional sparse edge features are not fully exploited. Because balancing precision and computation efﬁciency is signiﬁcant for recommendation systems in real world, multiple-level feature representation in large-scale sparse graph still lacks effective and efﬁcient solution. In this paper, we propose a practical solution about graph neural networks called Attributed Graph Convolutional Networks(AGCN) to incorporate edge attributes when apply graph neural networks in largescale sparse networks. We formulate the link prediction problem as a subgraph classiﬁcation problem. We ﬁrstly propose an efﬁcient two-level projection to decompose topological structures to node-edge pairs and project them into the same interaction feature space. Then we apply multi-layer GCN to combine the projected nodeedge pairs to capture the topological structures. Finally, the pooling representation of two units is treated as the input of classiﬁer to predict the probability. We conduct ofﬂine experiments on two industrial datasets and one public dataset and demonstrate that AGCN outperforms other excellent baselines. Moreover, we also deploy AGCN method to important scenarios on Xianyu and AliExpress. In online systems, AGCN achieves over 5% improvement on online metrics. Link prediction problem seeks to predict the probability of the link between two target nodes. Many applications can be formulated as link prediction problems. For example, personalized item recommendation can be formulated as link prediction between users and items. User-item interactions are constructed as a bipartite graph shown in Figure 1. Similar item recommendation can be treated as predicting the link between two items and friend recommendation can be treated as predicting the link between two users. Due to the wide application of this task, link prediction problem in graph-structured data has attracted much attention in research and industry. Traditional methods in industry are heuristic methods, because they are interpretable and easy to implement (Zhang and Chen 2018). They use hand- Figure 1: The inﬂuence of edge attributes on user-item bipartite graph. crafted measures of topological structure to estimate the link probability between nodes. Most methods assume that more paths between nodes lead to the higher the link probability. Heuristic methods suffer bad performances when the assumptions are not satisﬁed. Moreover, when the graph is very sparse, most of target nodes are connected with few paths. sparse links cannot be distinguished. Instead of handcrafted measures, supervised methods learn the topological features through complex models. Weisfeiler-Lehman Neural Machine (WLNM) is the ﬁrst supervised method(Zhang and Chen 2017). SEAL (Zhang and Chen 2018) introduce GCN to extract topological features for link prediction. However, all the methods mentioned above ignore abundant edge attributes, which is very important to link prediction, especially in sparse graphs. Taking Figure 1. as an example, it is extracted from Figure 1. with edge attributes. Usersearches iphone today and clicks itemand item and a year ago Usersearches dress and clicks item. Ignoring the edge attributes, item-itemand item-itemare both connected by one path, and their link cannot be distinguished. Considering the edge attributes, as user-itemand user-itemshare the same query and interaction time, item is intuitively more similar with itemthan item. Meanwhile, sparse graph is common in practice, and edge attributes are not fully exploited in extracting the topological structures. Therefore, edge attributes have the potential to improve the accuracy of link prediction in practical applications. In this paper, we propose a practical solution based on GCN, called Attributed Graph Convolution Network (AGCN), to introduce both edge and node attributes for link prediction. We ﬁrst treat each node-edge pair as a base element and project corresponding edge and node attributes into the same feature space. As the attribute vectors are often very high-dimensional in practice, the number of parameters of the projection can be very large. That will make the cost of training prohibitive. We formulate the link prediction problem as a variation of subgraph classiﬁcation problem, where the subgraph is the enclosed subgraph around the link to predict. We propose an efﬁcient two-level projection (i.e. high-level projection and low-level projection) to address the problem. The high-level projection only operates on the high frequency attributes whose number will be much smaller, and we adopt a simple latent factor model to learn the high-level interaction between nodes and edges. The low-level projection operates on all the attributes and adopts non-parametric operations to extract low-level interaction between node and edge. Then we apply multi-layer GCN to combine the projected node-edge pairs to represent the topological structures. Finally, we concatenate the output of two units after pooling layer and use the classiﬁer to predict the link. We conduct ofﬂine experiments on public datasets and million-scale datasets derived from real industry. The results conﬁrm that edge attributes help improve the accuracy of link prediction. Further more, we deploy the method on the following four recommendation scenarios in industry. AGCN stably outperforms the baseline and demonstrates that AGCN is effective in industrial sparse graphs. Our contributions can be summarized as follows: • We propose AGCN to apply subgraph-based graph neural network with heterogeneous information for the largescale and sparse network. • We propose an efﬁcient solution, including the two-level projection and subgraph classiﬁcation to control the complexity and accelerate the training. We successfully implement the framework in real large-scale applications. • We deploy the method on four very large scale practical applications and achieve signiﬁcant online improvement. Link prediction is an important problem which attracted many researchers in graph mining area (Pech et al. 2019; Liben-Nowell and Kleinberg 2007; Zhang and Chen 2017; Huo, Huang, and Hu 2018; Lichtenwalter, Lussier, and Chawla 2010; Song, Meyer, and Tao 2015; Backstrom and Leskovec 2011).We discuss three mainstream method, heuristic method, latent node representation and graph neural networks in the following section. Heuristic Method Heuristic methods stem from the hypothesis that if two nodes are close in the network or connected with the same nodes, they are similar. These methods deﬁne distance functions to compute the likelihood of links, such as common neighbors, Katz index and Jaccard(Rossi et al. 2019; Li et al. 2020a; Zhang and Chen 2018). Common neighbors assumes more common 1st-order neighbors represent the larger probability of positive relations between two nodes. Multiple hops are also considered by AdamicAdar, Katz, PageRank and SimRank (Brin and Page 2012; Jeh and Widom 2002). Adamic-Adar is more widely used in industry due to its simplicity. However, the distance functions have a limited capacity to capture the complex or sparse interactions in the large scale network. Latent Node Representation latent feature methods factorize interaction matrix to learn latent representation for each node. Matrix factorization (MF)(Mnih and Salakhutdinov 2008) and stochastic block model (SBM)(Airoldi et al. 2008) are typical methods in link prediction. With the popularity of network embedding methods, node2vector (N2V)(Grover and Leskovec 2016), deepwalk (Perozzi, Al-Rfou, and Skiena 2014), LINE (Tang et al. 2015), Struc2Vec (Ribeiro, Saverese, and Figueiredo 2017) are proposed to implicitly learn low-dimension node representations. They uses random walk to generate contexts of a vertex. Similar contexts means two nodes are closer together in the feature space. Structural context information is also encoded into node representations by (Ribeiro, Saverese, and Figueiredo 2017). However, the shallow neural networks have limited capacity to learn node representations. Graph Neural Networks Graph Neural Networks(GNN), which can capture both graph structure and nodes’ attributes in the network, have shown its superiority in link prediction task (Kipf and Welling 2016; Hamilton, Ying, and Leskovec 2017; Ying et al. 2018; Ng, Jordan, and Weiss 2002). Different from heuristic method, supervised methods learn a model from the labeled data to predict the link score, which get rid of the assumptions. supervised learning link prediction from the view of graph is ﬁrstly proposed by(Zhang and Chen 2017). Weisfeiler-Lehman Neural Machine (WLNM) extracts subgraphs from the global network and obtain the subgraph representation through a fully connected neural network. WLNM lacks structure information due to different subgraphs are truncated into the same size. It cannot learn from the explicit and implicit feature representations directly. To address the above limitation, Subgraphs, Embeddings and Attributes for Link prediction(SEAL) is proposed in (Zhang and Chen 2018), which makes full use of latent and explicit node attributes and take topological structures into consideration. SEAL achieves the state-ofthe-art results. IGMC (Zhang and Chen 2019) applied the SEAL into user-item bipartite graph in recommendation and process edge features like nodes. We noticed that recently most researches introduce edge attributes into graph neural networks (Li et al. 2020b; Li, Zhang, and Song 2019; Zhang and Chen 2019), but few of them apply the graph neural networks with high dimensional and sparse edge attributes into real recommendation systems, which process hundreds of millions of nodes and edges in seconds. Edge Attributes in GNN Besides node and topological information, edge attributes also play an important role in structure similarity learning. Existing methods use the edge attributes in two different ways based on subgraph and path respectively in the network. They aggregate the edges and nodes features by message passing. generate the path representation between target nodes. CensNet (Jiang, Ji, and Li 2019) uses graph convolution network with edge-node switching without the interaction of edges, which is hard to capture topological structure information through paths. GAS (Li et al. 2019) exploit edge information by concatenating the edges with their neighbor nodes, and the model proposed by (Gong and Cheng 2019) is able to incorporate multi-dimensional positive-valued edge features. It eliminates the limitation which can handle only binary edge indicators and one dimensional edge features. TALP (Li et al. 2020b) predicts target links based on graph attention networks, which learn the type-aware vectors and type-fusion vectors associated with user nodes. However, the edge type in Heterogeneous graph is different from edge attributes, it’s easy to observe the relationships between user behaviors from edge attributes pattern instead of edge vectors. Considering the above problem, we propose a novel attributed graph neural network to capture topological and sequential pattern for high-dimension sparse edge features. In this section, we introduce the new framework Attributed Graph Convolution Networks (AGCN) including the symbolic deﬁnition of the problem, subgraph extraction method and detailed architecture. Problem Statement Given a graph G = (V, E), V represents the node set and E is the edge set. V∈ Rrepresents d-dimensional attribute vector of the inodes. E∈ R, i, j ∈ {1, 2, ..., |V |} is the n-dimensional attributed vector of the edge between node i and node j, and Edenotes the edge Ewith k attributes, such as timestamp and category. Further more, we deﬁne Gnoted as an enclosed subgraph with h-hop neighbors around the node i and node j and a path Pbetween node i and j with length h. The two nodes are treated as target nodes. Link prediction task is aimed to learn a model from the subgraphs and paths which can predict the probability of links between arbitrary two nodes. Subgraph Extraction In this work, we apply subgraph-based method in recommendation systems. Nodes in the neighborhood are stored in the same part to reduce data communication time. It makes industrial recommendation systems capture node representations from a large scale graph efﬁciently. This reduction not only saves the cost for the industry, but also updates the embeddings of users and products more quickly. Here we mainly refer to the subgraph extract methods used in (Zhang and Chen 2017). Given two nodes i and j, extracting a h-hop subgraph Gby Algorithm 1. Algorithm 1 Subgraph Extraction Require: Graph G, target node pair (i, j), hop number h, a node’s maximal 1-hop neighbors a 1: V= {i, j} 2: temp = {i, j} 3: b = 0 4: while b < h do sample 1-hop neighbors s(v), and satisfy |s(v)| ≤ a 9: end while 10: according to Vand G, generate edges set E generate nodes matrix V generate edge tensor E 11: return G= G(V, E) Model Architecture The architecture of AGCN is shown in Figure 2. The network has two modules which respectively extract and process two kinds of structure information, subgraph and path. The main pipeline is described as the following. Firstly, We sample subgraphs around node i and j which satisfy the neighbor rules and obtain vertex and edge matrix. Each node and edge with attributes is encoded into the same feature space through two-level projection. This efﬁcient twolevel projection method is proposed here to reduce complexity caused by high-dimensional and sparse data in practice. Then we use the above interaction unit and gcn layers to add topological structures information. Node representations aggregate more and more information through the combination of interaction unit and GCN layer. Finally, we concatenate the node embeddings with the output of path unit to predict the link probability. The detailed descriptions are listed as follows. Interaction Unit Node-edge pairs are basic elements of topological structures in a subgraph, and the quality about the interaction of nodes and edges in pairs directly affects the ﬁnal representing of the topological structure. As the attribute vectors are often very high-dimensional and sparse, roughly crossing the attributes is prohibitive for it high cost. We propose a two-level projection method here ,as shown in Figure 3. In the ﬁrst step, nodes attributes and edges attributes are projected to the same interaction space. And in the second step, element-wise product is adopted to com- Figure 2: The architecture of Attributed graph convolution networks. plete the interaction. Assume the pair contains node Vand edge E, the interaction process is as following l means the llayer of the graph neural network. W is a trainable n × Fmatrix, which projects Eto a new F-dimension latent space R. Vmeans the information of node V. After l layers networks, Whas also the same function with Wand projects Vto the same latent spaceJ R.means element-wise production operation to combine two-level embeddings together. GCN Layer GCN layers aggregate the projected nodeedge pairs in the neighborhood. The set of neighbors of node y is denoted as N. According to GCN (Kipf and Welling 2016), the update formulation of node y is on the following. where Wis a trainable parameters matrix, and f is a point-wise nonlinear activation function. Note that one GCN layer aggregates node-edge pairs in the neighborhood, and multiple GCN layers combine the hhop pairs to represent the topological structures implicitly. Figure 3: The detailed structure of interaction unit. The inputs are consist of node and edge representation. Two-level projections(node and edge) make raw features encoded into the same feature space. [item, time : today, user, time : today, item]. The other path is [item, time : ayearago, user, time : today, item]. Path Unit This unit focuses on the presenting of paths that consist of edges. However in practice, high-dimensional and sparse attribute vectors are common and some dimensions often have insufﬁcient samples, which may lead bad training. We propose a simple and effective way to deal with the problem. See Figure 4, assuming that the two users are same, whether the clicks happen in the same day can provide different information for link prediction of the two items. Intuitively item-user-itemcontributes more to the link existence between the two items. Denoting ras one of the paths between two target nodes i and j of a subgraph, which is as following where i= i and a is the length of path r. Further more, Ecan be divided into groups, where each group means a kind of edge attribute, such as time, trigger item, scenarios and so on. Each kind of attributes should be one hot format and Eis as following where b is the number of attribute groups and f∈ {0, 1}means attribute value, nis the dimension of this kind of edge attribute. Path unit proposes a group-wise inner product method to encode path attributes, After path unit, each path between two target nodes are encoded into a vector with value 1 or 0. In the pooling layer, sum pooling is adopted to further encode all the paths. Loss Function We formulate the link prediction problem as a subgraph classiﬁcation problem. The objective function is as follows. min −1#G(y(G)logM (G) where Datasets we conduct experiments on two industrial datasets and one released dataset. These industry datasets provide richer edge attributes over public datasets and follow the real user interest distribution. The framework is applied in real recommendation system called Xianyu which is the largest secondhand transaction platform in China. Due to missing edge attributes in most public graph-structured datasets, we use Epinions Datasetto build the attributed graph. XianyuRaw This dataset is derived from Xianyu platform with 2,399,900 users and 1,846,099 items and 20,283,822 click edges between them. Clicks often happen under different conditions, such as time difference, scenarios(feeds, search etc.), trigger items and queries. Time difference means the gap between today and the time behaviors happened. These attributes play an important role on user interest mining. We deﬁne user-click-item bipartite graph to predict the possibility of interactions. XianyuSparse XianyuSparse contains 92,853 users and 91,848 items and 171,124 click edges. XianyuSparse aims to construct a graph where paths between nodes are very sparse. All the samples from XianyuSparse have no more than 3 paths. The detailed statistical results are shown in Table 1. Table 1: Average path samples in Xianyu. http://www.trustlet.org/downloaded epinions.html Epinions this dataset contains 49,290 users who rated a total of 139,738 different items. The users and items can be seen as nodes in the graph. The number of rated user-item pairs is 664,824, which is a type of edge of the graph. The rating values are integers ranging from 1 to 5 who can be seen as the attributes of the edges. Another type of edges are 487,181 issued trust statements about users. We deﬁne U2U (i.e. recommending an user to another user, which is a classic problem in recommendation systems) as a link prediction problem in Epinions bipartite graph. Training and testing samples are extracted from this graph, and the average path num of positive samples is 2.8 and that of negative samples is 1.3. Baselines This section introduce some classic methods as the baselines, including heuristic method(Jaccard, AdamicAdar) and supervised learning algorithm(SEAL). Besides the above methods, we utilize edge attributes by concatenation as a baseline. • Jaccard: |N (x)∩N (y)|. Denote N (x) as the set of 1-hop neighbors of node x. Jaccard assumes a positive relationship between link and 1-hop neighbors. This ﬁrst-order method is shown as follows. • Adamic-Adar:ΣThis is a second-order method. It is widely used in industry due to its efﬁciency and effectiveness. The formula is listed as below. • SEAL: SEAL is the ﬁrst work which applies GNN to link prediction task (Zhang and Chen 2018). SEAL exploits graph structure information and nodes information, and it outperforms heuristic methods and latent feature methods. • GAS: GAS(Li et al. 2019) is proposed for link classiﬁcation. We ﬁnd that the proposed method about edge attributes can be applied in industry. They concatenate the edge attributes with neighbors to represent the topological structures. Experimental Settings Ofﬂine Evaluation Table 2 lists the performance of the proposed model and other methods, and AGCN obtains the best performance. Detailed results and analysis are listed as follows. Table 2: Ofﬂine AUC metrics in three datasets. Performance Comparison As mentioned above, the baseline methods can be divided into two categories, heuristic methods (Jaccard and Adamic-Adar) and supervised methods (SEAL and Concat). For heuristic methods, their link prediction function is often based on human assumptions, and the parameters of the model are manually deﬁned by humans. On the dataset XianyuRaw and XianyuSparse , given the complexity and sparseness of the data, the heuristic methods include too many human deﬁned factors, so the Jaccard and Adamic-Adar methods perform the worst. For supervised methods, the parameters of the model are learnable, so compared to heuristic methods, supervised methods have stronger learning capabilities and perform better. The supervised methods SEAL and Concat here are both GNN-based methods. When they model the information on the graph, they only exploit structure information and ignore the attributes of the edges in the graph. When the edges on the graph are very sparse, the structure of the graph becomes similar and difﬁcult to distinguish, so the performance of the model will decrease. Different from the above two methods, our proposed AGCN method can consider the interaction of edges and nodes at the same time, so as to better model the topological structure on the graph. As shown in Table 2, our AGCN can achieve far better results than the baseline methods on all three datasets. In summary, most industrial datasets can be represented in the form of graphs, but due to their distribution and sparseness, it is difﬁcult for humans to manually deﬁne appropriate rules and assumptions. Therefore, traditional heuristic methods cannot achieve good results in these dataset. Our proposed AGCN method can learn the various rules from the respective datasets, and exploit the information of the nodeedge pair and path. Therefore, it can play a greater role in the link prediction tasks based the above datasets. Figure 5: A 3-dimensional surface graph which represents the relationship between edges and trust rate in the Epinions dataset. Edge1 and edge2 means two kinds of edges in one path, like [user1, item, user2]. Impact of Edge Attributes We extract all the paths which length is equal to 2. In the Epinions bipartite graph, the path is set as user1-item-user2. Each path can be divided into two edge: edge1(user1-item) and edge2(user2-item), and the label of user1-user2 is assigned to this path. Figure 5 demonstrates that edge attributes are related with the links between users. The trust rate reﬂect the approximate capacity of models. It’s clear that this relationship needs to learn through nonlinear models and different edge combinations(i.e. paths) have different contributions to the prediction. However, Heuristic methods like common neighbors and GNN-based methods can not explicitly use path feature. In our work, we not only learn node representation, but add the path information into nodelevel and path-level representation. A/B Testing The proposed AGCN was deployed in two industry APPs: XianYu which is the largest second-hand transaction platform in China, and AliExpress which is an international e-commerce platform. In XianYu, two scenarios adopted AGCN method: Feeds in homepage and Similar Items in item detail page. Feeds is that users can browse endless items if they want, Similar Items is a scenario that some items will be recommended if the user clicks an item. In AliExpress, AGCN is deployed in Email Directing Marketing scenario and Push scenario. Email Directing Marketing and Push will send some items or messages to the user through email or phone message channel trying to attract them into AliExpress. In the four scenarios, we choose two kinds of nodes, user and item. The click action is the type of edge with many attributes. We predict the link of user-item(U2I) in Feeds and item-item(I2I) in Detail Similar Items. The difference between I2I and U2I is that I2I means ﬁnd similar items for a target item and it is treated as the link prediction problem. I2I is an effective method in industrial online matching stage. U2I aims to capture users’ interest. Training data is collected from historic data of Xianyu or AliExpress. The label of user-item pairs is set as 1 when the user clicked the items while the label of item pairs is set as 1 when similar items are recommended and clicked after the trigger item clicked. We evaluate the real-time performance through online A/B testing platform. Table 3: Online A/B testing performance of feeds and detail similar items. PU is path unit and IU means interaction unit. Online metrics is a comprehensive measure to evaluate the global online performance including pctr, pcvr, ipv etc. We deploy AGCN in Xianyu and AliExpress, and the daily online metrics are shown in Figure 6. The ﬁgure leads us to the conclusion that in four scenarios, AGCN achieves the best performance stably within one week and shows the superiority in the industrial recommendation systems. The speciﬁc improvement shows in Table 3. It’s clear from the Figure 6: Online performance of Adamic-Adar, SEAL and AGCN in four scenarios within one week: home feed and detail similar items in Xianyu, email direct marketing and push in AliExpress. table that AGCN with path unit outperforms 6% ∼ 10% online metrics over baseline method. AGCN with path unit and interaction unit also improve about 10% ∼ 15%. Therefore, it can be concluded that AGCN have more powerful modeling capabilities for high-dimensional sparse edge attributes. Figure 7: Online click-through rate with the same attributes of paths in the sparse graph data. In this graph, 70% path lengths are equal to 1. The same trigger in path lead to the largest click-through rate. Sparsity Analysis We further analyze the reason of the improvement. We collect the online log of the four scenarios, and we ﬁnd it suffers very high sparsity. The proportion of the two target item pairs whose path number equals to one is as high as 70% of the total. It means that most item pairs are almost the same from the view of graph structure, and they cannot be distinguished well only through heuristic methods. Further more, similar with Figure 5, we analyze the edge’s impact on the pairs with only one path, and Path unit method in AGCN is adopted here to make the impact be visualized. As shown in Figure 7 (The results have been normalized), the abscissa axis means the edges in the path happen in the same day, or in same trigger, or in same query, or in same scenario, and the vertical axis means click-through rate. As shown in Figure 7, we can see that edge attributes have different impacts on link prediction(click-through rate), and this demonstrates the effectiveness of Path Unit and is one of the key reasons why AGCN outperforms the baseline methods. In this paper, we propose an attributed Graph Convolution Network to incorporate edge attributes when apply graph neural network in the large-scale sparse graph-structured datasets. Our proposed framework includes three parts. Firstly, we propose a two-level projection to decompose the topological structures to node-edge pairs and project them into the same interaction feature space. Then, we apply the multi-layer GCN to combine the projected node-edge pairs to capture the topological structures. Finally, we formulate the link prediction task as a subgraph classiﬁcation problem. A large number of ofﬂine and online experiments prove that our proposed AGCN is far better than the baseline methods.
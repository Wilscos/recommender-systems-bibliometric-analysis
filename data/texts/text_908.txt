Instituto en Ciencias de la Computaci´on, CONICET - Universidad de Buenos Character iz ing texts based on their content is an important task in machine learning and natura l language processing. Latent Dirichlet Alloc ation (LDA) is a generative model for unsupervised topic decompo sition [18]. Documents are Instituto de C´alculo, CONICET- Universidad de Buenos Aires, Argentina Departamento de Computaci´on, Universidad de Buenos Aires, Argentina Abstract. Social networks play a fundamental role in propagation of information and news. Characterizing the content of the messages becomes vital for diﬀerent tasks, like breaking news detection, personalized message recommendation, fake users detection, information ﬂow characterization and others. However, Twitter posts are short and often less coherent than other t ext documents, which makes it challenging to apply text mining algorithms to these datasets eﬃciently. Tweet-pooling (aggregating tweets into longer documents) has been shown to improve automatic topic decomposition, but the performance achieved in this task varies depending on the pooling method. In this paper, we propose a new pooling scheme for topic modelling in Twitter, which groups tweets whose authors belong to the same community (group of users who mainly interact with each other but not with other groups) on a user interaction graph. We present a complete evaluation of this methodology, state of the art schemes and previous pooling mod els in terms of the cluster quality, document retrieval tasks performance and supervised machine learning classiﬁcation score. Results show that our Community polling metho d outperformed other method s on the majority of metrics in two heterogeneous datasets, while also reducing the running time. This is useful when dealing with big amounts of noisy and sh ort user-generated social media tex ts. Overall, our ﬁndings contribute to an improved methodology for identifying the latent topics in a Twitter dataset, without the need of modifying the basic machinery of a topic decomp osition model. Keywords: Topic modelling · Community detection · Twitter · Text mining · Text clustering represented as random mixtures over topics with a Dirichlet distribution, and each topic is characterized by a distribution over words. LDA has been wide ly used for topic modeling in diﬀerent areas such us medical science [19], political science [20], socia l computer science [22] and s oftware engineering [21]. In practice, content analysis on microblogging se rvices can be particularly challenging due to short and often vaguely coherent text [4,8]. Given the fact that Twitter has be come a platform whe re a tremendous amount of content is generated, shared and c onsumed, this problem become of interest for the scientiﬁc community. Hong presented an intuitive solution to this problem: tweet pooling (making longer document by aggreg ating multiple tweets) [3]. Tweetpooling has been shown to improve topic decomposition, but the perfor mance varies depending on the pooling method [3,4,8,6,2]. For example, Mehrotra et al. [4] extended this idea by pooling all tweets that mention a given hashtag. More pooling techniques are described in detail in Section 2. In this paper, we propose a novel pooling techniques based on community detection on g raphs. Previous works s tated that LDA has problems with sparse word co-occurrence matrix [8] and showed tha t users in a community tweet mostly about two or three particular topics [5]. Based on these issues, we propose a community pooling method which groups tweets whose authors belo ng to the same community on the retweet network, increasing the length of each document and reducing the total numbe r of documents. We compare the schemes in terms of clustering quality, document retrieval, machine learning classiﬁcation tasks and running time and we empirically s how that this new scheme improves the performance over previous methods in two heterogeneous Twitter datasets. The remainder of this work is organized as follows: In Section 2 we describe the diﬀerent pooling schemes for topic models and propo se a novel method. In Section 3 we des cribe the datasets that we used to test our method. In section 4, we deﬁne the experiments and evaluation metrics that we use to measure the performance of all pooling schemes. In section 5, we show the results of the experiments. Finally, we interpret the results in the Conclusions section. Microblog messages are very short texts. In particular Twitter posts are only 280 characters or shorter. Consequently, using each tweet as an individual do cument does not pres e nt adequate term co-occurence data within doc uments [4]. This induced the idea that aggregating similar tweets g ives place to larger documents and better LDA topic decomposition. In this section, we present a new pooling method for topic modeling based on community de tec tion and describe ﬁve other methods propos ed in the literature which were used for comparison. Tweet-pooling (Unpooled): The default approach which treats ea ch tweet as a single document. Author-Pooling: All tweets authored by a single user are aggregated in a single document. The number of documents is eq ual to the number of users. This pooling method outperforms the Unpooled scheme [3 ]. Hashtag pooling: In this scheme, a document co nsists of all tweets that mention a given hashtag. A tweet that contains multiple hashtags appears in several documents. Tweets witho ut hashtags are considered as individual documents. It has been shown that aggregating tweets this way outperforms the baseline scheme and user-pooling in so me metric s and for some datasets [4]. Conversation pooling: A document consists of all tweets in a conversation tree (i.e. a tweet, all the tweets written in reply to it, the replies to the replies, and so on). This schemes aggregate tweets form diﬀerent authors and with multiple hashtags that belong to one conver sation [6]. Network-based pooling: Twitter users are gro uped together if they reply or are mentioned in a tweet or in replies to a tweet. Each single document consists of all tweets of a group of users. In contr ast to Conversation pooling, only direct replies to an original tweet are considered since a conversation can shift its topic in time. This pooling scheme showed better results than the prev ious methods in most (not all) tasks and datasets [2]. Community pooling: In this novel scheme, a retweet graph is deﬁned in terms of G = (N, E), where users are the nodes N , and r etweets between them are edges E [23]. Since a user can retweet multiple times other user’s tweets, the edges are weighted. A community in a social network is a group of users who mainly interact with each other but not with other groups. We determine these communities using the Louvain method for community detection [15], which seeks to maximize modularity by using a greedy optimization algorithm. Therefore, each community clusters users by their interactions. In our novel pooling method, we group in o ne document all the tweets authore d by all users in each community. Therefore, there are as many documents as communities in the retweet network. Compared with the majority of the previous schemes, the number of words in a document is bigger and the number of documents is smaller, resulting in a denser word co-occurrence matrix, which is beneﬁcial to LDA algorithm [6]. In order to evaluate the schemes in diﬀerent scenarios and show the robustnes s of the methodology, we used two diverse datasets. Our experiments used data from Twitter Streaming API diverse datasets collecting tweets containing diﬀerent queries and each tweet was labeled by the query that retrieved it [2,3,4,17]. We removed all tweets that wer e retrieved by more tha n o ne query, so as to preserve uniqueness of the tweet labels, which was important for our a nalysis. Besides, we preposs essed the tweets by lower-casing and removing stop-words. All tweets are in English. The two datasets are: Generic Dataset: 11 5,359 tweets fro m December 15 2020, concerning a wide range of themes and collected using the following queries https://develop er.twitter.com/en (percentage of tweets retrieved by each query ): music (36.78%), family (23.94%), health (17.2 1%), business (14.90%), movies (4.70%), sports (2.44%). Event Dataset: 328,452 tweets from January 20 posed of tweets belonging to a particular event: US president Biden inauguration day. We used the fo llowing queries: Biden (69.45%), joebiden (21.75%), kamalaharris (4.74%), inauguration202 1 (4.04%). As there is no standard way for e valuating topic models, previous works evaluated the proposed pooling methods using diﬀerent metrics or tasks. In order to present a complete and exhaustive analysis, in this work we evaluate the schemes by the multiple metrics used in the diﬀerent previous works: topic clustering metrics (Purity and Normaliz e d Mutual Information) [6,1 0,4,9,2,11], a sup ervised machine learning clas siﬁcation task [7,3], a document retrieval task [6,17] and overall running time [6]. We brieﬂy explain each of them. Purity: We deﬁne each cluster as a topic and assign the tweets to their corres ponding mixture topic of highest pr obability (a quantity estimated with LDA). The purity of a cluster measures the fraction of tweets in a cluster having the assigned cluster query label [12]. Formally, let T LDA topic cluster i and Q the set of size |Q| of all Q A higher purity score reﬂects a better cluster repre sentation and a better LDA dec omposition. Normalized Mutual Information (NMI): NMI measures the cluster quality using information theory and it is formally deﬁned as follows: where I(·, ·) is the mutual information and H(·) is the entropy, a s deﬁned in [12]. NMI’s minimum and maximum va lue s are resp. 0 when labels and clusters are independent sets a nd 1 when cluster results exactly match all labels. Supervised machine learning classifying task: For the supervised machine learning task, we follow a basic machine learning classifying evaluation scheme [3]. We se parate the dataset in two (train and test), train a classiﬁer with the ﬁrst one and evaluate on the second one. The ﬁrst 80% of tweets (according to the time their were posted) were assigned to the train set and the other 20% to the test set. For this task, we train a naive Bayes classiﬁer [14] and reported F-Measure (F1 score) on the test set. , ..., T} be the set of size |T | of all Tand let Q = {Q, Q, ..., Q} be Document retrieval task: We also evaluate the topic decomposition of the diﬀerent pooling methods on a document retrieval task, using the same traintest split as the supervised clas siﬁer task. We use each tweet in the test set as a query and return the most similar tweets from the train set, ac cording to their LDA topic de c omposition. If the retrieved tweet has the same query label, we consider it relevant. More concretely, the methodology is as follows: we apply LDA using the diﬀerent pooling techniques on the train set, for each tweet in the test set calculate its topic decomposition, compute the cosine similarity be tween its topic decomposition and the topic decomposition of all tweets in the train set and retrieve the top 10 most similar train tweets. Then, we calculate the F1 score in o rder to know if the the categories of the retrieved tweets match the category of the test tweet. This task recrea tes a scenar io of recommending content based on previous tweets. Running time: The measured time (in seconds) includes tweet pooling (aggrega ting the tweets in diﬀerent documents) and the LDA topic modeling, which varies dep e nding on the total number of doc uments of each pooling methods. All experiments were run using the same hardware on a GTX 1080 NVIDIA graphic card. In this sec tion we s how and discuss the results of our evaluation. For each pooling scheme, we replicated the training workﬂow used in the literature and used an LDA model with 10 topics [4,2]. As we mentioned earlier, previous works showed that having denser co-occurence matrix (fewer documents with more words each) is be ne ﬁcial to LDA [6]. Table 1 reports the corpus characteristics and shows how our proposed model drastically re duced the number of documents and increased the number of words per document. Table 1. Document characteristics for diﬀerent pooling schemes and datasets. The results of the experiments can be seen in table 2. The best performances are marked in bold. The table shows that Community pooling has the be st performance of all examined methods in all metr ics for the Generic Dataset, and in all metrics except the retrieval task for the Event Datas et. Our methodology obtained the best cluster quality, having the highest Purity and NMI scores. Also our experiments showed that Community pooling outp erformed the previous s chemes in the supervised classiﬁcation task, indicating that this to pic decomposition was a good descriptor of the query label. Regarding the document retrieval task, this evaluation considers small changes in the topic decomposition of a tweet, since it us es the cosine similarity between this decomposition instead of only taking into account the most likely topic as we did before with the clustering metrics. The results indicate that Community pooling had the best performa nc e in a generic dataset where the topics of the labels (“family”, “health” or “business”) diﬀerentiate from each other. In contrast, we found that the Network-based method has a better score in this task for the event dataset, where the labels are closely related (“joebiden” a nd “kamalaharris”). Community pooling has better performa nc e on all tasks and datasets, with the only exception of the re trieval task on the event dataset. Finally, Community pooling had the best time performa nce among all pooling methods. From the fact that LDA time complexity depends on the number of documents [24] and Community poo ling considerably reduced the number of documents by pooling together in a single document all the tweets posted by users of each community (see table 1), it follows that our proposed method was faster than all other aggregation techniques (less tha n half the running time). We presented a new way of pooling tweets in order to improve the quality of LDA topic modeling on Twitter, without requiring any modiﬁcation of the underlying LDA alg orithm. The proposed Community pooling uses the users’ interaction information and aggregates into a sing le document all tweets of the users that belong to a community in the retweet network. Our method was evaluated a nd compared with multiple pooling techniques on diﬀerent task including clustering quality, a supervised classiﬁcatio n problem and a retrieval tasks. The results on two heterogeneous datasets indicate that the novel Community based pooling outperfo rms all other pooling strategies in all tasks and metrics, with the only exception of the retrieval task on the event dataset. Also, the running time analysis shows that Community pooling Table 2. Results for diﬀerent pooling schemes and datasets. generic event generic event generic event generic event generic event has a signiﬁcant improvement in time performance in comparison with previous pooling methods, due to its capacity of reducing the total number of documents. Future work includes further testing with other datasets from diﬀerent social media.
simerjot.kaur@jpmchase.comivan.brugere@jpmchase.com armineh.nourbakhsh@jpmchase.comsameena.shah@jpmchase.com Matching companies and investors is usually considered a highly specialized decision making process. Building an AI agent that can automate such recommendation process can signicantly help reduce costs, and eliminate human biases and errors. However, limited sample size of nancial data-sets and the need for not only good recommendations, but also explaining why a particular recommendation is being made, makes this a challenging problem. In this work we propose a representation learning based recommendation engine that works extremely well with small datasets and demonstrate how it can be coupled with a parameterized explanation generation engine to build an explainable recommendation system for investor-company matching. We compare the performance of our system with human generated recommendations and demonstrate the ability of our algorithm to perform extremely well on this task. We also highlight how explainability helps with real-life adoption of our system. deep learning, recommendation systems, investor-company matching, explainable AI ACM Reference Format: Simerjot Kaur, Ivan Brugere, Andrea Stefanucci, Armineh Nourbakhsh, Sameena Shah, and Manuela Veloso. 2021. Parameterized Explanations for Investor / Company Matching. In ICAIF, Workshop on Explainable AI in Finance (XAIF). ACM, New York, NY, USA, 9 pages. Matching companies to investors, and investors to companies has long been considered a highly specialized human cognitive decision making process. Such match-making exercise is extremely benecial to both investors and startups/companies who are looking for funding. On one end, it helps investors identify which companies to invest in, and on the other end, it helps provide guidance to startup/companies on which investors to approach when they are looking to raise funding. Moreover, in nancial organizations, this match-making can have direct nancial consequences, for both investors and companies. Hence the ability to explain, why a particular investment opportunity is benecial to investors and why a startup should approach a particular investor for funding, becomes critical. However, matching investor and companies and providing explanations is typically very expensive as it involves manual curation of data about companies and investors, analyzing their historical track records, performance, and preferences, hence becoming a tedious task involving signicant amounts of manual labour. Further, it brings about human errors and the results are often dependent on the individual experience and expertise of humans involved in this process. To overcome the above limitations of high cost, and need for a human expert with years of experience, we explore the possibility of matching companies and investors in an automated manner by building a deep-learning based investor-company matching recommendation engine. However, unlike most e-commerce recommendation engines, such as netix movie recommendations, recommendation systems for nancial applications need to be trained on extremely small and limited datasets, and they should not only provide good recommendations, but must also be capable of providing explanations as to why a particular recommendation is being made. This is critical to ensure real-life adoption of such models. Infact, the limited size of dataset and lack of explainability of current deep learning models poses a serious challenge to adoption within the nancial domain. In this work we propose a novel algorithm that leverages recent advances in representation learning to build a recommendation engine under small data-sets, and combines it with a parameterized explanation generation scheme to build an explainable investor-company matching system. Formally, gure 1 above summarizes our problem. Given a limited sample-set of investors𝐴, 𝐵...𝑁, and companies𝐽, 𝐾, ...𝑍, together with investor/company attributes and their historical interactions, can we recommend new links, i.e. recommend new companies to investors, and investors to companies while also providing an explanation for why a particular recommendation has been made? . Our proposed approach consists of rst building a high dimensional vector representation for each investor and company using available input data such as their description, their past investments etc. and subsequently using these vector representations as inputs to our hybrid content and collaborative model, to generate similarity scores between investors and companies which are used for making recommendations. Further, we utilize the outputs generated by our content and collaborative based model to extract parameters for a parameterized template based explanatory engine. We demonstrate that our algorithm can perform extremely well on investor-company matching task while also alleviating human biases and errors. Further, we also highlight how our parameterized explanation algorithm helps improve adoption of our algorithm within nancial institutions. We also veried that our proposed approach is fair and it is not biased based on management team’s personal prole or location of company/investor. The rest of the paper is outlined as follows. Section 2 describes related work and highlights the unique challenges that come about in building an investor-company matching recommendation engine within nancial domain, section 3 describes the details of our dataset and section 4 provides details of our representation learning approach and describes our proposed hybrid recommendation system in more details. Section 5 provide the details of our parameterized explanatory algorithm, and demonstrates the ability of our approach to algorithmically generate explanations for why a particular company-investor pair could be linked. Finally, section 6 concludes our work and lays out foundation for future work in this area. Various versions of deep learning based recommendation systems have been developed by major organizations such as Facebook [5], Netix [3], Amazon [4], etc. While many of these e-commerce based recommendation system algorithms have achieved remarkable success, they are almost always built using some form of supervised learning approaches. This is in-part due to the easy availability of labeled data. For example, it is relatively easy to gather movie/item ratings from users, allowing them to use supervised learning approaches. However, such labeled datasets do not exist when we are trying to match companies and investors. In-fact, the only interaction information amongst the investors and companies that we have access to is a binary link informing whether an investor𝑖has invested in a company𝑗or not. We do not have any information on how much an investor likes or dislikes a company. Even if they liked a company, they might still end up not investing in it because of other factors. Hence, unlike many e-commerce recommendation systems our system is unsupervised in nature, making it dicult to directly apply existing methods. Further, as explained in the introduction section, unlike e-commerce application, adoption in nancial applications is heavily dependent on our ability to provide explanations for why we are recommending an investor to a company or vice-versa. Such explanations are rather limited in many existing deep learning based approaches. Additionally, while there has been some work in the literature on trying to match investors for startups [9], [10], [8], [6], [11], almost all these approaches are largely based on statistical techniques and do not leverage recent advances in deep learning, which has been the driver of improvement in recommendation engines over the past few years. Further, most of this work also overlooks the essential explainability requirements that are essential for nancial applications. In-fact, to the best of our knowledge our work here is the rst endto-end investor-company matching system that leverages advances in deep learning and unsupervised learning while also coupling it with a parameterized explanation generation engine, helping to improve adoption of deep learning into nancial applications. This section describes the details for our dataset. Our model has been developed and tested using licensed data. Essentially, the dataset used contains various details of startup companies such as a brief description about what the company does, its industry focus, information about its previous deals such as the series raised, and amount raised in that series etc. Similarly, for investors we have certain characteristic information about the investors such as their funding style and industry preference. Finally, we also have a historical binary investor-company link matrix. We further describe the features we use from the dataset in more details below : • Company Data: The company features include its description, industry focus, year founded, location, etc. For instance, some of the information on company ABC Laneinclude: –Description: Operator of a consumer nance intended to help consumers have access to fair and clear credit. The company leverages advanced technology, data analytics, and machine learning to provide a dignied customer experience to people who are working hard to build or rebuild their credit and have terms that are better and easier to understand than most of the alternatives available to people with less-than-pristine credit or limited credit history, enabling consumers to access credit. –Industry Focus: Financial Services/Other Financial Services/Consumer Finance/Financial Software – Year Founded: 2018 – Location: Atlanta, Georgia, United States • Deals: The details regarding the capital raises done by the company include the type of series rounds that the company has gone through, when were the deals made, the amount of capital raised in each round, etc. For instance, some of the information on the deals done by the company ABC Lane include: – Types of Series Rounds: Seed round, Series A round – Amount Raised: ~$50 million – Deal Dates: year 2018 and 2019 • Investor Data: The investor features has been derived from the dataset including its funding preferences, industry preferences, location, etc. For instance, features on one of the investors The ABC Group of company ABC Lane include: –Funding Style: Mostly involved in initial stage of funding, specically, invested 27%, 23% and 20% of the time in Seed, Series A and Series B rounds respectively and the remaining in later stages of capital raise. –Industry Preferences: Mostly involved in healthcare and consumer products and services, specically, invested 56% and 20% of the time in Healthcare and Consumer Products and Services respectively and the remaining in other sectors like Information Technology, Business Products and Services, etc. – Location: New York, NY, United States • Historical Investor-Company Link Matrix: This binary link matrix contains historical information on whether an investor 𝑖 has invested in a company 𝑗 or not. In order to test the investor-company link matching algorithm, we split the historical investor-company link matrix into 70% training and 30% test set. Given that our model is unsupervised in nature, we create two types of test sets : • Test Set containing Historical Links: This set contains a list of investor and company pairs for which there is historical information that a link exist between the investors and companies i.e. the investors have invested in the companies historically. In this case, we would expect an ideal model to predict 100% links between the investors and companies. • Test Set without Historical Links: This set contains a set of randomly chosen pair of investor and companies for which there is information that there does not exist a link between the investors and companies i.e. the investors have not invested in these companies in the past. In this case, we expect the model to predict NO links between the investors and companies for majority of the time and predict that link might exist for some percentage of the dataset which would then become our recommendations to the investors or companies. This section describes our algorithm used to match the companies to investors and vice versa based on each their historical track records and preferences. Subsection 4.2 demonstrates the performance of the matching algorithm on our two test sets described in section 3 above. Finally, subsection 4.3 details the results obtained during human analysis, during which some of the top recommendations produced by the algorithm were given to the subject matter experts for review. Figure 2 describes our proposed approach to solve the investorcompany matching problem, i.e., ’Should there be a link between an Investor i and Company j?’ . Our proposed approach consists of two sequential steps. In the rst step we learn a high dimensional vector representation for each company and investor from the given unstructured text that denes the attributes/features of the company/investors. In the second step we use these vector representations to calculate the similarity between companies and investors using a hybrid approach that calculates a weighted average of similarity scores obtained from content based and collaborative based approaches. We describe each of the parts in more details in the following sections. 4.1.1 Representation Learning. As discussed in section 3 each investor and company is characterized by multiple attributes, many of which are sequences of unstructured text. To enable us to easily perform comparisons and estimate how close/far various companies and investors are, we rst learn a high-dimensional vector representation for each company and investor. The key guiding principle behind our structured high dimensional vector representation is that similar sentences/words, or phrases within a similar contexts should map close to each other in a high-dimensional space, and sentences/words or phrases that are very dierent should be far away from each other. Figure 3 depicts in more detail how dierent kinds of unstructured text are encoded in a high dimensional distributed vector representation to generate one nal representation for each company/investor. More specically, • Company Representation: We represent a company by its funding status, description, industry focus, and location. The methods used to build a vector representation for each attribute are as follows: –Funding Status: This attribute describes in which types of round of raises the company has been involved in. This feature is being represented as a Multi-Label Binarizer. For instance, if a company has only been involved in Seed and Series A rounds in the set of Seed Round, Series A, Series B, Series C, this feature will be represented as [1,1,0,0]. –Description: This attribute describes the business that the company is involved in. Since the position of the words in the description is important, pretrained transformer with self attention [7] based architecture has been leveraged to encode the description into a 768-dimensional dense vector representation. Figure 3: Company/Investor Representation: Transformer and BERT architecture graphics are excerpted from [7] and [1] –Industry Focus: This attribute describes the type of industry the company operates in. Since the position of words is not crucial, pretrained BERT [1] based architecture has been used to create 768-dimensional vector embeddings. –Location: This attribute describes the city, state and country the company is located in. Similar to industry focus attribute, pretrained BERT based architecture has been used to create 768-dimensional vector embeddings. Finally, the vector representations of the above attributes are concatenated together to form a full vector representation for the company. • Investor Representation: The attributes that have been used to represent a investor are its funding style, industry preference and location. The methods used to build a vector representation for each attribute are as follows: –Funding Style: This attribute describes the amount of deals that the investor has done in each type of round raise. For instance, if an investor has invested 80, 10 and 10 times in Seed, Series A and Series B rounds in the set of Seed Round, Series A, Series B, Series C, then this feature will be represented as [0.8, 0.1, 0.1, 0]. –Industry Preference: This attribute describes the amount of deals that the investor has done in various industry sectors. In order to build the representation for this attribute, as described in company representation, the industry sectors are rst encoded using pretrained BERT based architecture and then the weighted average of these representations are obtained with weights corresponding to number of deals that the investor has done in each industry sector. –Location: This attribute describes the city, state and country the investor is located in. Similar to company representation, pretrained BERT based architecture has been used to create 768-dimensional vector embeddings. Finally, the vector representations of the above attributes are concatenated together to form a full vector representation for the investor. 4.1.2 Similarity Score Estimation. Given the high dimensional distributed representations for both companies and investors, we can easily estimate the closeness or remoteness between pairs of companies and/or investors following a hybrid approach, i.e. a weighted average of content and collaborative based similarity scores. Specically, our proposed similarity estimation method consists of following key steps : (A) Content-based Model: Content-based approach uses the attributes of the companies to recommend similar companies to an investor. It recommends a company to an investor based on its existing portfolio of companies. This method relies only on company features and not on investor’s preferences. Formally, for a company 𝑗and investor𝑖, we are trying to estimate which company and with what score𝑗is closest to within the portfolio of companies in which 𝑖 has invested. (B) Collaborative Based Model: Collaborative-based approach generates recommendations by deriving investor’s historical preferences on companies. It recommends investors to a company based on its existing portfolio of investors. This method relies only on the historical interaction between the investors and companies as well as historical preferences of the investors and not on company features. Formally, for an investor𝑖and company𝑗, we need to determine which investor and with what score𝑖is closest to within the portfolio of 𝑗’s previous investors. It may be noted that since the investor-company interaction matrix is very sparse, using only one of the above similarity scores leads to performance degradation. To overcome this we obtain the nal score as a weighted average score from the results of A and B above. Specically, combining both the models helps overcome the performance degradation caused by the sparse historical interaction between the investors and companies, and it also helps alleviate cold-start problems when investors have no or very few interactions or for new companies who have not raised any funding round or interacted with any investors. The Algorithm 1 describes our overall matching algorithm in a step-by-step manner. This section discusses the performance of the our proposed matching algorithm on a dataset containing 40,000 historical investorcompany links. As discussed in section 3, 70% of the historical investor-company links has been used as part of the training set and remaining 30% as the test set. Also, it may be noted that the results shown are based on the threshold set at 0.75, i.e. any time the similarity score is greater than 0.75 we consider that a link exists between the said company and investor pair, and if similarity score is less than 0.75, no link exists. Figure 4 shows the histogram of the nal similarity score obtained on our test set for which we know the ground-truth is that a link between said company and investor pair exists. As expected, in this case the histogram of similarity scores is skewed to the right and the model correctly predicts that there should be links between the investors and companies for 89% of the test set. Figure 5 shows a similar similarity-score histogram for a test set that contains randomly chosen company and investor pairs, and Algorithm 1 Similarity Score Algorithm the number of investors in the dataset is the number of companies in the dataset pany,𝐶𝐶,=””, closest company business,𝐶𝐶𝐵,=”” collaborative based score,𝐶𝐵,=0, closest investor,𝐶𝐼,=”” nal score,𝐹𝑆,=0, collaborative investor interaction weight,𝑤, collaborative investor feature weight,𝑤collaborative score threshold,𝐶𝐵𝑡ℎ𝑟𝑒𝑠ℎ, collaborative score weight,𝑤, content score weight, 𝑤. Obtain all the companies in which investor ‘𝑖’ has invested in from the training set, say, 𝑐𝑜𝑚𝑝 ∈ [1, 2, . . . , 𝑘]. Obtain𝑐𝑜𝑚𝑝𝑣𝑒𝑐 =vector representation for𝑐𝑜𝑚𝑝and 𝑗𝑣𝑒𝑐 = vector representation for 𝑗 . ‘𝑠𝑝𝑎𝑟𝑠𝑒’ interactive investor-company link matrix. (𝑢contains all investors with respect to their latent features) Obtain all the previous investors of company ‘𝑗’ from the training set, say, 𝑖𝑛𝑣 ∈ [1, 2, . . . , 𝑙]. Obtain𝑖𝑛𝑣𝑣𝑒𝑐 =vector representation for𝑖𝑛𝑣and𝑖𝑣𝑒𝑐 = vector representation for 𝑖. Calculate cosine similarity,𝑠𝑖𝑚1(𝑖, 𝑖𝑛𝑣) = Calculate cosine similarity,𝑠𝑖𝑚2(𝑖, 𝑖𝑛𝑣) = for which we know the ground truth that there is no historical link between the said company-investor pair. As expected, the histogram is skewed to the left and the model predicts that there should be links between the investors and companies only for 24% of the test set. It may be noted that even an ideal model should have a small percentage of investor/company pairs for which it predicts that a link should exists, because these become the model’s recommendations to investors/companies. Further, in order to test the stability of the matching algorithm, 10 independent samples were obtained from dataset, each containing 1000 investors. Figure 6 shows the performance of the model over these sampled dataset. The column “Final Score Accuracy w/Links” estimates the accuracy in correctly predicting a link when the ground-truth link exists. Also, the column, “Final score Accuracy w/o links” measures the percentage of companies for which we get a score above our threshold when we know that underlying data has no-links, i.e. historically no link existed between the said company and investor pair. We may re-iterate that these few percentage cases actually constitute the models recommendations, and while this percentage should be low, this should not be very close to zero, else we are not recommending anything. As can be observed the model has a good stability with a mean of 80% performance and standard deviation of only 6% for the test sets where there are existing historical links between the investors and companies. In case of the test set containing randomly chosen companies for which there is information that links do not exist between the investors and companies, the model is stable with a mean of 17% performance and standard deviation of only 6%. To further analyze the standard deviation of 6%, an exponential graph was constructed to observe how the performance of the model varies over these 10 independent samples with respect to the mean number of companies per investor. As can be observed in Figure 7, the more the mean number of companies per investor, the better the performance of the model is i.e. the more historical track records/preferences and investor-company interaction links we have, the better the model recommendations are. Finally, in order to test the importance of the company features that are being used, we tested the model by taking one feature at a time. We also analyzed the model over a pair of features as well Figure 7: Stability Graph over 10 independent samples as triplets of features. The results are based on the same dataset of 40,000 historical investor-company links with a threshold set at 0.75. As can be observed in Table 1, features B and D of the company are the key driving features of the model. Also, individually, feature B brings noise in the results and feature D is very hard on the results. The combination of these two features brings the model performance very close to the performance of the model while using all the company features. Finally, we also veried and conrmed that the investor-company matching algorithm is fair and is not biased based on management team’s personal prole or location of company/investor. In order to analyze the relevance of the recommendations produced by the model, we provided top 25 investor recommendations for four companiesincluding Software, LLC, Technology, LLC, Product, LLC and Marine, LLC to the subject matter experts (SMEs) for review. Out of these 100 investor-company matching pairs, 65 pairs were conrmed as relevant by the SMEs. Table 2 shows an example of the investor recommendation for each of the four companies for which the SMEs/humans gave a high score with their rationale. For 35 pairs, the SMEs/humans gave a low score and thought computer generated recommendations may not be relevant. Table 3 shows an example of the investor recommendation for each of the four companies for which the SMEs/humans gave a low score along with their rationale for low score. Subsequently, we used our parameterized explanatory algorithm (described in next section) to algorithmically generate explanations, as to why the particular recommendation had been made. Following the explanations, the subject matter experts were convinced that the recommendations are indeed correct, and assigning them a low human score was actually due to limited breadth of human knowledge. This further illustrates the importance of mechanisms that enable explainability. As mentioned in Section 1, the ability to explain why we make a particular recommendation is an essential requirement for our model, and is critical to ensure adoption of our model in real-life. The following sections describe the algorithm used to generate these explanations and provides some sample explanation examples produced using the same. It may be noted that the data required for generating these algorithmic explanations is directly taken from the intermediate results being generated by our matching algorithm. Algorithm 2 describes our parameterized explanatory algorithm in a step-by-step manner. In our proposed algorithm, we have a predened written template, and the parameters of the template are selected and lled using the intermediary results obtained from the matching algorithm. The explanation generated to explain the recommendation score between the investor𝑖and company𝑗is three-pronged: Algorithm 2 Parameterized Explanatory Algorithm the number of investors in the dataset is the number of companies in the dataset The investor ‘[param a]’ is similar to ‘[param b]’ ’s previous investor ‘[param c]’ with score of ‘[param d]’ based on their industry focus preferences. Also, the investor ‘[param a]’ has invested in a company named ‘[param e]’ with a match score of ‘[param f]’ with ‘[param b]’ . ‘[param e]’ also ‘[param g]’ similar to ‘[param b]’ . Follow Steps 5-14 in Algorithm 1 and obtain content based score,𝐶𝐵𝑆, closest company,𝐶𝐶, and closest company business, 𝐶𝐶𝐵 Follow Steps 15-28 in Algorithm 1 and obtain collaborative based score, 𝐶𝐵, and closest investor, 𝐶𝐼 • Investor-Investor Similarity:This part claries that the investor𝑖is most similar to which of the previous investors of company 𝑗 and with how much score. • Company-Company Similarity:This part claries that the company𝑗is most similar to which of the investor𝑖’s portfolio of existing invested companies and with how much score. • Company Description:Finally, this part shows the key business area that the company, which is the most similar to company𝑗(as obtained in the above part), works on. This company description gives a more detailed explanation at the feature level as to why we are recommending a link between the investor 𝑖 and company 𝑗. Table 4shows the same examples as were shown in Table 3 along with the explanations generated. The column ’Algo Explainability Rationale’ shows the explanations that were generated algorithmically with parameters lled (highlighted as underlined text in Table 4) into the predened explanation template. For instance, in order to explain the high recommendation score between the company 𝑆𝑜 𝑓 𝑡𝑤𝑎𝑟𝑒, 𝐿𝐿𝐶and investor𝑆𝑜 𝑓 𝑡𝑤𝑎𝑟𝑒 𝑃𝑎𝑟𝑡𝑛𝑒𝑟𝑠, we selected and lled the three-tonged explanations as follows: (a) Investor-Investor Similarity: This part claries that investor𝑆𝑜 𝑓 𝑡𝑤𝑎𝑟𝑒 𝑃𝑎𝑟𝑡𝑛𝑒𝑟𝑠is similar to the the company𝑆𝑜 𝑓 𝑡𝑤𝑎𝑟𝑒, 𝐿𝐿𝐶’s previous investor 𝑆𝑜 𝑓 𝑡𝑤𝑎𝑟𝑒 𝐶𝑎𝑝𝑖𝑡𝑎𝑙with a score of 0.92. (b) Company-Company Similarity: This part claries that the company𝑆𝑜 𝑓 𝑡𝑤𝑎𝑟𝑒, 𝐿𝐿𝐶is most similar to the company𝑃𝑙𝑎𝑡 𝑓 𝑜𝑟𝑚, 𝐿𝐿𝐶with a score of 0.93. 𝑃𝑙𝑎𝑡 𝑓 𝑜𝑟𝑚, 𝐿𝐿𝐶is one of the companies in which𝑆𝑜 𝑓 𝑡𝑤𝑎𝑟𝑒 𝑃𝑎𝑟𝑡𝑛𝑒𝑟𝑠 has previously invested in. (c) Company Description: Finally, this part claries that both𝑆𝑜 𝑓 𝑡𝑤𝑎𝑟𝑒, 𝐿𝐿𝐶and𝑃𝑙𝑎𝑡 𝑓 𝑜𝑟𝑚, 𝐿𝐿𝐶develop mobility technology platforms. The investor-matching pairs that were provided to the subject matter experts (SMEs) for review, as detailed in the Human Analysis section, were again submitted with these explanations for review. The SMEs accepted the explanations and were convinced that all the recommendations that were provided by the algorithm are relevant. In this paper, we proposed a novel representation learning based recommendation system that works very well with extremely small datasets. We also highlighted the importance of explainability in recommendation engines, and demonstrated how we can couple recommendation engine with a parameterized explanation generation algorithm to build an explainable recommendation engine. We demonstrated the ability of our algorithm to work very well, even with limited dataset, on company-investor matching problem, a problem which has long been considered a highly specialized human cognitive decision making process. Further, we also demonstrated how explainable recommendations helped with real-life adoption of our system. We also veried and conrmed that the algorithm is fair and is not biased based on management team’s personal prole or location of company/investor. There are various avenue to further improve and build upon this work. For instance, the similarity estimation between companies and investors can be improved by using graph-based approaches. Further, we could further improve company/investor vector representations by leveraging more features such as company/investor valuations, news articles, etc. Additionally, our parameterized explanatory engine can be further improved by doing more a granular analysis and provide explanations regarding which exactly which feature impacts the recommendation score the most. Disclaimer. This paper was prepared for informational purposes by the Articial Intelligence Research group of JPMorgan Chase & Co˙and its aliates (“JP Morgan”), and is not a product of the Research Department of JP Morgan. JP Morgan makes no representation and warranty whatsoever and disclaims all liability, for the completeness, accuracy or reliability of the information contained herein. This document is not intended as investment research or investment advice, or a recommendation, oer or solicitation for the purchase or sale of any security, nancial instrument, nancial product or service, or to be used in any way for evaluating the merits of participating in any transaction, and shall not constitute a solicitation under any jurisdiction or to any person, if such solicitation under such jurisdiction or to such person would be unlawful. © 2021 JPMorgan Chase & Co. All rights reserved.
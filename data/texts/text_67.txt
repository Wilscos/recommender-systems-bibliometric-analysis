<title>Risk-Aware Fine-Grained Access Control in Cyber-Physical Contexts</title> <title>JINXIN LIU, University of Ottawa, Canada MURAT SIMSEK, University of Ottawa, Canada BURAK KANTARCI, University of Ottawa, Canada MELIKE EROL-KANTARCI, University of Ottawa, Canada ANDREW MALTON, BlackBerry Ltd., Canada ANDREW WALENSTEIN, BlackBerry Ltd., Canada</title> Whether access should be granted to a resource may depend upon the context in which the access is attempted, including the cyberphysical context. For example, a physician may have a legitimate need to access a patient’s private health information (PHI) on a mobile display screen while in a private consultation room, but it might be important to lock out the access if the physician wheels the display into the hallway, or if a dierent patient is moved into the shared room. Failure to lock out could lead to leaking PHI to other people who the patient has not consented to allow access to. In such cases the identity of the accessing physician has not changed, nor has the physician’s role changed with respect to the patient. The concern is thus unrelated to authentication and static user roles. Instead, it is an issue of context-dependent or context-sensitive authorization. Recently, context-aware security approaches have gained signicant attention, and there have been several studies around inferring and understanding contexts. But even state-of-the-art access control mechanisms for cyber-physical systems may lack the generality or exibility desired to conne access authorization to dynamic cyberphysical context, or they otherwise burden the access policy administrators with having to tediously and continuously dene every context, set the appropriate access restrictions, and understand the resulting policy well enough to assess the residual risks left by the policy. For example, methods for dening geofences may be used to dene physical contexts for dening context-dependent access policy, but many geofencing access policies utilize geofences only for authorization decisions, and physical location is one contextual factor aecting authorization risks. For example, a phone may lock when moved out of its ”home” geofence, but unlocking restores all prior access, it is only used for context-dependent authentication. A general framework and approach is required for eective context-dependent authorization policy management. Core concerns in any such context-dependent authorization regime is dening the contexts in which authorization decisions dier, identifying and quantifying risks for those contexts, and then using the derived risk model to create appropriate access control decisions. Given that contexts may change over time, an additional burden is tracking these changing contexts over time. A problem that is not yet well addressed are eective methods for automatically helping dene and maintain context-dependent authorization policies, i.e., inferring the contexts, risk models, and access decision boundaries. This paper introduces a framework named Risk-Aware Smart Access (RASA) to learn authentication policies from examples of routine access. RASA begins with the observation that if, in normal practice, responsible actors access information they have ordinary access to only in those contexts in which the need access, and that they take care to guard against known risks. In such cases, even if an existing access control policy is not context-sensitive, responsible actors eectively ll in the missing contextual access conditions through their choices and actions, and these can be used to infer a baseline context-dependent access control policy. In a sense, they can program the context-dependent access conditions by demonstration. RASA uses coupling of access actions to identify patterns of access, clusters the actions, associates these coupling-dened features to risk scores, and then denes access boundaries based simply on these risk scores. To the best of our knowledge, no prior work exists for similar automated policy inference based on mapping inferred contexts onto risk levels. The paper evaluates the general promise of the approach in a simulated in-person healthcare environment. This use context is cyberphysical, and one where ensuring strong access boundaries–even for fully authenticated users–are critical for protecting sensitive PHI. Nearly 90% of participants, in a health care survey reported by the Ponemon Institute, have been aected by data leakage in the past three years [ 22 ]. Furthermore, inappropriate use of devices that handle sensitive document by internal employees has led to the breach of 4.5M patient records in 2015 [ 14 ]. Intelligent approaches to such security may be increasingly important [ 30 ], and not all risks are due to remote attackers–shoulder surng in a shared patient room, for example. The context-dependent appropriateness of PHI access serves as a suitable test of cyberphysical context dependencies. The paper is organized as follows. In Section 2, the related work and motivation are presented. In Section 3, we present our proposed framework in detail. Section 4 presents the numerical results of three dierent coupling mechanisms and clustering algorithms along with comprehensive discussions. Finally Section 5 concludes the paper and provides future directions. authentication, implicit authentication alone cannot solve context-dependent risks that may result in undesired access. Access control models such as Mandatory Access Control (MAC), Discretionary Access Control (DAC), RoleBased Access Control (RBAC), and Attribute-Based Access Control (ABAC) have been investigated by the researchers in this domain [ 11 ]. MAC oers operating system-constrained access control to manage process/thread operating les, network ports, memories, and devices. MAC is widely deployed on Linux, Windows, and databases. Rossi et al. [ 37 ] propose a framework that allows developers to establish ne-grained ad-hoc MAC strategies for applications, protecting the system from misbehavior (caused by bugs or compromised by attackers) of root privileged apps. Even though MAC provides high-level protection, it requires users to request permission for every resource. When compared to MAC, DAC is more exible by allowing users to grant access to other users. Khan et al. [ 25 ] apply DAC combined with RBAC to access patient les dynamically. RBAC, unlike MAC and DAC, does not assign access to specic users but to pre-dened roles. By deploying RBAC, IT administration can operate more eciently since RBAC can add or switch roles to cope with personnel changes. Cruz et al. [ propose RBAC-SC, which utilizes RBAC and smart contracts to implement trans-organizational roles. Unlike static access control strategies, ABAC dynamically determines permissions according to a set of attributes such as user, resource, object, environment attributes. ABAC can achieve various levels of access control according to dierent requirements and environments in spite of its overhead. Ding et al. [ 10 ] propose combining ABAC and blockchain to cope with the massive connectivity of IoT so to avoid heavy role-engineering for various devices. As listed in Table 1, compared to the conventional access control schemes, this paper focuses on implicit access control, which can identify the user-object association by mining historical data, and recognize risky actions according to the current context. assessment scheme that uses Data Flow Diagrams (DFDs) to model the ows of individual data and to recognize the components employed to process, store, and transmit data. Organizations can identify the potential/implicit incidences according to the associated components. Compared with asset-oriented and process-oriented approaches, the proposed approach can enhance the risk assessment accuracy by avoiding underestimating or neglecting the risks to sensitive individual data. In [ 23 ], Khambhammettu et al. propose a framework containing four threat assessment methods for subject-object accesses. Via assigning dierent weights to the sensitivity score of data/objects and the trustworthiness score of subjects, the proposed framework is exible enough to satisfy the various preference of organizations. Wang et al. [ 40 ] present a new access control model that quanties the risk of privacy violation in a statistical approach and further detects the physicians/users who over-access or misuse patients’ private data. Atlam et al. [ ] propose a risk estimation model that combines a new fuzzy logic algorithm and a set of rule-based policies to perform access control in IoT systems. To generate accurate and realistic risk values for each access request, the proposed fuzzy logic system, which involves twenty experts’ eort, converts experts’ qualitative expression into numeric values and oers a dynamic and context-aware access control by leveraging the contextual features such as resource sensitivity, action severity, and risk history. The literature review indicates a gap remains between continuous/implicit authentication/access control and risk-awareness, particularly in cyberphysical environments where actions do not only appear in cyberspace but also stem from physical behaviors, interactions and roles. This section presents the system overview along with the cyber-physical action logs in a medical emergency room. We introduce the data pre-processing steps, feature extraction and risk inference methods in detail. In our framework, actions are transformed into events which include contextual information that can be recognized through coupling mechanisms. Coupling denes interaction patterns between the objects, which can be recognized through clustering algorithms, that use couplings as the input features. Each coupling feature is associated to a risk level. Upon obtaining the clusters, an aggregate value of the associated risk levels of the features of all data points (i.e. actions) in a cluster is calculated as the risk value of that cluster, (i.e. label of cluster). Note that couplings can be formulated based on time, frequency or a combination of time and frequency. The bold letters in the notation represent collections/sets of factors ( 𝑷𝒑𝒍 𝑫𝒆𝒗 𝑫𝒐𝒄 , and 𝑳𝒐𝒄 ), and lower case letters stand for the elements of the specic collection, e.g. 𝑨 = {𝑎 , ..., 𝑎 , ..} and denote any pair of the four collections/sets. and indicate coupling and risk respectively and can be denoted in terms of Frequency ( 𝐹𝑟𝑒𝑞 and/or Duration (𝐷𝑢𝑟). 𝐹 denotes the 𝑛 coupling feature extracted (from the 𝑛 event (𝐸 )). More detailed explanations are listed in Table.3. labeled according to cluster risk value. Furthermore, the risk of the entire action log can be determined by the same calculation to provide the general risk information to the security experts to raise alarm. In a privacy-sensitive environment such as a clinical setting, the inferred risk context can be utilized to dene a rule-based access control policy managing access and dening risk-based system actions based on calculated risk. Given a risk level of a cluster of actions or events, a policy can be dened wherein access decisions are made per read attempt by calculating the overall risk within the current context. RASA estimates overall risk from the weighted sum of all per-feature risk values. Rather than assigning equal weights to the features, the policy author may adjust the weights of these coupling features based on direct inputs from subject matter experts. For instance, when patient documents are the assets considered, the couplings related to documents may be assigned greater weight factors compared to other couplings that do not consider documents. Furthermore, the policy may permit or deny read actions by tuning a threshold value for the risk factor. Although such policy denitions require a threshold to be tuned, the decisions are over clusters rather than individual actions, which is more scalable, stable, and explainable for policy analysts and users alike. In the conclusion part, we elaborate on AI outcomes versus policy decisions in order to analyze the eciency of the AI results. In the following sections, we explain the components of RASA in detail. In RASA’s model, action logs consists on data of physical activity such as entering or exiting a room as well as cyber activity such as logging in a device or accessing a document. In a multi-user distributed system, the access control of documents is eective to all kinds of actions. Regardless of the devices used in a environment, wired or mobile, the access of a document can always be abstracted in association with user movements such as entering or exiting a room, device usage, and operating documents. Our simulated action logs are inspired by typical actors in clinical, in-person setttings. An example of sequence of actions is given in Fig. 2. When users or devices enter or exit a specic location, the ID of the room and the ID of the user are logged with a timestamp. If a user attempts to access a document, the device rst requests grant for access, and this attempt is also logged. The distribution of the simulated actions are visualized in Fig. 3 by using T-distributed Stochastic Neighbor Embedding (t-SNE). As a widely used and eective statistical visualization technique, mapping high dimensional data onto 2D or 3D, t-SNE calculates the probability distributions of each pair of data samples in high and low dimensional spaces, assigning high probabilities to similar ones and minimizes two distributions Kullback–Leibler divergence. t-SNE can exhibit the data distribution lying in various manifolds and clusters, while the distance between two samples in low dimensional space do not represent the distance in high dimensional space but the probabilities [ 29 ]. Hence, the axes in the plot do not represent physical units. By visualizing the dataset with t-SNE, we aim to understand the dataset distribution, discover potential clusters, and analyze the complexity of the problems. General characteristic of the actions can be formulated as moving these objects (i.e. people, documents and devices) across dierent locations over time. Thus, an event or a state machine is dened as a combination of time, location and a set of objects in this space. The coupling concept aims to reveal the interactions among dierent factors of action logs. As illustrated in Fig. 4, coupling can be dened between people and location, location and device as well as location and document. In the gure, the interaction between two factors: document and people is presented in terms of duration and frequency. Duration denotes how long two objects spend time with each other; frequency denotes how many times two elements encounter each other. Using the logs, RASA rst constructs the frequency and duration matrices for each object pair (i.e. person-person, person-device, device-location, person-location). The coupling values in the matrices are normalized to enable comparability between dierent coupling values. The coupling factors are denoted as: 𝑷𝒑𝒍 = {𝑝 , 𝑝 , 𝑝 , ..., 𝑝 𝑫𝒐𝒄 = {𝑑𝑜𝑐 , 𝑑𝑜𝑐 , 𝑑𝑜𝑐 , ..., 𝑑𝑜𝑐 𝑫𝒆𝒗 = {𝑑𝑒𝑣 , 𝑑𝑒𝑣 , 𝑑𝑒𝑣 , ..., 𝑑𝑒𝑣 𝑳𝒐𝒄 = {𝑙𝑜𝑐 , 𝑙𝑜𝑐 , 𝑙𝑜𝑐 , ..., 𝑙𝑜𝑐 . The computation of coupling values is given in Eq.1 and Eq.2 for frequency and duration, respectively. In the RASA framework, the rst step is converting the action logs to events. Algorithm 1 presents the generation of event list dictionary which stores the status transitions of all factors. As discussed in Section 3.2, an action log contains a factor (e.g., a person, document, or device), an action (e.g., enter, read, or exit), and a location. For each action log, the algorithm determines the previous event, creates a new event according to whether the action is to move the factor in or out, and nally updates the statuses of all elements of the new event. It is worth to note that factors do not include locations as opposed to the element of an event. The event list dictionary is further processed by Algorithm 2 to generate 𝐹𝑟𝑒𝑞 which counts the number of times that and coexist in the same event and 𝐷𝑢𝑟 which records the duration that two elements occur in the same event. If 𝐹𝑟𝑒𝑞 and 𝐷𝑢𝑟 are considered, they can be abstracted as . Then, Eq.3 represents a coupling matrix (not yet normalized). The time window of the distribution is determined by the tuple ( ). indicates the duration of each event. Note that and should satisfy 𝑉 𝑎𝑟 (𝑨) > 𝑉 𝑎𝑟 (𝑩) . The rationale behind this condition is as follows: according to Eq. 1 and Eq.2, these two formulas asymmetrically normalize the values. That said, in order to make coupling values comparable, the dierences between the elements which have larger variance need to be reduced. Our nal goal is to label each cluster of couplings with a risk level, which will be described in the next section. To be able to associate clusters with the risk, we need to rst assign risk levels to each individual coupling. Therefore, for each coupling matrix, we map the coupling values to onto three risk levels as high, medium or low risk. To achieve this, we set a threshold as Eq. 6 and apply mean value binning over the coupling values. To formulate the risk level of each event, several strategies are applied, one of which is to code high as three, medium as two and low as one. This is followed by calculating the average risk of each event. Then the average risk will be marked as high, medium, low-risk. The other one is to directly code the risk level of each feature, which can directly represent features’ pattern. The latter one is used to evaluate the results. Even if the risk level of each coupling value is inferred, still, it can not be used as ground truth because we introduce human subjectivity and intuition into this inference. Conventionally, researchers may adopt a risk matrix [ 15 ] to evaluate the risk level, e.g. 𝑅𝑖𝑠𝑘 ∝ 𝑃𝑟𝑜𝑏𝑎𝑏𝑖𝑙𝑖𝑡𝑦 ∗ 𝐼𝑚𝑝𝑎𝑐𝑡 . However, this study infers risk by dening association between various objects and situations in the action logs. Thus, the use of conventional risk formulation is left to future work along with further investigations on the quantication of the impact. RASA framework clusters the couplings into groups and uses the cluster members’ risk levels to determine the label of each cluster. Note that non-clustered couplings are less frequently observed, and so possess higher risk. Most clustering algorithms put similar distance samples into one cluster. In this work, risk levels of couplings are used as the distance metric in cluster formation. The cluster risk value (CRV) is determined based on the following formula: ∗ 𝐶 + 𝑁 ∗ 𝐶 + 𝑁 ∗ 𝐶 𝐶𝑅𝑉 = (7) + 𝑁 + 𝑁 where 𝑁 , 𝑁 , 𝑁 denote the number of high, medium and low-risk features, respectively; and 𝐶 , 𝐶 , 𝐶 are the codes that are assigned to high, medium and low-risk levels. corresponds to 3, 2, 1, respectively, 3 denoting a higher risk. This is followed by mapping these values to Low (L), Low-Medium (LM), Medium-Low (ML), Medium (M), Medium-High (MH), High-Medium (HM), and High (H) risk levels according to Table 4. In case a cluster is labeled high-risk, all actions in this cluster would be denied. Otherwise, the clusters with medium or low-risk labels contain the actions that may be permitted. The decision for medium risk clusters depends on the coupling feature-based risk levels for each individual point. In this section we evaluate the initial promise of the RASA approach by comparing the decisions against an heuristic policy, and also validated with two supervised learning methods, namely decision tree and Support Vector Machine (SVM). The action logs used in this work contain one device; hence the available features are Location-People, Location-Device, Location-Document, and Document-People. Because the action logs cover a single device, only , and are used in the evaluations. We present the results under using duration-based features, frequency-based features and the combined (i.e. frequency and duration-based) features. In addition, three dierent clustering algorithms are applied, which are Gaussian mixture models (GMM) [ 36 ], Agglomerative Hierarchical [ 43 ], and DBSCAN [ 13 ]. The target is to cluster these features (couplings) and label the clusters with risk levels. The aim of the clustering algorithm is to form the least possible number of clusters where within each cluster co-existence of high and low risk patterns is avoided. 4.1.1 Visualization of features. Fig. 7 illustrates the features visualized via using t-SNE [ 41 ][ 34 ]; features are presented by color-codes to show risk levels of samples (red=high-risk, green=low-risk and orange=medium-risk). In Fig. 7 (a–c), most of the data points are of low risk level (green) whereas the medium and high average-risk samples are less frequently observed. t-SNE maps every multi-dimensional input in a data set onto two or three dimensions. When t-sNE-based modeling is complete, similar data are mapped close to each other whereas dissimilar data are mapped onto distant points [29]. 4.1.2 Feature-by-Feature risk of clusters. We calculate and present the percentage of feature-by-feature risk level (high/medium/low risk) found at each cluster when we use DBSCAN, Hierarchical and GMM clustering. Note that hierarchical and GMM clustering schemes generate the same results, as shown in Fig. 9. It is not viable to apply the frequency or duration as the only metric to evaluate objects’ relationship and their risk levels. In this study, we also consider the circumstances under which people may stay in a room for a long time while they enter and exit other rooms with high frequency. Therefore,the frequency-based features are also expected to aect the risk assessment. Since the duration-based coupling features and frequency-based features show distinctive perspective of the action logs, this study also employs the combined features dened as concatenation of two features. Clustering results, and risk value results are generated by using three dierent features. Fig. 8 and Fig. 9 present the percentage of feature-by-feature risk levels of clusters by using frequency-based, duration-based, and combined features. When Fig. 8 and Fig. 9 are compared when given the same number of clusters, DBSCAN, Hierarchical and HMM provide similar results, although DBSCAN results suggest it may increased noise. Both Fig. 8 and Fig. 9 illustrate the diversity of three features; however the results of these three features have similar pattern. Low-risk events are dominant, other types of risk are minor, which is what one would hope is a realistic distribution of event risks in normal clinical practice. This pattern also results in the similarity of the three gures in Fig. 10. It is worth to note that the occurrence of this pattern is only due to the simulated action logs used in this study. When dierent action logs are employed, the result of three features may lead to a more signicant variation. 4.1.3 Clustering algorithms: (HMM and DBSCAN). The strength of DBSCAN is that we do not need to specify the number of clusters upfront while in hierarchical and GMM number of desired clusters are given. If there were more factors in the action logs, the number of features would increase, hence labeling of action clusters by using DBSCAN is generalizable. Indeed, outliers are expected, however, the outliers are not treated as high-risk samples directly, because the events maybe the sub-events of another cluster. For instance, in Tables 5,6 and 7, the sample in the cluster -1, does not have documents in this event; hence there is no possibility of leaking sensitive data in such an event. Nevertheless, in practice we expect that, as a matter of policy, outliers would be escalated to the security operations and policy experts. 4.1.4 Cluster Risk Levels. As clusters and their feature-by-feature risk levels are obtained, risk values of clusters are calculated according to Eq. 7 and binned into 7 groups: Low, Low-medium, medium-low, medium, mediumhigh, high-medium, and high. Since the actions in medium and low-risk level clusters will be permitted, we intend to prevent high average-risk (dened in Section 3.4) samples occur in medium and low-risk level clusters. Although the average-risk level is not a kind of ground truth, if it shows high-risk, then most of the features of the sample raise alert or medium-risk. As explained in the feature extraction section, the coupling value of medium-risk is similar to that of high-risk. There is no obvious boundary between these two risk levels, and clustering algorithms provide some potential risk patterns in the action logs. The risk values and levels of each cluster are shown on in Tables 5, 6, and 7. The cluster risk values are sorted and plotted as illustrated in Fig. 10. This paper further compares the outcomes of three features in Fig. 11. Most of them are safe clusters whereas only one cluster raises a high-risk alert. Based on this, the risk value of the entire dataset (i.e. action log) can be calculated as well, which is 1.28 in this case. In the nal step, as shown in the Fig. 13, this work utilizes supervised learning methods, decision tree and SVM, to validate the results of unsupervised learning and to verify whether the coupling idea can be generalized. As shown in Fig. 14, when the model is trained with dataset 1, and tested with dataset 2, 100% training accuracy and 99.86% test accuracy are achieved. As Fig. 3 and Fig. 12 present, despite the distinct distributions of dataset 1 and 2, the proposed methodology can still function well. Support Vector Machine (SVM) is also employed and it achieves 99.95% test accuracy. The performance of RASA framework is validated against a policy-based access control scheme. Policy-based decisions can be considered as a Attribute-Based Access Control (ABAC) [ 20 ] approach, utilizing the four frequency-based coupling features introduced above in addition to the trac, which indicates the number of people in the current event, and co-existence, which is triple-coupling, people-document-location coupling. Eventhough the trac does not entail any coupling, it is possible to use Eq. 6, and the average value to determine the risk level of each coupling value. Other features would further transform into risk as well. The policy maps the features’ risk onto three risk categories: Device Risk, Environment Risk, and Action Risk. Furthermore it applies a weighted sum of these risks together to determine the overall risk. = 0.5 ∗ 𝑅 = 0.5 ∗ 𝑅 + 0.5 ∗ 𝑅 Policy Permit Deny DBSCAN Medium-Low Medium-Low High Numer 586 23 2800 Consistency 100% 99.19% Overall Consistency 99.32% Policy Permit Deny DBSCAN Medium-Low Medium-Low High Numer 586 25 2798 Consistency 100% 99.19% Overall Consistency 99.27% Due to the lack of labels or other methods to prove the eciency of these methods, to examine the performance of the proposed scheme, the unsupervised method and policy-based method are also compared with each other[ 26 ]. By tuning the parameters of policy, we also investigated the outcomes of RASA and policy and analyzed the action log. As shown in the Table. 8, Table. 9, and Table. 10, the frequency-based, duration-based, and combined coupling features show 99.32%, 99.27%, and 99.32% overall consistency, respectively. Since the policy uses the triple factor coupling, it is more likely to detect the rare cases but meanwhile, it is the only triple factor coupling since only one device exists in the action log. When the number of coupling factors increases, the types of couplings will reduce, and such a situation would occur where the frequency or duration is not enough to make statistical decision because the frequency or duration disperse on more coupling combinations. In this paper, we propose the Risk-Aware Smart Access Control (RASA) framework, which denes a simple overall structure to learn use contexts from observed resource access within cyberphysical contexts, and use simple parameters to dene a context-dependent and risk-based authorization scheme based on those contexts. The basic framework can be utilized to extend other access control regimes that lack sucient support for security policy analysts to craft and maintain context-dependent authorization policies. RASA utilizes combined cyber and physical activity logs, converts action sequence to events which contain contextual information, and identies common relations through a coupling approach based on duration and frequency of interactions. Every coupling is assigned a risk value which results from the intuition that frequently occurring interactions can be considered as low-risk and rarely occurring actions as high-risk. RASA further feeds these couplings to clustering algorithms, after which the level of risk for a cluster is determined based on the risk levels of cluster members (i.e. couplings). Thereafter RASA denies actions in high-risk clusters and permits safe actions. One of the insights from our study in a simulated clinical environment is the importance of the selection of couplings on risk inference. Three dierent features are explored in this study, namely, frequency-based, duration-based and the combination of frequency and duration. According to clustering and labelling results, these features can exhibit distinct perspectives of risk. We show that combined features can more comprehensively represent the risk of events and actions. It may be helpful in future work to dene other risk factor compositions and understand better their interactions. RASA is purposefully designed to require little in the way of security policy analyst input–for example, no extensive labeling of actions into risk is required to develop a training set. Our evaluation established a basic validation of the promise of building on this approach. In the tuning process, rule-based policy results are compared with the outcomes of RASA, and rule-based policy and RASA are updated in each iteration. After multiple tuning iterations, the decisions of two approaches achieved 99% consistency. Furthermore, to validate the results of RASA, when two supervised methods (Decision tree and SVM) are trained and tested by using dierent action logs labeled by RASA, 99.95% test accuracy is achieved. Future work could seek evaluation against data derived from authentic use cases. Similar approaches to automatic inference of authorization contexts and associated risks may be particularly applicable in rich cyberphysical environments where sensors are deployed to generate activity logs by monitoring physical actions, in addition to common network and endpoint cyber action logs. Such sensor-rich environments are becoming increasingly common in extremely diverse cyberphysical contexts, including clinical, industrial, home, automotive, smart-building, and smart-city contexts. As these cyberphysical systems grow in size and complexity, human-written context-dependent authorization access rules will not scale, nor will expert risk analysis be cost eective and reliable without evidence-based risk assessment of such accesses. The RASA framework proposed in this paper may be a stepping stone to rich exploration of similar approaches to address such growing problems in cyberphysical security. This study has been supported in part by the Natural Sciences and Engineering Research Council (NSERC) of Canada under the DISCOVERY program, and Ontario Centres of Excellence Voucher for Innovation Productivity 1 program. The authors would like to thank Yueqian Zhang for collaborating with the team to provide the security policy updates. In this section, we present further detailed results about coupling matrices and normalized coupling matrices for each pair of coupled factors. By following Algorithm 1 and Algorithm 2, the action logs are transformed into events, and the frequency and duration information are extracted. As shown in Table 11 and Table 12, we present 𝐹𝑟𝑒𝑞 and 𝐷𝑢𝑟 in 𝐹𝑟𝑒𝑞 and 𝐷𝑢𝑟 coupling matrices, respectively. By applying Eq. 1 and Eq. 2, the coupling matrices are transformed into normalized coupling matrices listed in Table 13 and Table 14. Since one device exists in the dataset, four couplings are selected as features (i.e., and ). By viewing both the frequency-based and duration-based coupling matrices, one can have a clear understanding of how factors interact with each other.
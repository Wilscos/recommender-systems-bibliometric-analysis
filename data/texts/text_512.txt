This work has been submitted to the IEEE for possible publication. Copyright may be transferred without notice, after Abstract— Designing a ﬂoating offshore wind turbine (FOWT) controller requires solving engineering challenges not found for ﬁxed-bottom turbines. This paper applies several methods from the growing body of FOWT control literature to the 10-MW Ultraﬂexible Smart FLoating Offshore Wind Turbine (USFLOWT) baseline generator-speed controller. USFLOWT aims to reduce capital expenses using the lightweight SpiderFLOAT platform, a novel smart ﬂoating substructure with built-in distributed actuators for direct platform tilt and heave control. In this work, the USFLOWT baseline controller is improved through detuning and parallel compensation with both blade pitch and generator torque. The SpiderFLOAT platform additionally allows motion compensation through distributed platform actuators. Two proposed SpiderFLOAT actuator types are considered for active platform control: a lowbandwidth actuator that uses variable ﬂoater ballast to bring a heeling platform to a steady-state upright position, and a highbandwidth actuator that dynamically changes the substructure geometry to actively reject transient platform motion. Each control approach is tested for USFLOWT using the open-source aero-hydro-servo-elastic wind turbine simulation tool OpenFAST. Performance results for each approach are compared across a range of above-rated wind speeds, and promising combined approaches are further evaluated to recommend future multi-parameter optimization pathways. The USFLOWT project aims to reduce levelized cost of energy (LCOE) of ﬂoating wind turbines by using smart turbine and platform control to increase power while mitigating structural loads. Two approaches in the literature that have matured in recent years are detuning [9] and parallel compensation [4, 14], the latter of which increases the complexity of the controller while signiﬁcantly improving performance [5, 15]. A novel advantage of USFLOWT that aids in the control challenge is the ﬂexible SpiderFLOAT [3] platform with actuators for direct platform tilt control. A fundamental problem with FOWT control is generator speed instability, brought about by large feedback gains in the presence of non-minimum phase zeros (NMPZs) due to the platform fore-aft mode. This non-minimum phase characteristic can also be found for ﬁxed-bottom and land-based , Kathryn Johnson, Rick Damiani, and Lucy Pao turbines, though the platform frequency of a FOWT is generally much lower than the tower fore-aft frequency of a ﬁxedbottom turbine. Correspondingly, the NMPZs of a FOWT system can lead to an unstable platform resonance mode [9]. The destabilizing effect of NMPZs has been referred to as “negative damping” in the FOWT literature [4, 5, 8, 9, 14], but in this paper it is simply called instability. Detuning the blade pitch controller to avoid exciting the platform mode sacriﬁces responsiveness to wind disturbances and risks generator overspeeding that may trigger turbine shutdowns. Thus, detuning alone does not provide a complete solution to the NMPZ problem, and FOWT-speciﬁc control techniques are required. Another method of mitigating the NMPZ effects involves leveraging the conventional blade pitch [14] and generator torque [4] actuators in an independent compensation loop to reduce the coupling of platform motion to generator speed. This parallel compensation scheme is effective, but the turbine actuators suffer from limited control authority over platform motion while being primarily employed for generator speed regulation and maximizing power production. Because of the tight coupling to power generation, utilizing these actuators for fore-aft motion compensation is subject to inherent tradeoffs. The novelty of USFLOWT is the introduction of platform actuators which can directly inﬂuence platform degrees of freedom (DOFs) without direct coupling to generator speed control. Utilizing these actuators to compensate for platform motion brings the system into the domain of multi-input multi-output (MIMO) control. The SpiderFLOAT actuators on their own do not signiﬁcantly increase power capture, but through load mitigation they facilitate LCOE reduction made by other control and design parameters. Control codesign, another growing research area within the wind turbine industry [6], offers the ability to optimize power capture through iterative control and design parameter modiﬁcations, and also allows secondary control objectives like structural load reduction to further reduce LCOE in a more optimal solution than uncoupled individual optimizations can achieve. This paper is organized as follows. In Section II, the wind turbine and ﬂoating platform used for this study are presented along with a low-order linear model. Section III details the design and tuning of each control feature, starting from tuning of the land-based controller and leading to detuning for improving stability, to parallel compensation, and ﬁnally utilizing the SpiderFLOAT actuators in the complete FOWT controller. The performance of these controllers simulated in OpenFAST is presented in Section IV, and conclusions are discussed in Section V. The FOWT system used in this study is the USFLOWT, composed of the DTU-10MW reference wind turbine [2] supported by a novel bio-inspired substructure called SpiderFLOAT [3]. The DTU-10MW has rated and cut-out wind speeds of 11.4 m/s and 25 m/s, respectively. The controllers analyzed in this paper are used at wind speeds between rated and cut-out (region 3). For an overview of conventional ﬁxed-bottom wind turbine control design, see [13]. The SpiderFLOAT substructure is visualized in Fig. 1, in which the buoyancy cans have controllable ballast and the stay cables have controllable length. The dynamics of immediate interest for FOWT controller design are those of the generator and the platform pitch. The fourth-order wind turbine model construction followed here is described in detail in [1], with the most relevant aspects summarized here. A ﬁrst-order model of a wind turbine describes the dynamics of the generator speed, ω, with respect to the aerodynamic torque, τ, and the generator resistance torque, τ: where β is the blade pitch angle, v is the rotor averaged wind speed, Nis the gearbox ratio, and Jis the rotor inertia. The aerodynamic torque is a nonlinear function of rotor variables (ω, v, and β) described numerically by rotor performance surfaces calculated by a rotor aerodynamic solver. Stationary solutions with ˙ω= 0, ω= ω, τ= τ, and a corresponding β exist at each aboverated wind speed operating point v, and we can numerically compute a linearized model describing the system response to small perturbations in any of the state variables at each operating point. For notation, the system dynamics at a particular operating point are linearized around the steadystate variables x, and the linearized dynamics are with respect to perturbations ˜x relative to x. The value of each variable in absolute terms can be reconstructed as x = x+ ˜x. The linearized form of Eq. (1) is where each partial derivative is evaluated at ω, v, and β. These are estimated numerically from the rotor performance surfaces for each operating point. Tuning FOWT-speciﬁc control features requires a model that incorporates the most critical ﬂoating platform dynamics. In this model, the dynamic response of the platform pitch φ is approximated as a second-order oscillator aggregating the damping and restoring forces provided by the platform and mooring lines, and the other platform DOFs are ignored. The pitch direction is deﬁned such that φ > 0 means that the platform is tilting downwind and assumed small enough that the small-angle approximation applies. The second-order platform dynamics are represented by J¨φ + D˙φ + kφ = hF(ω, v, β) + τ where Jis the total system moment of inertia about the pitch rotational mode, Dis the natural damping coefﬁcient (assumed constant), kis a spring-like restoring coefﬁcient, his the height of the rotor (approximately tower length), τ is the torque supplied by the platform actuators, and Fis the aerodynamic thrust at the rotor, a nonlinear function of the rotor variables. Platform pitch motion is experienced by the rotor as relative wind, so v= v−h˙φ. This relative wind speed also inﬂuences the aerodynamic torque equations. The simpliﬁed model in (3) ignores many higher-order dynamics of the USFLOWT system, including additional platform DOFs (such as surge and heave), mooring dynamics, and the complex ﬂexibility and hydrodynamic response of the SpiderFLOAT platform. This low-order model is sufﬁciently detailed for an automated tuning process if the second-order response can be identiﬁed from simulation data and the platform does not experience extreme displacement during operation. Similar to Eq. (2), the thrust force Fcan be linearized at a given operating point: The simpliﬁed platform actuator model used here ignores most of the dynamics within the SpiderFLOAT substructure. It is abstracted as a single applied moment, τ, whose impact on the system is identiﬁed using empirical simulation data. Combining the linear models for generator dynamics and platform pitch yields a state-space model with statehi where θ is the integral of generator speed used for integralR control, deﬁned so that˙θ = ωand˜θ =˜ωdt. The combined linearized state-space model is ˙x = Ax + Bu: Notably, the ﬁrst column of the system matrix A contains only zeros, so the matrix has an eigenvalue at s = 0 and is not asymptotically stable in θ. However, with the deﬁnition of˜θ given above, all perturbation modes of the linearized system are feedback-stabilizable. The last two columns of the input matrix B are also of interest, showing that the ˜τand ˜τinputs control the generator and platform dynamics, respectively, in an uncoupled manner without directly interfering with other DOFs. The blade pitch input has a direct impact on both DOFs that cannot be decoupled. The linear model suffers from the presence of NMPZs under conditions that are common during operation. In [4], the FOWT system is shown to be non-minimum phase when Within the wind turbine operating regions, the partial derivatives with respect to v are always positive, and those with respect to β are always negative. For USFLOWT, inequality (6) is satisﬁed at operating points just above rated wind speed and not satisﬁed for very high wind speeds, though the precise operating point above which NMPZs are no longer present is difﬁcult to estimate due to the uncertain accuracy of the damping term in the empirical platform pitch model. When NMPZs are present, even relatively modest gains can lead to system instability [9]. Detuning the controller to avoid instability, described in Section III-B, circumvents the problem at the cost of generator speed tracking performance. Techniques for addressing the NMPZ problem directly are described in Section III-C. The USFLOWT controller is adapted from the reference open-source controller (ROSCO) and is tuned using an adaptation of the procedure implemented in the ROSCO toolbox [1]. The above-rated blade pitch controller uses proportional-integral (PI) feedback to regulate generator speed and uses a model-based automated tuning procedure to try to meet a desired closed-loop transient response. Further, ROSCO has a built-in parallel compensation signal that feeds back tower-top pitch rate to blade pitch through a proportional gain, adding to the blade pitch control signal computed by the PI controller. Additional FOWT-speciﬁc feedback loops considered in this study were implemented on top of a baseline ROSCO controller using a Simulink [12] interface to OpenFAST [11]. A simpliﬁed block diagram of the complete controller is shown in Fig. 2. The control gains are automatically tuned using the loworder linear model of the FOWT system presented in Section II. Each control component is tuned without considering the impact on other components or other dynamics of the system except those captured by the tuning model. It is expected that performance could be improved by using a coupled tuning process or iterative closed-loop optimization of multiple parameters [16], though applying such a process to USFLOWT is left for a future study. The baseline controller tested for USFLOWT was designed without accounting for ﬂoating effects. Land-based wind turbines commonly use a PI controller to drive pitch actuators on each blade to regulate the generator speed to its rated value, and this is the function of the baseline controller implemented in ROSCO. Utilizing the generator speed integral error in feedback raises the order of the system in Eq. (2). The second-order transient response can be tuned to satisfy a desired closed-loop natural frequency ωand damping ζ. At a given operating point, the second-order linear model is used to calculate PI gains kand kthat achieve the desired closed-loop response: Because these gain values are in general unique to each linear model, they are used to construct a piecewise gain schedule indexed for each operating point of interest. The ROSCO implementation uses interpolated indexing of β to determine the current operating point, which approximates the current operating point without estimating the wind speed [1]. Though this automated tuning process neglects many higher-order and nonlinear effects, it is a suitable method for designing the bandwidth of a controller without iterating on results from costly nonlinear simulations. For the baseline controller, the generator torque is ﬁxed at its rated value in above-rated winds. When turbulence takes the wind turbine into below-rated wind speeds, the blade pitch saturates and the generator torque is controlled using a kωlaw [1, 13]. A FOWT controller designed without accounting for ﬂoating effects is often unstable in operating regions with NMPZs because of high feedback gains and a closed-loop bandwidth that excites the platform pitch resonance [8]. In the worst case, this can cause the platform to tip over, but often it will instead oscillate between nearby operating points: unable to settle due to instability but kept from exponential growth by nonlinear dynamics. While not catastrophic, the latter behavior is still undesirable. One method to avoid exciting the instability is to tune the closed-loop bandwidth of the blade pitch controller to be considerably lower than the platform natural frequency [9]. Within the ROSCO automated tuning procedure, the simplest approach to detuning is to heuristically reduce the desired natural frequency ω. This is no more complex than tuning the baseline controller and has some performance improvement where the instability is worst, but the detuned controller expectedly has a degradation in tracking performance at the operating points where detuning is used. A more sophisticated approach uses the linear model to estimate a stability margin and tunes the controller to the fastest response possible while maintaining the stability margin above some threshold, as in [10]. Accurately estimating the stability margin to construct a tuning schedule requires a model more accurate than the one used here, so the method of detuning in this work is based on a simple linear automated tuning schedule that interpolates between a low bandwidth at wind speeds just above rated and a higher bandwidth at higher wind speeds where the system is more naturally stable. The upper and lower bounds, as well as the shape of the schedule curve, are not the focus of this work; instead they only serve as a starting point to take advantage of improved performance of more advanced FOWT control methods. There is potential to improve the controller performance by optimizing these and other design parameters in a robust model-based detuning [10] or an iterative co-design process [16]. A common FOWT-speciﬁc control feature is an additional control loop that uses feedback of rotor fore-aft velocity, measured at the nacelle. This so-called parallel compensation is a step towards MIMO control, designed using parallel loop closure and tuned using the same low-order model as the baseline controller. This method attempts to reduce the coupling between the competing aerodynamics of rotor torque and thrust that come about while regulating generator speed through blade pitch. Parallel compensation has been shown to be effective when the compensating actuator is the blade pitch [1, 5, 10, 14] or the generator torque [4, 15]. In this study, the fore-aft velocity signal used for parallel compensation is the tower-top pitch rate, which is identical to platform pitch rate if the tower is assumed to be rigid. However, when the control is implemented on a ﬂexible tower, the tower-top pitch motion directly impacts the response of the rotor and is impacted by actuators. In the parallel compensation control implementation, tower-top pitch rate is tapped directly from the computed signal in OpenFAST [11], with some ﬁltering. The sensor model is not considered in this work, but it is possible to reconstruct the tower-top velocity from physical measurements. Both blade pitch and generator torque are considered for parallel compensation in this work, and a combination of both is shown to be a good compromise between the beneﬁts and drawbacks of each. The ROSCO controller implements parallel compensation using blade pitch and offers an automatic tuning method [1] which serves as a starting point for the tuning method used in this work. The same linear model described in Section II-A is also used to automatically tune the parallel compensation gain. Considering Eq. (5), the term A(2, 4) captures the effect of fore-aft motion on generator speed change. If this term were 0, the platform pitching would have little direct effect on generator speed tracking. By this tuning method, the parallel compensation feedback does not directly reduce the platform motion, but instead compensates for the effect that the platform motion has on generator speed regulation, and in turn increases the overall closed-loop system stability. 1) Blade Pitch: Parallel compensation using blade pitch feedback is built into ROSCO, but the implementation was modiﬁed slightly for this study. While ROSCO uses a single gain for the fore-aft velocity feedback term, we use a gain schedule that keeps the parallel compensation gain consistent with the PI controller gain for each operating point. The blade pitch compensation, β, uses proportional feedback of the platform pitch rate, which can also be thought of as derivative feedback of the platform pitch angle: This term is added to the blade pitch command generated by the PI controller before the actuator saturation limits are applied. In the state-space model of Eq. (5), this feedbacks subtracts the term kfrom A(2, 4). Choosing a gain that sets A(2, 4) = 0 fully compensates the effect of platform pitch on generator speed, however, due to the coupling of blade pitch to both aerodynamic torque and thrust, such a gain also considerably reduces the effective system fore-aft damping as a side effect. It is therefore desirable to choose a smaller gain to partially compensate the fore-aft motion. The full-compensation gain for blade pitch is and setting k= mγ, m∈ [0, 1] allows the control system designer to select the degree of partial compensation from the blade pitch actuator. The fully-compensated tuning is performed by the ROSCO toolbox [1] with m= 1, but ROSCO uses additional ﬁltering to change the dynamics of the feedback loop even further thereby effectively reducing mat certain frequencies. Note that γ> 0, so the β contribution is positive for a forward swinging rotor (˙φ < 0). Per the analysis in [4], this feedback redistributes the impact of NMPZs, but it does not remove them. Algebraically, the same term is added to both sides of inequality (6), so the condition is still satisﬁed regardless of the selected gain. As demonstrated in [15], allowing m< 0 is an alternative tuning method that attempts to increase fore-aft damping at the expense of generator speed tracking. 2) Generator Torque: Generator torque feedback is in theory more suitable for compensating the effect of platform motion on generator speed. Unlike the blade pitch, generator torque feedback is capable of modifying the generator dynamics without impacting the fore-aft damping as a side effect and can therefore mitigate or completely remove the NMPZs [4, 15]. Following the same tuning approach: One limitation to using generator torque for parallel compensation is a strict limit on the maximum resistance torque that can be supplied by the actuator. In this study, the generator torque maximum τis set to 120% of τ. Using the full-compensation gain makes the system minimum phase for all operating points, however, in practice, saturation of τprohibits actuator signals large enough to achieve full compensation. As before, it is beneﬁcial to reduce the gain with m< 1 to avoid introducing unexpected behavior at the saturation limit while compensating typical foreaft velocities experienced during operation. This parallel compensation using τfeedback changes inequality (6) to With full compensation (m= 1), inequality (11) is no longer satisﬁed because the term on the left is positive, demonstrating that the NMPZs are not present. With low enough m, the NMPZs are partially compensated and may still be present for certain operating points if the natural damping Dis small. If the maximum expected platform pitch rate at an operating point is˙φ, then the degree of partial compensation can be set to so that the computed τcompensating for a pitch rate˙φ is at most τ. An additional beneﬁt to limiting the gain is the reduction of drivetrain loads, as pointed out in [4] (where the authors use a constant m= 0.5). Drivetrain loads are not analyzed in the present study. 3) Dual Compensation: Given the particular tradeoffs between blade pitch and generator torque as used for parallel compensation, it is sensible to attempt to combine them in a dual parallel compensation control scheme. Using partial compensation of both blade pitch and generator torque, the original objective of setting A(2, 4) = 0 in (5) will be satisﬁed if m+ m= 1, so the share of effort managed by each actuator can be tuned. In this work, the dual compensation is tuned at each operating point using the generator torque saturation as a constraint (using Eq. (12)), and setting m= 1 − m< 1 achieves full compensation. Two platform actuation options exist for the SpiderFLOAT: actuators that operate at a low bandwidth and a high bandwidth. Both options are being investigated for their beneﬁts to power generation and structural loads mitigation, and the realization of either depends on existing technology for reasonable cost. 1) Low-Bandwidth: Using variable-ballast buoyancy cans, the SpiderFLOAT legs can be selectively weighted to inﬂuence the quasi-static settling heel angle. Changing the ballast in the cans can be achieved using air compressors and/or water pumps to ﬁll or deplete the cans of seawater. These actuators would operate at a low bandwidth, with settling time on the order of several minutes, similar to a conventional wind turbine yaw servo [13]. Our design for controlling this actuator is a slow integral controller compensating a slowly moving average heel angle. Additionally, it may be possible to utilize marine forecast data in a low-bandwidth feedforward controller to anticipate trends in mean wind speed and direction corresponding to platform heel angle. 2) High-Bandwidth: The high-bandwidth platform actuation option would dynamically reel in or out stay cables connecting the SpiderFLOAT legs to the central stem (Fig. 1). These cables are under enormous tension even in a static condition, so changing their length by an appreciable amount would require considerable force, akin to a crane lifting building materials weighing kilotons. The maximum possible bandwidth of a physically realizable actuator is still being investigated, but for the purposes of this work the actuator is assumed to operate faster than the platform pitch mode, with an actuation time faster than 15 seconds. This actuator model is presented as the potential best-case platform control capability to contrast with the lower-risk can ballast actuator. A high-bandwidth platform controller is implemented using a proportional-integral-derivative (PID) controller designed with a closed-loop bandwidth above the platform pitch natural frequency in order to actively dampen platform motion. Utilizing the second-order platform pitch model in Eq. (3), the PID controller was tuned for a desired closedloop bandwidth using classical linear control design methods, rather than a fully automated procedure used in the earlier tunings discussed. An analytical tuning method accounting for the SpiderFLOAT dynamics is pending development of a higher-order control-oriented linear platform model. Each controller presented has been simulated for the USFLOWT system using the open-source aero-hydro-servoelastic wind turbine simulation tool OpenFAST [11]. The system was simulated with 6 random turbulence seeds at each whole-numbered wind speed between 12 and 24 m/s (for a total of 78 simulation cases for each controller) using the normal turbulence model (NTM) as outlined in design load case 1.1 of the International Electrical Commission (IEC) standard 61400-1 [7]. At each reference wind speed, corresponding wave conditions are informed by metocean data for a site near Monhegan Island, Maine. While a realistic wave disturbance was simulated in every case, it has not been found to have a signiﬁcant impact on USFLOWT performance, so wave effects have not been factored into the control design presented here. All simulations used a duration of 800 seconds, with the ﬁrst 200 seconds of transient settling discarded. A summary of the components of each controller simulated can be found in Fig. 3. The system outputs used as performance metrics to compare controllers are generator speed and tower base foreaft bending moment, with performance measured by the standard deviation and absolute maximum quantities of each. Large generator overspeed spikes, exceeding rated speed by approximately 20%, can cause a safety shutdown of the wind turbine that would lead to a loss in power production, while the standard deviation (STD) measures tracking performance in the presence of random variation, i.e. turbulent simulation. Standard deviation of the tower bending moment approximately correlates with fatigue load, while the maximum correlates with extreme load. For both metrics, lower values signify better performance. In all results shown, the generator speed deviation is normalized to its rated value, and the tower base moment is normalized to the mean moment experienced by the baseline controller at 12 m/s. The baseline controller was tuned for a closed-loop bandwidth and damping of ω= 0.3 rad/s and ζ= 0.7. The simple detuned controller was designed for a slower response, with a bandwidth and damping of ω= 0.2 rad/s and ζ= 1.0, similar to the values used in [10]. When this detuning was shown to improve generator speed tracking performance at low wind speeds but reduce performance at high wind speeds, a scheduled detuning approach was employed that tuned the bandwidth and damping to slower values at low winds and faster values at high winds, interpolated linearly. The low-speed transient response was set to the simple detuned values, and the high-speed controller was tuned with ω= 0.5 rad/s and ζ= 0.7. The PI gains of the three controllers are plotted in Fig. 4. The simulated performance of the three controllers is compared in Fig. 5. The generator speed tracking performance at lower above-rated wind speeds is improved slightly by both detuned controllers, and though not shown, the mean generator speed is also higher, which translates to larger mean power during operation. At higher wind speeds, all controllers fail to stop transient spikes that exceed rated generator speed up to 30%, even though the mean wind speed is outside of the domain where the system has NMPZs. If deployed in the ﬁeld, a generator overspeed of this magnitude would likely cause the turbine to shut down. The scheduled detuned controller does not noticeably increase performance beyond either the baseline or fully-detuned controller without advanced FOWT control features, but its faster bandwidth at higher windspeeds contributes to better tracking when parallel compensation is also employed in the next section. For the standalone blade pitch parallel compensation case, it was found that using full compensation feedback with m= 1 decreased fore-aft damping enough to be detrimental to system performance. Thus, the gain was set so that m= 0.5 as a tradeoff between generator speed tracking and fore-aft damping. While this approach is simple and shows some improvement over the baseline, it could be improved further by a more focused optimization. The generator torque parallel compensation gain was tuned to avoid saturation as described in Section III-C. During simulations using a controller without parallel compensation, the maximum platform pitch rate was observed to be typically near˙φ = 1/s = 0 .0175 rad/s. From Eq. (12), this limit implies a gain kthat is held constant across all operating points. Because γis larger for higher winds, maintaining a constant gain requires decreasing mfor operating points at high wind speeds, and therefore the generator torque feedback compensates less of the total fore-aft motion. When the actuators are combined for dual parallel compensation, the generator torque tuning remains the same, while the blade pitch controller is tuned to satisfy the remainder of the full compensation effort. At high wind speeds, the decrease in mrequires increasing m, leading to a more aggressive blade pitch controller where the side effect from blade pitch feedback is less severe. The parallel compensation gain schedules for β and τare illustrated in Fig. 6. The generator speed tracking performance for parallel compensation techniques is compared against the baseline in Fig. 7. Blade pitch compensation shows modest improvement of STD over the baseline, while sometimes exacerbating maximum overspeed spikes, especially just above rated wind, where the thrust side effect is highest. In contrast, the generator torque compensation signiﬁcantly improves tracking and reduces maximum spikes just above rated, but the improvement diminishes to match that of the blade pitch at higher winds. The dual compensation approach matches the generator torque-only compensator just above rated, but improves modestly over either individual compensator at higher winds. Only after combining the detuning schedule from Section III-B does the addition of parallel compensation show signiﬁcant improvement over the baseline at higher winds. In fact, the controller with both scheduled detuning and dual compensation does not exceed a 20% safety threshold above rated generator speed for any test case. The complementary performance regions of both parallel compensation schemes suggests a more ideal dual compensation tradeoff that could improve performance beyond that shown here. Tuning the blade pitch compensation gain k with the opposite sign (as in [15]) at lower wind speeds would decrease the tracking performance but increase nacelle fore-aft damping. Since the risk of generator overspeed events is not as severe at lower wind speeds, the damping beneﬁt of such a tuning approach would be advantageous paired with the partial compensation from generator torque. Scheduling the compensation tradeoff to increase fore-aft damping just above rated winds while keeping the good compensation performance at higher winds is the next step for the control design on USFLOWT. The OpenFAST simulation tool currently does not allow controlling the buoyancy of ﬂoating elements in closed-loop, so the low-bandwidth actuator was simulated by changing ﬁxed model parameters a-priori for each simulation. This is an effective time-representation of how the actuator would behave on a physical system due to the slow actuation speed, on the order of the duration of an entire simulation. The high-bandwidth actuator was implemented in closedloop using SubDyn cable control in OpenFAST through a Simulink interface. The PID cable controller was tuned for a closed-loop bandwidth of 1 rad/s = 0.16 Hz (between the platform and tower natural frequencies) using Matlab’s Control Systems Designer toolbox [12]. The beneﬁts of this application of platform control are not primarily to generator speed but to tower loading, captured by the tower base fore-aft bending moment, M. The effects on tower loading of the platform controllers are compared in Fig. 8. When combined with the best controller from previous cases that includes scheduled detuning and dual parallel compensation, the performance improves further. The tower base fore-aft bending moment is highly correlated to platform pitch motion. Signiﬁcant platform pitch deviation leads to large tower fatigue loads, and extremepitch events (large deviations from the mean) also translate to spikes in the extreme tower load. Therefore, targeting a reduction of platform pitch deviation and mean also reduces tower fatigue and extreme loading, respectively. A controller that improves structural loading allows for reduction of LCOE primarily through the redesign of structural components with smaller load margins, thereby reducing capital expenditures. This multi-disciplinary co-design process used during USFLOWT development enables LCOE reduction through iterative structural redesign in tandem with control improvements, leading to a ﬁnal design that is more optimal than designing each aspect of the system individually [6]. A more direct means for a controller to reduce LCOE is through an increase in mean power production. The power output is a product of the generator speed and generator torque, so it is not captured well by the linearized model and is therefore not used directly as an objective for the control design. It is still valuable to examine differences in mean power across controllers since mean power can suffer from the FOWT instabilities previously discussed. The mean power for the combined controllers of Sections III-C and III-D is shown in Fig. 9, where there is a difference of several percent between the baseline and improved FOWT controllers. Because the costs of a wind turbine are typically ﬁxed after deployment, an increase in power output without increased structural loads translates directly to proﬁt, so power increases of even a few percent are beneﬁcial to the industry and overall adoption of the technology. Several controller techniques for improving generator speed tracking and reducing tower loads have been presented with their results in application to the USFLOWT system. FOWT control features supported by the literature have been shown to improve generator speed tracking and power generation when applied to USFLOWT. Additionally, novel platform actuators allow the USFLOWT controller to apply lesser studied control techniques that show promise for reducing structural loads. The design and control of these platform actuators will be considered as parameters in future USFLOWT multi-disciplinary design optimization, adding more dimensions to the design space which may allow further reductions in LCOE, as long as actuator manufacturing and operational costs are not too high. Co-design of the controller and platform structural parameters offers promise for yielding a more optimal solution than the traditional sequential design process, whereby the wind turbine is designed ﬁrst followed by the control design. Indeed, the controller application shown here is only a starting point for a more sophisticated co-optimization that takes into consideration higher-order effects and will offer solutions connecting varied design aspects. USFLOWT aims to explore optimal regions of the design space while furthering the state of the art in ﬂoating wind energy.
Abstract—Preserving energy in households and ofﬁce buildings is a signiﬁcant challenge, mainly due to the recent shortage of energy resources, the uprising of the current environmental problems, and the global lack of utilizing energy-saving technologies. Not to mention, within some regions, COVID-19 social distancing measures have led to a temporary transfer of energy demand from commercial and urban centers to residential areas, causing an increased use and higher charges, and in turn, creating economic impacts on customers. Therefore, the marketplace could beneﬁt from developing an internet of things (IoT) ecosystem that monitors energy consumption habits and promptly recommends action to facilitate energy efﬁciency. This paper aims to present the full integration of a proposed energy efﬁciency framework into the Home-Assistant platform using an edge-based architecture. End-users can visualize their consumption patterns as well as ambient environmental data using the Home-Assistant user interface. More notably, explainable energysaving recommendations are delivered to end-users in the form of notiﬁcations via the mobile application to facilitate habit change. In this context, to the best of the authors’ knowledge, this is the ﬁrst attempt to develop and implement an energy-saving recommender system on edge devices. Thus, ensuring better privacy preservation since data are processed locally on the edge, without the need to transmit them to remote servers, as is the case with cloudlet platforms. Index Terms—Internet of Energy, COVID-19, Energy Efﬁciency, Smart Plug, Sensing System, Home-Assistant, Recommender System, Big Data, Data Visualization While studying how citizens conserve electricity, most analysts and decision leaders conceptually distinguish between mitigation (e.g., unplugging chargers) and efﬁciency steps [1]. However, such a two-dimensional strategy is sub-optimal from both a philosophical and a policy viewpoint since it does not consider human variations that dictate energy-saving behavior. Conserving energy in households and ofﬁce buildings is a considerable challenge, primarily due to the lack of energy resources and the uprising of the current environmental problems. Not to mention, within some regions, coronavirus 2019 (COVID-19) social distancing measures have led to a temporary transfer of energy demand from commercial and urban centers to residential areas, which has led to increased use and higher charges, creating economic impacts on customers [2]. Therefore, the marketplace could beneﬁt from developing an internet of things (IoT) ecosystem that monitors energy consumption habits and promptly recommends action to facilitate energy efﬁciency. In this context, energy efﬁciency-driven behavioral change is a crucial element in the road to achieving feasible energysaving [3]. Therefore, a deep understanding of consumer habits is essential to ﬁnd the means to transform behavior from excessive consumption towards an energy conscious. In fact, the wide-spread use of smart meters, which glean ﬁne-grained and frequent energy use data in comparison with traditional electricity meters, have provided more granular analytics on usage patterns [4]. On the other hand, recent hardware platforms enabled more cost-effective yet more powerful alternatives to smart meters. Those platforms can monitor energy consumption data in addition to collecting other important contextual data, which eventually leads to a larger pool of data. The usage of emerging technology to improve energy production in homes or buildings is becoming increasingly essential for promoting energy conservation and energy protection. A number of recent developments investigate global energy-saving potential. They are seeking to build creative energy-saving technologies focused primarily on using artiﬁcial intelligence (AI), IoT devices, big data analytics, and behavioral shift [5]. This leads to a recent study trend named the internet of energy (IoE). Given the context of IoE, to investigate how improving energy behavior inﬂuences domestic energy consumption, there is a need to identify common energy consumption practices, interests, and their related costs. These can be deﬁned as activities done at or near the given household that involve the use of electric energy, such as cooking, bathing, using a computer, watching TV, etc., [6], [7]. Henceforth, the concept of micro-moment is put forth as the time-based snapshots of an end-user’s behavior throughout the day, which includes operating different appliances and entering/exiting a place, micro-moments provide contextually rich information about consumption. It is also coupled with environmental metadata such as temperature, humidity, luminosity, and occupancy [8]. In this light, this article presents the integration of the consumer engagement towards energy-saving behavior by means of exploiting micro-moments and mobile recommendation systems (EM)frameworkinto the Home-Assistant platform. End-users can visualize their consumption patterns as well as ambient environmental data using the Home-Assistant user interface (HAUI). More notably, energy-saving recommendations are delivered to end-users in the form of notiﬁcations via a mobile application to facilitate habit change. In this context, to the best of the authors’ knowledge, this is one of the pioneering works for developing and implementing a domestic energy-saving solution on the edge (i.e., carrying out computations and data storage locally on computing edge platforms) in contrast to relying on a cloud-based solution. The remainder of this paper is organized as follows. Section II reviews recent work for IoE, with particular emphasis on edge/fog implementations. Section III overviews the proposed framework. Section IV showcases the system implementation process, where the results are reported and discussed in Section V. The paper is concluded in Section VI. Several works have approached the issue of reducing wasted energy in the built environment from the behavioral change perspective using knowledge-based systems (i.e., RSs). In this section, we focus on discussing the most salient RS studies in the literature proposed to promote energy sustainability in buildings and reduce total energy costs. Therefore, we principally discuss existing frameworks describing energysaving RSs, electricity plan RSs and edge/fog-based RSs. However, it is worth noting that there are other energy RSs that promote environmental beneﬁts, such as Tomkins et al. [9], which are not included in this related work-study. 1) Energy-saving RSs: the power usage of residential buildings has steadily increased over the last decade. Moreover, demand for electricity in households has heavily surged during the COVID-19 pandemic period due to lock-downs and transport restrictions established by governments. However, experts suggest that users’ behavior plays a signiﬁcant role in wasting energy in residential buildings [10]. Consequently, there is a pressing need to help end-users change their consumption habits and promote more sustainable and environmentally friendly behaviors. To that end, RSs have been proposed as an effective solution to achieve the aforementioned goals [11]. For instance, Starke et al. [12] introduce a Rasch-based energy RS that produces personalized and engaging energy recommendations for households’ end-users. However, the end-users’ engagement with different energy-saving behaviors or measures depends on the behavioral costs (as they engage in exerting more low-cost behaviors) or difﬁculty of those measures. In [13], an energy RS is developed to (i) optimize energy consumption in public buildings using a multi-agent system, and (ii) consider the maximization of consumers’ comfort. While In [14], a RS is proposed to help end-users select energy-saving appliances, thus creating opportunities for reducing wasted energy on the smart grid. This was possible with the help of an energy disaggregation technique, which enables inferring the consumption of individual devices from the main consumption and hence identifying energy greedy appliances, which might be replaced with more energy-efﬁcient ones. Moving forward, in [15], an AI-based energy-saving system is developed, which uses an efﬁcient RS. Explicitly, personalized recommendations are generated after detecting abnormal energy consumption behaviors in collected energy data using an energy micro-moment analysis. This analysis is performed at an appliance-level with reference to occupancy patterns and appliance consumption characteristics. Similarly, in [16], an energy-saving RS is developed, namely Saving Aid, which helps in examining the impact of RSs in promoting energy consumption behavioral change using persuasive recommendations. Accordingly, the latter have been enabled by delivering normative messages. An empirical evaluation was then conducted using contextual data, where 207 participants have been involved by comparing persuasive norm explanations, i.e., the “Saving Score”, “Global Norm”, “Similar Norm”, “Experienced Norm”. Moving on, in [17], a contextaware RS for supporting consumers to transform their energy consumption behaviors is proposed, called recommendations for energy habits change (REHAB-C). After collecting energy footprints, occupancy patterns, and contextual data, REHABC is used to either trigger an energy consumption advice, postpone or cancel it and record consumers’ preferences. In [18], a RS named recEnergy is presented to reduce energy consumption in commercial buildings using humanin-the-loop. Speciﬁcally, the energy optimization question has been formulated as a Markov decision process and deep reinforcement learning has been investigated for learning energy efﬁciency recommendations. Following, recEnergy has been employed to distribute learned energy-saving actions to consumers in a commercial building in addition to collecting their feedback to further improve the recommendations. On the other hand, because providing end-users with only personalized recommendations can not guarantee their acceptance, the use of explanations has appeared as a potential solution to boost the acceptance rate and increase the enduser’s trust in the RS [19], [20]. In this regard, an explainable RS is proposed in [21], which produces explainable and persuasive energy-saving advice concerning end-users’ preferences and habits. The persuasive recommendations have been emphasized using economical saving prospects and/or positive ecological impacts. Following, explanations have been produced for providing the end-users with the reasons behind any energy-saving recommendation. 2) Electricity plan RSs: RSs are used in this case to aid consumers select cost-effective electricity plans. Generally, there are different categories of electricity plans, among them: (i) the variable rate plan, in which the cost changes month to month depending on the cost of wholesale electricity and selected supplier; (ii) ﬂat-rate plan, which allows customers to pay the same amount each month regardless of energy usage (although the energy price can be changed monthly depending on the climate situation); (iii) indexed-electricity plan, where the price paid for electricity is linked with other variables, e.g., the going rate for natural gas; (iv) green plan, which relies on providing 100% green power to promote the generation of green energy by offsetting the usage with renewable energy; (v) time-of-use plan, where the discounts and free electricity usage are offered based on certain times or days of the week. Accordingly, RSs could generate advice and suggestions in either direct or indirect ways. The ﬁrst approach is the most popular in online plan RSs, where different RS tools have been already developed and commercialized (e.g., Power-to-Choose [22] Energy Made Easy [23], Check24 [24] and iSelect [25]). These tools focus mainly on ﬁnding and recommending the cheaper electricity plans using a deep comparison of the costs of available electricity plans, where the cost of an electricity plan is estimated using the overall electricity consumption of a consumer along with the charge rates of the plan. In [26], the authors introduce a RS to help consumers select the best electricity plans, which is implemented in two steps (i) feature formulation, and (ii) recommendation generation. The former refers to adopting a matrix recovery with energy selection rules to infer appliance energy consumption data. Then, this data has been used as the features to represent end-users’ consumption behaviors. While the latter relies on the generation of collaborative ﬁltering (CF) based recommendations using K-nearest neighbors (KNN) and adjusted similarity. This helps in recommending personal electricity plans to end-users based on the collected characteristics. Similarly, in [27], aiming at selecting the most convenient electricity retailing plans (ERP), Zhang et al. introduce a Bayesian hybrid CF-based electricity plan RS, namely BHCFEPRS. It is implemented in a two-stage approach embedded with model-based and memory-based CF schemes. Moreover, Bayesian inference has been deployed to recover missing features and consumers’ classiﬁcation. Moving forward, in [28], a personalized ERP-based RS for domestic end-users is proposed, where CF is utilized to extract the pertinent energy usage features. Following, this data along with the information of their selected ERP are saved in a user knowledge database (UKD). Next, For each consumer, the RS (i) investigates his/her energy usage data, (ii) identiﬁes consumers having similar energy usage behaviors with him/her in the UKD, and (iii) recommends the most appropriate pricing plans. In [29], a personalized RS to provide consumers with smart electricity tariff recommendations is proposed. It ﬁrstly collects a set of consumers’ energy usage using an advanced submetering installation. Second, the preferences of consumers in terms of tariff plans are inferred. Finally, using the inferred preference information, a matrix factorization is introduced with a CF model to recommend the most convenient tariff plans to target consumers. Similarly, in [30], a customized ERP-based RS is proposed, in which cost-effective retailing plans have been produced about the users’ electricity consumption footprints. Accordingly, electricity consumption has been identiﬁed using daily load proﬁles (DLPs) and then affected into different classes. Following, two DLPs clustering skills, plan rank-oriented, and load feature-oriented clustering have been introduced, to generate customized recommendations to help the users in selecting the more suitable ERPs. Traditional RSs cloud servers cannot dig (carefully analyze) the information to learn the users’ demands and behavior. Therefore, edge computing and/or fog computing are computing paradigms that enable to bring the computation and storage resources into the edge devices or the network edge servers instead of having them in the remote cloud servers [31]. This could help in providing great intelligent, personalized services, and further supporting real-time implementations. To that end, increasing attention was put recently to develop edge/fogbased RSs [32]. To the best of the authors’ knowledge, no energy RS has been implemented on the edge devices yet. However, there is a limited number of RS frameworks that have been proposed for other applications and have been embedded into the edge/fog devices. For example, in [33], Gong et al. introduce EdgeRec, which is an edge-based RS that aims to achieve real-time consumer perception and real-time system feedback in online shopping. Besides, to capture consumers’ preferences and improve recommendations, it models heterogeneous consumer behavior sequences and adopts a context-aware reranking with behavior attention networks. In [34], a fog-based hybrid RS is proposed for addressing the problems of information overload. Explicitly, it can abstract pertinent data from the fog environment and further provide the users with localized suggestions for improving the system performance. In [35], aiming to help the users to discover the most appropriate materials to enhance their performance in an e-learning system, a fogbased RS is proposed. In this regard, the improvement is ensured by achieving a fast response time and increasing the security to overcome the issues related to the personalization and synonymy in e-learning systems. Although the development of RSs is receiving an increasing interest nowadays in the building energy sector, different issues are still open and need to be addressed to develop reliable, engaging, and real-time RSs. For instance, most existing energy RS frameworks are implemented on cloud servers, but the growing use of cloud computing and networking results in high bandwidth consumption, leading to higher energy usage [36]. Moreover, the bandwidth constraints, Internet dependency, and latency issues due to data transmission to cloud servers signiﬁcantly hinder the design of real-time RSs using cloud computing [37]. On the other hand, the transmission and storage of sensitive personal data on the cloud raise additional security and privacy problems, which have not been addressed in most existing frameworks [38]. To ﬁll that gap, we propose in this paper a novel energy-saving framework based on an explainable RS, which is implemented on the edge. It includes different components, which are (i) the smart plug used to collect data, (ii) the anomaly detection module, (iii) the explainable recommendation engine, and (iv) the end-user app used to receive recommendations and visualize contextual data. Thus, the proposed framework presents better privacy preservation potential than existing RSs due to processing data on edge devices close to the end-user without the need to transmit them to remote servers. Moreover, this reduces the latency as data are processed locally and supports realtime or near real-time implementations. On the other hand, the persuasive recommendations in the RS, that emphasize economic beneﬁts are consistent with the one used by Starke et al. [12]. The (EM)framework is designed to advance the state-ofthe-art evidence-based, technology-enabled energy efﬁciency recommendation systems to enhance domestic energy efﬁciency. As a result, the (EM)framework comprises a variety of sub-systems that work together to accomplish this goal [8]. The data ﬂow between the sub-systems is shown in Fig. 1. Several sensing instruments (e.g., smart plugs, temperatures, humidity, motion sensors, etc.) are used to collect different types of data transmitted wirelessly to the back-end, where they will be classiﬁed into a group of micro-moments. Classiﬁed micro-moments are used as inputs to the RS. This sub-system primarily back-ends composite data from multiple sensors, and additionally keeps processed information on consumer energy proﬁles, micro-moments, and recommendations. Sensors (e.g., temperature, humidity, illumination, etc.) report user presence and environmental conditions both within and outside the tracked site, while smart meters record electric power usage per unit, resulting in a stream of measurement data collected in the platform database. This is achieved by utilizing an open-source automation platform called Home-Assistant. The platform prioritizes privacy and local control. The host for running Home-Assistant, in this case, is a Raspberry Pi 4 Model B, which also acts as the server in the system architecture. Home-Assistant uses message queuing telemetry transport (MQTT) to connect with other devices. To elaborate, MQTT is a lightweight messaging protocol used to exchange messages among devices. The ecosystem depicted in Fig. 2 serves as the foundation for the system’s explainable recommendations, consisting of sensors, smart meters, actuators, and orchestrating software that works together to promote energy conservation through smart on-time recommendations based on the habit loop theory of behavioral change. Data collection and storage are detailed in the previous sub-section. An additional knowledge abstraction module (KAM) has been built to effectively manage the large volume of data produced by the sensors and smart meters. It is made up of scripts that process sensor data streams in real-time and detect micromoments. When the user leaves the room, or when the external conditions meet the user expectations, or when a device has been used frequently, and so on. Thus, micro-moments are deﬁned as moments of particular importance to the user. The system’s knowledge base stores the observed micro-moments, as well as information about the user’s preferences. The system’s explainable recommendations architecture is assisted by an adequate data model, which organizes real-time data gathered by sensors, aggregated data that summarize recent application use, and room presence data (for a few weeks) at 5-min granularity. In the former, the comprehensive gathered data is stored in the dataset for a few months, while the latter is regularly updated to represent updated usage preferences at a particular moment and stored in what is referred to as the knowledge base. For archiving purposes, older sensor data is transferred into a Data Repository. To generate recommendations, the action triggering module (ATM) receives real-time room occupancy, appliance consumption, and environmental details, as well as information on user behaviors. The ATM is written as scripts in HomeAssistant. Custom scripting in Python and other languages is supported, and the software exposes various APIs for interacting with third-party applications and frameworks. The main medium for delivering recommendations to end-users is their mobile and Home-Assistant application, which presents recommendations and gathers user feedback (i.e., accept, reject, or ignore). Initially, when the recommendation triggers, the system in the background collects user preferences from the knowledge base and reviews recent sensor entries in the database to detect whether a recommendation is at the appropriate micromoment. Using the Home-Assistant mobile application, produced recommendations are displayed on the user’s smartphone. The suggestions obtained are followed by explanations and more compelling facts about an action’s impact. Appropriate data visualization of energy usage is essential in teaching end-users about their energy utilization habits and suggesting areas of change. The mobile application supported by the Home-Assistant platform collects information and analysis from the back-end and shows condensed information on energy usage and weather data accordingly. Further, the mobile application presents the suggestions produced by the RS and enables simple remote control of the appliance. Fig. Fig. 2: The core architecture of the RS with the explainable recommendation extensions. Fig. 3: Home-Assistant mobile UI, denoting the (a) generated recommendations, (b) power consumption visualization with appliance control, and (c) environmental data. 3, demonstrates the mobile UI developed for monitoring energy consumption and environmental conditions, designed as scripts in the open-source home-automation platform of Home-Assistant. This platform uses custom scripts in Python (and other languages) and enables diverse APIs to communicate with external systems and applications. The key channel for providing the end-user with the recommendations is his/her smartphone and mobile UI. The latter serves for displaying recommendations and collecting end-user responses (i.e., reject, accept, or ignore). Put simply, by using this mobile app, the end-user can receive notiﬁcations regarding their energy consumption with areas of improvement. Besides, end-users can visualize their consumption, along with the surrounding environmental data. Real-time room occupancy, appliance consumption, and environment-related data along with knowledge about user habits are fed to the Action Triggering Module (ATM). The ATM is developed as scripts in the open-source home au- Fig. 4: Smart plug alternatives, including, the (left) (EM) smart plug, and (right) sonoff POW device. TABLE I: List of sensing and actuation components. tomation platform of Home-Assistant. The platform allows custom scripting in Python and other languages and exposes several APIs for communicating with external applications and systems. The key channel for communicating recommendations to the end-user is his/her smartphone and the Telegram application, which displays recommendations and collects user responses (i.e., accept, reject or ignore). The overall aim of the (EM)framework is to enhance end-users’ energy consumption behaviors, and it does so by, ﬁrstly, providing guidelines for energy-saving practices sent to the end-users’ mobile device at the appropriate time and secondly, providing energy usage analytics that demonstrates to the consumer the advantages of improving their behaviors. The aforementioned processes are enabled by data sources originating from the sensors allocated in the power and environmental modules. Provided that the following components have been evaluated individually, within the overall framework and yielded acceptable performance, hence were selected to take-part of the ﬁnal framework. The framework was additionally assessed by creating a test-bed shown in Fig. 7, with the primary goal of measuring communication latency and comparing the efﬁciency of smart plug alternatives to a reliable watt-meter. In [39], the remaining sensors were calibrated and evaluated by utilizing a standard measuring instrument. The list of components used in the hardware implementation is found in Table. I. In Section V a detailed examination of the components can be found. A proper sensing system is needed to compute the power consumption of a given appliance. Two power measuring alternates are employed: the HLW8012 power sensor and the Sonoff POW device. Both options are equipped with a remote control mechanism to enable users to manage the status of their appliances. The data recovered from the smart plugs are Fig. 5: Environmental module, with, the (left) front view, and (right) back view. transmitted to an edge device to analyse the data acquired and output an energy-saving recommendation. An illustration of the smart plugs used is found in Fig. 4. Collecting contextual information can be of great use to create more meaningful recommendations. Hence, temperature, humidity, luminosity, and occupancy of a given household space are all measured using the environmental module. The data is forwarded for further analysis in real-time to the backend. To elaborate on the signiﬁcance of gathering such data, determining whether the end-user occupies a space is essential for power usage management. This knowledge will facilitate recognizing the end-user’s habits and, as a result, enable more educated suggestions. The environmental module is shown in Fig. 5. C. Data analysis process 1) Feature extraction: To deﬁne abnormal consumption, a micro-moment analysis is conducted on the collected power consumption data. Therefore, ﬁve classes are identiﬁed using Algo. 1 to describe power consumption observations of each appliance, they are deﬁned as: “class 0: good usage, which refers to the case when power consumption is < 95% maximum of active consumption rate”; “class 1: turn on the appliance”; “class 2: turn off the appliance”; “class 3: excessive consumption”, which stands to the case of power consumption that is > 95% maximum of active consumption rate; and “class 4: consumption while outside”, this is limited to detecting abnormal consumption of an ensemble of device categories, including the air conditioner (A/C), television, light lamp, desktop/laptop, and fan, where the presence of the enduser during their operation is a must to not be considered as abnormal. The micro-moment features MF are extracted based on analyzing the occupancy proﬁle (O) and power consumption (p) of each device in reference to device active consumption range (DACR), device operation time (DOT ), and device standby power consumption (DSP C). Then, the appliance operation parameters are called, including DACR, DOT and DSP C. Table II presents an example of different appliance parameter speciﬁcations used in the rule-based algorithm to extract power consumption micro-moments. Following, the recommendations that aim to steadily modify the user’s routine, for instance, decreasing the energy footprint Algorithm 1: Proposed rule-based algorithm for extracting power consumption micro-moment features. Result: MF: micro-moment feature vector Read p, O, DACR, DOT , , DSP C and O: operation time; Initialization: MF = ∅ while t ≤ l (with l is the length of the power signal) do Rule 1: Non-excessive usage if p(t) ≥ min(DACR) and p(t) ≤ 95%× max(DACR) Rule 2: Switching on a device if p(t) ≥ min(DACR) and p(t − 1) ≤ max(DSP C) Rule 3: Switching off a device if p(t) ≤ max (D SP C) and p(t − 1) ≥ min (DACR) Rule 5: Consumption without presence of the end-user if O(t) = 0 and p(t) ≥ 0.95× DSP C end TABLE II: Power consumption speciﬁcations for different home appliances. of a repetitive action, are produced. To do so, following the outcome of the anomaly detection, the suggestions must be delivered at the right moment of time. The RS seeks to optimize the user incentive smoothly, so it focuses on energy-consuming routines that occur infrequently or routines that occur regularly, which offers a signiﬁcant accumulated incentive for a minor behavioral shift. The suggestions in (EM)are founded on the rules derived from an overview of user behavior in the past. In short, user activities and their circumstances, as registered in user activity records, are abstracted and analyzed in accordance with the rules of association rule learning. The rule is based on a series of user actions (u) and circumstances (c) (e.g., time day, temperature, user status, etc.) that are regularly replicated in user logs. The right-hand side of the rule (RHS) involves constantly replicated user behavior (e.g., the user switched on or off the device, extensively used device, etc.) and the lefthand side (LHS) refers to the conditions that hold when this action occurs. To sum up, the produced recommendations are described as being: (i) customized since they target the habitual activities of the user, (ii) presented in the proper way (i.e., at the right time where relevant circumstances take place), and, (iii) used to serve a particular purpose and that is to signiﬁcantly increase energy efﬁciency. 2) Recommendations’ delivery: The main medium for delivering recommendations to end-users is their mobile and Home-Assistant application, which presents recommendations and gathers user feedback (i.e., accept, reject, or ignore). 3) Recommendations’ acceptance: Aside from the recommendation’s purpose, a number of details that educate the consumer about the advantages of taking a particular action will help to enhance the recommendation’s acceptance. A compelling fact supports the advice and aids the consumer in creating a more energy-sustainable proﬁle. The RS ﬂow to produce explainable recommendations is shown in Fig. 6. As observed from the ﬁgure, the suggestions are customized by considering the consumers’ feedback before generating future recommendations. Since providing additional convincing information to the user will improve the user’s adoption of advice, the following facts are included: which are the (i) eco (ecological) style of persuasion facts which are based on the energy consumption’s environmental effect, and, (ii) econ (economical) style of persuasion facts which are based on the energy consumption’s economical effect (saving cost). A portion of the recommendation message is devoted to explaining the rationale behind the triggering of each recommendation. Two main reasons are responsible for triggering a recommendation, including: the user has left the room and kept an appliance on, thereby wasting electricity without need, and has an appliance on in the room, although the outdoor conditions (i.e., light or temperature) make it possible to prevent unnecessary use, for instance, through opening a window to cool the space or allowing natural light. This section is dedicated to evaluating the system’s performance in four key areas, such as smart plug accuracy, anomaly detection, and RS scenarios, as well as comparing the overall system outcomes to similar existing works. Fig. 7, shows the layout of the test-bed. It comprises a web or a mobile application UI, an edge server with HomeAssistant running, and the different sensors capturing either spatial data or power usage. The test-bed was created with the primary goal of measuring communication latency and Fig. 6: The ﬂow of explainable recommendations. comparing the efﬁciency of smart plug alternatives to a reliable watt-meter. The remaining sensors were compared to a standard measuring device in [39]. Using the PX110 watt-meter, to test the accuracy of the smart plugs alternatives. The meter has an accuracy of ±1.5% with real power. Table. III, illustrates the accuracy of the smart plug alternatives attached to various home appliances, as well as the reference used. The test was given a time frame of 45-60 seconds, depending on the appliance. To validate and automate the anomaly detection process, we proceed with the tests on (i) real-world data collected via the QUD (Qatar University dataset) and DRED (Dutch residential energy dataset) campaigns [4], and (ii) simulated dataset (SiD) [8]. QUD was gathered at Qatar University energy lab by recording power consumption footprints and other indoor climate conditions, including occupancy, temperature, and humidity at a sampling interval ranging from 3 sec to 30 min. DRED includes energy consumption, occupancy, and environmental data of a typical household in the Netherlands. Electricity footprints were recorded from 12 distinct devices for both aggregated- and appliance-levels, at the sampling rates of 1 min and 1 sec, respectively. SiD includes power usage patterns of 2 years, which were generated using hourly load proﬁles at an appliance-level. The manufacturer appliances’ speciﬁcations were utilized for deﬁning the energy consumption footprints of every device in watts. Occupancy data were generated as well using diverse occupancy rules that represented the percentage of end-users’ presence per day in a typical house. Moreover, the empirical evaluation is conducted in comparison with various machine learning classiﬁers (i.e., Logistic regression (LR), linear discriminant analysis (LDA), support vector machine (SVM), naive Bayes (NB) decision tree (DT), random forest (RF), multi-layer perceptron (MLP), k-nearest neighbors (KNN), and deep neural networks (DNN)). Table IV summarizes the parameter settings used in the assessment process in order to ensure the best performance for each classiﬁer. Fig. 8 illustrates the obtained results with reference to (a) accuracy, and (b) F1 score. Indeed, using only the accuracy referring to the percentage of the correctly identiﬁed anomalies is not considered robust when dealing with imbalanced datasets (there is an unequal distribution of patterns over the classes), which is the case of the micro-moment data collected in this work. Therefore, the F1 score, which is more convenient to this scenario, has been employed as well for guaranteeing a fair performance assessment. It has been clearly seen that the proposed EBT classiﬁer outperforms the other classiﬁers under the three datasets. Accordingly, using EBT, more than 1.2%, 1.3%, and 2.7% accuracy improvement have been obtained compared to DNN (which is ranked in the second position) under QUD, DRED, and SiD, respectively. On the other hand, more than 1.8%, 1.85%, and 3.3% F1 score improvements have been achieved compared to DNN under QUD, DRED, and SiD, respectively. A real-world experiment was done by three research team users, where the system was installed in an academic building, as a proof-of-concept. However, since this framework includes many contributions, we could not elaborate on all of them in this study. Put simply, the experiment was done merely to ensure the overall ﬂow of the framework and evaluate the performance of some subsystems. Therefore, the following scenarios were used to evaluate the inﬂuence of the recommendations in a single user’s energy footprint: i) excessive Air Conditioner (AC) usage if the temperature outside is lower than inside and if the user is out of the room, ii) excessive light Fig. 8: Anomaly detection performance (a) accuracy, and (b) F1 score achieved under QUD, DRED, and SiD datasets. usage, if there is a sufﬁcient amount of natural light and if the user is out of the room, and iii) excessive appliance usages when the user is out of the room. The advice is offered to the end-user with a justiﬁcation for the trigger, an incentive to conserve energy and the choice to accept, reject, or ignore it. Moreover, the system is operational on either an Android or iOS supported mobile device. The three scenarios are shown in Fig. 9 on an Android/iOS supported device, with the ﬁrst scenario duplicated on an iOS device to illustrate system compatibility. The recommendations delivered to the user are conveyed in an explainable and persuadable manner, as seen in the preceding ﬁgure, to increase the user’s willingness to change. Typically, Fig. 9 (a) depicts the notiﬁcation sent to the user to indicate that the outdoor temperature is lower than the indoor and ask him/her to open the window instead of using the AC. In Fig. 9 (b), the user has been notiﬁed that the outdoor luminosity is higher than the indoor, and has been asked to open the curtains instead of using the light. In Fig. 9 (c), the user has been informed that the charger is on while he/she is absent, and has been invited to turn it off. Moreover, for each provided recommendation, an estimation of the actual saving cost (in Qatari Riyal) is included for pursuing the user to accept it. Fig. 9: Pop-up recommendations presented to the user, when (a) an AC is excessively used, delivered to iOS device, (b) a light lamp is unnecessarily ON, and (c) an appliance is operating when the user is away, delivered to Android device. depicted in Figure 5. Recommendations are composed of two different sections, which serve the explainable and persuasive recommendations scenario, respectively. The messages contain visual cues that facilitate users to understand the reason of each recommendation. Although a great deal of attention is devoted to developing RSs, less attention has been put to design reproduction toolkits platforms, hence, the reproducibility of existing RSs is still an issue and experimental comparison is often difﬁcult even impossible. To summarize, the main issues that impede a fair comparison between state-of-the-art RSs are (i) absence of speciﬁc datasets to test the RSs since most of the frameworks use their own data, (ii) data preprocessing that is used to correct uncompleted data and/or resample recorded data, which is usually made with reference to particular needs of the users, kinds of devices observed during the evaluation and monitoring period, and (iii) diversity of the evaluation metrics used to assess the performance of RSs, which makes the comparison an arduous task. Using what we have at hand, the proposed RS has been compared with various stateof-the-art RSs. Accordingly, Table V outlines a comparison in terms of the use of explanations, cloud computing, edge computing, real-time or near real-time implementation, and privacy preservation. In addition to using explanations to increase the users’ trust and the recommendation acceptance rate, this framework is the ﬁrst energy RS that has been run on edge devices. Therefore, it presents better privacy preservation potential than those implemented on cloud platforms since running a RS on edge devices helps overcome the privacy problems corresponding to the transmission and storage of sensitive data on the cloud. Moreover, the edge can deal TABLE V: Comparison of the proposed edge-based RS with existing RSs with reference to different characteristics. with the data in an intelligent way by implementing the machine learning algorithms used for analyzing energy data and detecting anomalous energy consumption on an edge server. Put simply, the intelligence and computing tasks have been brought to the edge device, which helps in reducing the latency and avoiding the bandwidth constraints and Internet dependency, by contrast to using cloud. In this paper, we present an implementation of a realcase scenario of our energy management system within Qatar University campus. Current ﬁndings suggest that by exploiting the advantages of an explainable recommender system, an open-source platform like Home-Assistant with the installation of sensors, smart plugs, and a consumption monitoring system, we are able to promote the users’ transition to new consumption patterns. It will be part of our future work to make more efforts to improve the framework, including evaluating the system performing with multiple users by expanding the number of sensors and smart plugs employed. Additionally, we propose adding more data visualization options as a persuasive method and extending optimization methods to enhance the overall energy-saving performance. Moving on, the use of different edge architectures and computing modes to improve the performance of edge computing will be investigated as well, such as binary ofﬂoading, model partitioning, and distributed computation. Finally, it is worth noting that further investigations are required by extending the number of participants to come up with a detailed evaluation of the whole system, which will be part of our future work. Accordingly, a mini-pilot survey will be conducted to identify the energy-saving characteristics of participants and provide foresight to predict how consumers can save energy on a daily basis. For the mini-pilot, a survey will be given in the beginning and another at the end to observe any change in answers after being involved in such an energysaving study. This paper was made possible by National Priorities Research Program (NPRP) grant No. 10-0130-170288 from the Qatar National Research Fund (a member of Qatar Foundation). The statements made herein are solely the responsibility of the authors.
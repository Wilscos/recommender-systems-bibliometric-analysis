Abstract—Long-standing data sparsity and cold-start constitute thorny and perplexing problems for the recommendation systems. Cross-domain recommendation as a domain adaptation framework has been utilized to efﬁciently address these challenging issues, by exploiting information from multiple domains. In this study, an item-level relevance cross-domain recommendation task is explored, where two related domains, that is, the source and the target domain contain common items without sharing sensitive information regarding the users’ behavior, and thus avoiding the leak of user privacy. In light of this scenario, two novel coupled autoencoder-based deep learning methods are proposed for cross-domain recommendation. The ﬁrst method aims to simultaneously learn a pair of autoencoders in order to reveal the intrinsic representations of the items in the source and target domains, along with a coupled mapping function to model the non-linear relationships between these representations, thus transferring beneﬁcial information from the source to the target domain. The second method is derived based on a new joint regularized optimization problem, which employs two autoencoders to generate in a deep and non-linear manner the user and itemlatent factors, while at the same time a data-driven function is learnt to map the item-latent factors across domains. Extensive numerical experiments on two publicly available benchmark datasets are conducted illustrating the superior performance of our proposed methods compared to several state-of-the-art crossdomain recommendation frameworks. Index Terms—Cross-domain recommendation systems, coupled autoencoders, latent factor models, deep learning. ECOMMENDER systems are automated applications that suggest products to consumers based on their observed interests [1]–[3]. A user’s preferences in items is stored in the form of interaction, such as numerical rating, within a rating matrix. As a result, users, items, and the rating matrix form a domain [4]. The issues of cold start, sparsity, inclusion of new customers or products, and so on may compromise the performance of recommenders [5]–[7]. While these problems are being studied from a single domain viewpoint, cross-domain recommender systems (CDRS) bring a different perspective to their solution [8]. The challenge of recommending speciﬁc items to consumers in a target domain (e.g., a resource-scarce market) by using data from neighboring high-resource domains, e.g., using data from a much larger market to boost recommendations in a target market, is central to the principle of cross-domain recommendation [9]–[13]. We hypothesize that data from one domain can be used to boost advice in a different domain. Such an approach has attracted the interest of many researchers in the recent years, e.g., [14]–[22]. The cross-domain recommendation problem (CDR) has been explored under different perspectives and scenarios. In general, CDR methods can be divided into three major categories, that is content-based frameworks, embeddingbased frameworks and rating pattern-based approaches [16]. Content-based approaches examine the CDR problem from a content-level relevance point of view. Particularly, this type of methods aim to link various domains by capturing and utilizing similar content information, such as, user-generated reviews [19]. Contrary to these methodologies, embeddingbased approaches explore the CDR problem from a userrelevance or item-relevance perspective. Exploiting common users and/or common items, this category extracts embedding knowledge (e.g., user/item latent factors) and then transfer it across domains through domain adaptation techniques such as neural networks [23], [24] and transfer learning [25]– [27]. Finally, rating pattern-based approaches aim to transfer information such as rating patterns from the source to the target domain [28]–[30]. The proposed methods belong to the category of embedding-based approaches. In more detail, we explore an item-level relevance cross-domain recommendation task. We assume two related domains, that is, the source and the target domain, which contain common items without sharing any additional information regarding the users’ behavior, and thus avoiding the leak of user privacy. Our contribution concerns two novel coupled autoencoder-based deep learning methods for cross-domain recommendation: Cross - Domain Recommendation) aims to simultaneously learn a pair of autoencoders in order to reveal the intrinsic representations of the items in the source and target domains along with a coupled mapping function to model the non-linear relationships between these representations; thus it is able to transfer beneﬁcial information from the source to the target domain. Autoencoder Cross-Domain Recommendation) is derived based on a new joint regularized optimization problem, which employs two autoencoders to generate in a deep and non-linear manner the user and item-latent factors; at the same time a data-driven function is learnt to map the item-latent factors across domains. Different from other studies we optimize the autoencoders jointly, thus learning in an end-to-end fashion the intrinsic relationships across domains. Furthermore, we don’t use scenarios with shared users across domains requiring the transfer of sensitive information regarding the user’s behavior, but we consider the item-relevance scenario, which preserves the user’s privacy since we share only the low dimensional itemlatent factors that have no information about the users. The rest of the paper is organized as follows: section II gives an overview of the research related to ours; section IV analyzes the proposed methods; section V validates experimentally the proposed methods using two public datasets as source and target domains; ﬁnally, section VI summarizes our contributions and gives future directions. In literature, there are plethora of studies attempting to address the challenging recommendation issues that emerge, that is, the data sparsity and the cold start by developing CDR strategies. In recent years, the problem of CDR has been tackled from multiple perspectives and different assumptions, thus rendering this problem particularly difﬁcult to describe under a unique generic framework [15], [16]. To that end, in this section several representative studies are brieﬂy presented. Speciﬁcally, Singh et al. [31] used a matrix factorization approach to transfer information across domains by sharing the user latent factor. Pan et al. [32] employed a principled matrix-based transfer learning methodology to extract and transfer knowledge concerning the users and items from the source to the target domain. Agarwal, et al. [33] proposed a collective matrix factorization method exploiting correlated information across domains via localized factor models to tackle the sparsity problem in the target domain. Moreno et al. [18] exploited the information from multiple domains in order to improve the recommendation accuracy for the target domain. Lian et al. [34] combined collaborative ﬁltering and content-based ﬁltering into a multi-view neural network to tackle the CDR problem. Aiming to overcome the data sparsity problem other studies such as [35], [36], [37], [38] employed cluster-level matrix factorization techniques to share common information between users and items across domains. Recently, Man et al. [24] used a matrix factorization method under the user sharing assumption to extract the latent factors models and a multi-layer perceptron to model and transfer valuable knowledge across domains. Kang et al. proposed a semi-supervised mapping to recommend items for cold start users by exploiting the distribution of shared users across domains. Elkahky et al. [39] proposed a deep learning methodology to map shared users and items to a hidden space where the similarity between users and items is maximized. Zhong et al. [17] utilized a deep learning architecture based on the autoencoders and an attention mechanism to extract and fuse information from multiple closely-related domains, thus enhancing the rating prediction accuracy. Zhu et al. [40] proposed a graphical and attentional framework for the CDR problem based on the rating and content information across domains. Additionally, Kanagawa et al. [41] employed an unsupervised domain adaptation approach by reformulating the recommendations as an extreme classiﬁcation task. Zhao et al. [42] captured the interactions of different domains as a whole, and propagated user preferences, based on graph neural networks. He et al. [22] proposed a codebook transfer learning procedure to learn the proper codebook scale balancing both the computational complexity and prediction accuracy for CDR. Gao et al. [21] examined the CDR from a data privacy perspective without sharing any information about the users’ data. Ma et al. [43] addressed the problem of insufﬁcient common users by employing a fully connected trust-aware deep learning framework to discover the intrinsic relationships between common and non-common users. Iwata et al. [14] proposed a CDR architecture assuming that the user and item-latent factor models in different domains derived from a common Gaussian distribution. Hu et al. [44] used deep cross connection networks to exploit and transfer information across the domains. Li et al. [45] exploited the merits of the dual transfer learning and the latent embedding methodology to tackle the CDR problem. In more details, an orthogonal matrix was employed to transfer the knowledge from the source to target domain. Yuan et al. [30] utilized a deep domain adaption model to extract and transfer patterns from rating matrices in different domains, without considering any auxiliary information. Contrast to above-mentioned methods, other studies focused on extracting and utilizing content information to tackle the CDR problem. Xin et al. [19] proposed a CDR framework utilizing review text to alleviate data sparsity limitations. Along the lines of the previous method, Fu et al. [20] utilized stacked denoising autoencoders to fuse review text with the rating matrices to tackle the data sparsity and cold start problems in the target domain. Zhao et al. [46] extracted multiple aspects of users and items based on review documents aiming to learn aspect correlations across domains via an attention mechanism. Similar to our work, the study in [24] belongs to the embedding-based frameworks considering also an item-level relevance cross-domain recommendation task. However, this approach employs matrix factorization frameworks to extract the user and item-latent factors, thus rendering it limited only to capture linear and rather shallow features from the complex and non-linear collaborative relationships of the users and items. Furthermore, taking into consideration that the CDR problem is a domain adaptation procedure the learning of the latent factors of the source and target domains independently may result in poor performance, since there is no inﬂuence or transferred knowledge between the domains during the learning stage. Different from the above-mentioned approach, in our study the goal is to capture and model the underlying relationships between the users and items from the source and target domain in a deep and non-linear manner; we employ two novel crossdomain recommendation frameworks based on the coupled autoencoders. We optimize jointly the autoencoders of the source and the target domain and this way we can transfer valuable information across domains during the training stage. Autoencoders have also been employed in other studies addressing different cross-domain recommendation scenarios, such as multi-domain recommendation tasks [17], [45], [30] and content-based recommendation tasks [19]. Nevertheless, in these methods the autoencoders of the source and target domains are trained independently. This procedure is piecemeal and thus sub-optimal, since there is no transfer or coupled learning the source domain and the target domain and hence no inﬂuence from one to another during the training process. Contrary to these learning procedures, in this study we argue that better and more meaningful intrinsic representations can be derived, not only based on the available input data in each domain separately, but also taking into account the internal relationships that exist across domains during the learning of the autoencoders. Table I summarizes all the required notations of this study. In the under-examined CDR problem an item-level relevance scenario is considered in which there are two domains containing the same items (e.g., movies) without necessarily sharing the same users. In the literature the two domains are often referred as the ’source’ and ’target’ domains. Without loss of generality, let R∈ Rand R∈ Rbe the rating matrices representing the ratings between m items and n users for the source and the target domain respectively, where R(i, j) represents the rating of the user j for the item i in the source domain and R(i, j) represents the corresponding rating in the target domain. Furthermore, we denote as M= [m; m, ...] = R, M= [m; m, ...] = R the item rating matrix of the source and target domain and U= [u; u, ...] = R, U= [u; u, ...] = Rthe user rating matrix of the source and the target domain, respectively. In general, the item rating vector m∈ Rdescribes the rating relationship between the item i and all the users in the source domain, whereas the user rating vectors u∈ R describes the rating relationship between the user i and all the items of the source domain. Accordingly, the item and user rating vectors m, urepresent the corresponding rating relations of the target domain. Taking into consideration that both domains share the same items, our primary goal is to exploit and extract knowledge from the source domain and transfer it to the target domain; this way it is possible to make recommendations for items with no ratings or little information, thus tackling the data sparsity and the cold-start problem in target domain. In more detail, this scenario can be seen as a domain adaptation procedure (transfer learning) [47], which aims to describe the unknown mathematical relationships between the source and target domains. Nonetheless, tackling this kind of problem two major questions emerged and need to be answered: (i) what to transfer - which information is beneﬁcial to transfer across the domains; and (ii) how to transfer - which learning procedure could be employed to transfer the knowledge. To this end, we address these crucial questions by developing two novel CDR frameworks based on a coupled autoencoder approach. In this section, we derive two coupled autoencoder frameworks that can be used for the CDR problem. Speciﬁcally, the ﬁrst one, named CACDR employs a coupled autoencoder method to capture and model the complex relationships between the users and items from the source and target domain, while the second one, named LFACDR can be considered as an expansion of the former one utilizing the autoencoders in order to learn in a deep and non-linear manner the user and item-latent factors models in the respective domains. After an initial modeling of domain-speciﬁc information in the source, both methods transfer that information to the target domain via a multi-layer perceptron network. It should be highlighted that only the item latent factors are transferred across domains, without sharing any sensitive information regarding the user’s behavior and violating privacy politics. Autoencoders have demonstrated ground-breaking performance in the unsupervised feature learning domain. Formally, the autoencoder aims to reveal and describe the intrinsic hidden representation of the input by copying its input to its output [48]. However, the autoencoder as a single domain procedure produces intrinsic representations based only on the input data, thus ignoring the valuable underlying relationships that exist across multiple domains. On the other hand, the coupled autoencoder model is able to capture these internal relationships and better representations can be derived as the domains inﬂuence each other. In particular, the proposed coupled autoencoder based method for CDR, called CACDR consists of three stages. The ﬁrst stage employs two autoencoders to reveal and learn the intrinsic hidden representations of the item rating matrices, namely M, Mof the source and target domain, respectively. The second stage uses a multilayer Perceptron network (MLP) to model the relationship across domains by learning a mapping function between the intrinsic representations of the source and target domain. In the previous two stages the autoencoders and the mapping function are trained independently. So we introduce coupling at the third stage in order to to capture the underlying complex relationships across domains and transfer beneﬁcial knowledge from one domain to another during the training procedure. Finally, recommendations can be made for a new item in the target domain based on the intrinsic representations of the same item in the source domain. The complete proposed methodology is depicted in Fig. 1. 1) Coupled Autoencoder-Based : Let M, Mbe the item rating matrices of the source and target domains respectively. Then the corresponding source and target autoencoders, which learn the hidden intrinsic representations of the two item matrices, can be obtained by minimizing the following reconstruction errors: whereˆM,ˆMdenote the estimated item rating matrices of the source and the target domain, respectively. Formally, the autoencoder comprises of the encoding E(.) and decoding D(.) process. or equivalently, where W, b(i = 1, . . . , L) denote the weight matrices and the bias terms for the encoding layers of the source autoencoder, ϕ(.) is the activation function ReLU, L stands for the number of hidden layers, X∈ Ris the output of the source encoder E(.) and k  n. Similarly, the intrinsic representation of the target item rating matrix M∈ Rcan be deﬁned as or equivalently, where W, b(i = 1, . . . , L) denote the weight matrices and the bias terms for the encoding layers of the target autoencoder, ϕ(.) is the activation function ReLU, L stands for the number of hidden layers, X∈ Rdenotes the output of the target encoder E(.) and k  m. Decoding process: Accordingly, the reconstructed item rating matricesˆM,ˆMcan be derived by where D(.) denotes the decoding procedure of the source autoencoder and D(.) is the decoding procedure of the target autoencoder. Note that both decoders consist also of L fully connected layers. To put in a nutshell, the encoding procedure aims to learn a concrete representation of the input in order to capture the complex relationships between the items and users. On the other hand, the decoding process seeks to decode the hidden representations back to the original item rating matrices. The accurate decoding procedure enables the autoencoder to learn the rating patterns between items and users and make rating predictions for new items and users. 2) Non Linear Mapping: After obtaining the intrinsic representations of the item rating matrices, an MLP is employed to capture and model the underlying relationship between the intrinsic representations of the source and target domain (X, X), thus transferring the appropriate knowledge from the source to target domain. Mathematically, the non linear mapping function F(.) can be written as or equivalently, where W, b(i = 1, . . . , L) denote the weight matrices and the bias terms, ϕ(.) is the activation function ReLU, L stands for the number of hidden layers andˆXis the estimated intrinsic representation of the target domain. 3) Cross-domain Rating Predictions: The goal of the proposed framework is to recommend new items in the target domain leveraging upon the knowledge of the same items belonging in the source domain. In particular, given an item j in the target domain, the following methodology is used to recover its predicted rating: 1. The same item is found in the source domain and its intrinsic representation is obtained by employing the autoencoder of the source domain (encoding procedure) according to equation (2). 2. The corresponding intrinsic representation of the item in the target domain can be estimated via the intrinsic representation of the item in the source domain and the MLP network based on relation (6). 3. Finally, the predicted rating of the item in the target domain is recovered based on target autoencoder (decoding procedure) according to relation (5). 4) Model Learning: The most critical part of the proposed architecture is the optimization and coupling of the autoencoders along with the mapping function. However, by learning the autoencoders ﬁrst and then the mapping function (based on the estimated intrinsic representations) may lead to poor performance, since the autoencoders and the mapping function are optimized independently. In other words, there is no transfer or coupled learning between the source domain (i.e., source item rating matrix) and the target domain (i.e., target item rating matrix). This procedure is piecemeal and thus suboptimal, since there is no inﬂuence from one to another during the training process. Nevertheless, this methodology can be used as initialization process of the model. In light of the fact that the ultimate goal of the CACDR method is to efﬁciently predict the item ratings of the target domain (or the item rating matrix, M= R), the proposed objective function for optimizing jointly the two autoencoders (source and target) along with the MLP network may be written as: Note that now in relation (7) the source encoder E(.), the mapping neural network F(.) and the target decoder D(.) are all explicitly involved in the reconstruction of the desired outputˆM. Hence, in order to couple the two autoencoders with the mapping function a coupled deep network is employed, where its ﬁrst network component is the source encoder, the second network component is the mapping neural network and its ﬁnal network component is the target decoder. Fig. 1b illustrates the proposed coupled architecture. Having obtained, the stacked network architecture the back-propagation algorithm is used to optimize (7). Algorithm 1 summarizes the proposed methodology. As previously mentioned, the autoencoders constitute an ideal mathematical tool to reveal and learn complex low dimensional representations while at the same time they preserve the underlying structure of the input data. This consideration motivates the ensuing cross domain recommendation methodology that a joint optimization problem is proposed in order to recover in a deep and non-linear manner the user and itemlatent factors in both source and target domains. To this end, for each domain two autoencoders are employed to jointly learn the intrinsic representations of user and item rating matrices and decompose the rating matrix into two low-rank matrices, that is the user and item-latent factor matrix. The proposed framework is shown in Fig. 2. 1) Latent Factor Modeling based on Autoencoders: Consider the user rating matrix U∈ R, the item rating matrix M∈ Rand the rating matrix R∈ Rof the source domain. To obtain the user and item-latent factors of the source domain the following joint constrained optimization problem is proposed, which includes one autoencoder for the items and one autoencoder for the users. Hence, the proposed problem is formulated as where D(.), E(.) denote the decoding and encoding procedure of the ﬁrst source autoencoder (items), X∈ R is the item-latent factor matrix derived from the output of the ﬁrst encoder, D(.), E(.) stand for the decoding and encoding procedure of the second source autoencoder (users) and Y∈ Rdenotes the user-latent factor matrix derived from the output of the second encoder. It should be highlighted that the encoding and decoding processes of two autoencoders can be written alternatively according to equations (2) and (4). The two autoencoders aim to learn jointly the intrinsic representations of the item and user rating matrices. At the same time, through the proposed constraint optimization problem these intrinsic representations that is the Xand Yact as the desired item and user-latent factor matrices, respectively. Note that similar procedure can be employed to derive the corresponding item and user-latent factor matrices Xand Yof the target domain. 2) Non Linear Mapping: Having acquired the latent factor matrices {X, Y, X, Y} of items and users in the source and target domain, similar to the previous proposed method, an MLP is again used to learn the mapping function between the item latent factor matrices of the source and target domain (X, X). This can be expressed as follows, or equivalently, where W, b(i = 1, . . . , L) denote the weight matrices and the bias terms, ϕ(.) is the activation function ReLU, L stands for the number of hidden layers andˆXdenotes the estimated item latent factor matrix of the target domain. 3) Rating prediction: In general, given a new item in the target domain with little information, we are not able to calculate an accurate latent factor for making recommendation. In light of this, the corresponding latent factor is learnt from the source domain and a latent factor is derived for the same item in the target domain via the mapping function (9). To be more speciﬁc, the predicted rating between item i and user j in the target domain is given by the following relation, whereˆX(i, :) ∈ Rdenote the estimated item-latent factor of item i in the target domain based on the corresponding item-latent factor of item i in the source domain via relation Algorithm 1 : CACDR method Require: The item rating matrices of the source and target domain M∈ R, M∈ R Ensure: The predicted rating matrix of the target domain {Stage A: Initialization} intrinsic representation X∈ Rof the matrix M via (2). intrinsic representation X∈ Rof the matrix M via (3). function from Xto Xvia (6). {Stage B: Coupled Learning} mendation for items in the target domain. (9) andˆY(i, :) ∈ Rstands of the row vector of matrix ˆY, representing the user-latent factor of user j in the target domain. 4) Model Learning: Similar to the previous procedure the training can be divided into two stages: the ﬁrst stage is the initialization and the second stage is the coupling. Initialization: First, the autoencoders are trained to obtain the item and user-latent factors of the source and target domain and then the mapping function is learnt. Coupling: Since the aim of the proposed method is to accurately predict the ratings of new items in the target domain, the objective function for jointly optimizing the autoencoders extracting the item and user-latent factor matrices along with the MLP network is given by where From relation (11) it is easy to verify that the source encoder for the items E(.), the target decoder for the users E(.) and MLP network are all explicitly involved in the reconstruction of the desired outputˆR. Thus, the three network units can be coupled together by jointly optimizing them through the back propagation algorithm. Fig. 2b demonstrates the proposed coupled framework. The overall methodology is summarized in Algorithm 2. To validate the efﬁcacy and applicability of the two proposed methods, extensive experiments were conducted in the context of the CDR problem. In particular, this study examines an item-level relevance cross-domain recommendation scenario, where two domains (source and target) share common items (e.g., movies) and contain different users. Algorithm 2 : LFACDR method Require: The item rating matrices of the source and target domain M∈ R, M∈ Rand corresponding user rating matrices U∈ R, U∈ R Ensure: The predicted rating matrix of the target domain {Stage A: Initialization} the item-latent factor matrix X∈ Rand the userlatent factor matrix Y∈ Rvia (8). the item-latent factor matrix X∈ Rand the userlatent factor matrix Y∈ Rvia (8). function from Xto Xvia (9). {Stage B: Coupled Learning} mendation for items in the target domain. Datasets: Two publicly available benchmark datasets were employed to demonstrate the merits of the proposed recommendation frameworks. Namely, we used the MovieLens and Netﬂixdatasets, which contain a large portion of same movies, thereby forming an item-level relevance scenario. According to IMDB information more than 5500 movies are the same across MovieLens and Netﬂix datasets. In light of this, the MovieLens is taken as source domain and Netﬂix is used as target domain, seeking to ameliorate the recommendation performance in target domain by exploiting and transferring valuable knowledge from the source domain. Moreover, due to the size of the datasets we followed the same methodology as in [21] by randomly sub-sampling a certain portion of users along with their respective ratings, ensuring users had enough number of interaction in each domain. Following this preprocessing stage we ended up with four different datasets with different sparsity levels. Table II provides the detailed statistics of the four resulting datasets. Experimental Settings: In our extensive experiments the two datasets were randomly divided into the training set (80%) and the testing set (20%). Regarding the testing set, we removed all the rating information from the target domain (Netﬂix), thus considering these entities as cold-start movies. Furthermore, taking into account that different training and testing sets may affect the recommendation performance, this splitting procedure was repeated 10 times and the average results were reported. Finally, it should be noted that we normalized the scale of ratings between 0 and 1 following the same strategy as in [45]. Parameter Settings: The parameters of our proposed methods are determined to be ideal via exploration of the parameter space. Concretely, for the ﬁrst method, referred as CACDR the sizes of the autoencoders layers were set to {256, 128, 64, 64, 128, 256}, the sizes of the MLP layers are set to {64, 128} and the batch size was 32. Regarding the training of the CACDR method for the initialization stage the number of epochs is 250, the learning rate was set to 10and the l-2 regularizer term was 10. Accordingly, for the coupling stage the number of epochs was set to 300, the learning rate and regularization term was 10. To proceed further, for the second proposed method, called LACDR the sizes of the autoencoders layers were set to {512, 256, 128, 128, 256, 512}, the sizes of the MLP layers were set to {128, 256} and the batch size was 500. Furthermore, for the initialization training stage the number of epochs was set to 250, while the learning rate and the regularizer term were 10and 10, respectively. Additionally, for the coupling training stage the number of epochs was set to 300 and the learning rate was 10, while the regularizer term remained constant. Finally, the Adam optimizer was employed to train the proposed models and the ReLU was used as activation function. Loss function and Evaluation metrics: Concerning the loss function, in this study we employed the Masked Root Mean Squared Error loss following the approach from [49], since the zero values should be ignored during the training stage of the proposed models. In addition, to evaluate the recommendation performance we adopted the Root Mean Squared Error (RMSE) and Mean Absolute Error (MAE) metrics. Compared methods: To showcase the added value of the proposed methods (CACDR and LFACDR), we compared with the following CDR frameworks:  DDTCDR [45]: It is a recent state-of-the-art CDR model. In more details, DDTCDR exploits the merits of the dual transfer learning and the feature embedding method to transfer knowledge across domains. Furthermore it employs a orthogonal mapping to preserve user relations in latent space.  DARec [30]: Collaborative Cross Networks (CoNet) is able to transfer valuable knowledge across domains by employing deep cross connection networks.  EMCDR [24]: This CDR framework utilizes a matrix factorization methodology to learn the latent factors and then a multi-layer perceptron is used to model the mapping function between the latent factors of the source and the target domain. This method provides four frameworks and we chose the two best ones, namely the MFEMCDR MLP employing MF (matrix factorization) as its latent factor modeling and the BPR EMCDR MLP employing BPR (bayesian personalized ranking) as its latent factor modeling.  CST [32]: It compacts the sparsity problem and enhances the recommendation performance by transferring the latent factors obtained from the source domain into the target domain. The model employs matrix factorization to deduce the user and item-latent factors in the source domain, and transfer them into the target domain via a regularization method.  LFM [33]: It uses a collective matrix factorization method exploiting correlated information across domains via Localized factor models. Each user and item has a global latent factor common across domains. Table III summarizes the average performance results in terms of RMSE and MAE for the two examined datasets presented in Table II. It is evident that the proposed coupled autoencoder-based frameworks, (i.e., CACDR and LFACDR) gave better results than the other CDR methods. Moreover, it is noteworthy that both proposed methods (and especially the LFACDR method) were able to maintain low RMSE and MAE values for different sparsity values of the datasets compared to the other baseline models, where their performance degraded for high levels of sparsity level. Although the DDTCDR and DARec models exhibited good results, our models performed even better and that can be attributed to the following reasons. Firstly, EMCDR methods utilize matrix factorization techniques to obtain the latent factor models, thus these methods can only capture rather shallow and linear characteristics from the datasets compared to our models that employ deep coupled autoencoders allowing them to capture more complex and non-linear features from the collaborative relationships of the users and items. Secondly, although the DDTCDR and DaRec models employ non-linear functions to extract the latent factors (autoencoders) the learning of the latent factors of the source and target domain along with the mapping function are learnt separately, and hence the transferred knowledge between the domains during the learning stage is rather limited. Different from that, due to the coupled learning stage analyzing in Sections IV-A4 and IV-B4, the autoencoders of the source and the target domain were optimized jointly and the nonlinear relations across domains could be transferred much more effectively during the training stage. To demonstrate the impact of the coupled learning on the recommendation performance of the proposed methods, we conduct some experiments with and without the coupled learning procedure during the training procedure of our methods. According to Table IV, the coupled learning notably improves the performance of the proposed methods, thus validating our claims that the coupled autoencoders are able to capture not only the existing relationships in each domain separately, but more importantly to model the underlying relationships between the source and target domains. The latent dimension constitutes a crucial factor effecting the efﬁcacy of different cross-domain recommendation models, hence in this experiment the impact of latent dimension (k) on the proposed models is investigated. In more details, ﬁxing the other parameters of our CDR methods, we examined a broad range of latent dimensions (k), namely 8, 32, 64, 128, 256. Table V summarizes the results. The best results for the CACDR and LFACDR occured when the latent dimension was set to 64 and 128 respectively. It should be highlighted that the LFACDR method exhibited better performance compared to the CACDR method in all cases. This ﬁnding is mostly attributed to the fact that the LFACDR method exploits not only the information of the items but also the information deriving from the users. Note that only the item latent factors are transferred across domains, without sharing any sensitive information regarding the user’s behavior and violating privacy politics. Additionally, from table V we can deduce that the performance of the proposed models was only slightly affected by the change of the latent dimension, thus indicating their robustness. We have explored an item-level relevance CDR task where the source and the target domain contain common items without sharing any additional information regarding the users’ behavior, and thus avoiding the leak of user privacy. We proposed two novel coupled autoencoder-based deep learning methods for CDR that are able to represent the items in the source and target domains along with their coupled mapping function to model the non-linear relationships between these representations. The second method seeks to model the user and item-latent factors, while the ﬁrst one does not make this assumption. Different from other studies that consider scenarios with shared users across domains requiring the transfer of sensitive information regarding the user’s behavior, in our case the considered item-relevance scenario preserves the users’ privacy; we share only the low dimensional itemlatent factors that have no information about the users. We demonstrated some very promising results, in comparison to some popular methods on cross-domain recommendation. We used portions of the MovieLens and Netﬂix datasets with different sparsity levels and quantiﬁed the effect on our results. We also demonstrated the effect of learning the mapping function from one domain to the other, which turns out to be a signiﬁcant part of the proposed method.
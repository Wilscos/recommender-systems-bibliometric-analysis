Singapore University of TechnologySingapore University of Technology henryhan88888@gmail.comhui_chen@mymail.sutd.edu.sg The explosively generated micro-videos on content sharing platforms call for recommender systems to permit personalized microvideo discovery with ease. Recent advances in micro-video recommendation have achieved remarkable performance in mining users’ current preference based on historical behaviors. However, most of them neglect the dynamic and time-evolving nature of users’ preference, and the prediction on future micro-videos with historically mined preference may deteriorate the eectiveness of recommender systems. In this paper, we propose to explicitly model dynamic multi-trends of users’ current preference and make predictions based on both the history and future potential trends. We devise the DMR framework, which comprises: 1) the implicit user network module which identies sequence fragments from other users with similar interests and extracts the sequence fragments that are chronologically behind the identied fragments; 2) the multi-trend routing module which assigns each extracted sequence fragment into a trend group and update the corresponding trend vector; 3) the history-future trend prediction module jointly uses the history preference vectors and future trend vectors to yield the nal click-through-rate. We validate the eectiveness of the proposed framework over multiple state-of-the-art micro-video recommenders on two publicly available real-world datasets. Relatively extensive analysis further demonstrate the superiority of modeling dynamic multi-trend for micro-video recommendation. • Information systems → Recommender systems. Micro-video Recommendation; Dynamic User Modeling; Futureaware; Multi-trend Routing ACM Reference Format: Yujie Lu, Yingxuan Huang, Shengyu Zhang, Wei Han, Hui Chen, Fei Wu, and Zhou Zhao. 2021. Multi-trends Enhanced Dynamic Micro-video Recommendation. In Proceedings of the 29th ACM International Conference on Multimedia (MM ’21), October 20–24th, 2021, Chengdu, Sichuan, China. ACM, New York, NY, USA, 11 pages. https://doi.org/10.1145/nnnnnnn.nnnnnnn In recent years, the amount of searchable micro-videos has increased dramatically and exacerbated the need for recommender systems that can eectively mine users’ preference and identify potentially interested micro-videos in a personalized manner. Due to the powerful representation learning capacity, the rapid development of deep learning techniques has nourished the research eld of Such a development also gives rise to diverse models for video recommendation, which can be roughly categorized to collaborative ltering [2,29], content-based ltering [11,16,44,48,77], and hybrid ones [5, 6, 72]. Compared with professional video recommendation, micro-video recommendation poses many unique challenges. For example, microvideos typically lack of meta-data (e.g., genre, director, actor/actress, which are commonly available in professional videos), leading to semantic gap in representation [9]. Moreover, users might be interested in multiple topics of videos simultaneously, i.e., diverse interests, and yield interests to dierent extends (e.g., like, follow, click), i.e., multi-level interests [39]. Recent years have witnessed much progress to confront the above challenges in this vein. THACIL [9] employs temporal block splitting and hierarchical multi-head attention to model diverse interests across blocks. ALPINE [39] models users’ dynamic interests by constructing temporal behavior graph and devising the temporal graph-based LSTM. MTIN [30] considers personalized importance decay over time and diverse interests using item-level temporal mask and group routing mechanism, individually. In spite of the great advances of these works, we argue that solely modeling the historical behaviors deteriorates the capacity of user modeling capturing diverse and dynamic users’ interests. For example, MTIN [30] assigns historically interacted items to one of six interest groups and accordingly updates the six interest vectors. Since users’ interests are by nature dynamic, the interests learned from the logged data might be out-of-date or at least limited to the history, falling short to recommend fresh items and hurting the recommendation diversity. Therefore, capturing dynamic interest trends based on (but not limited to) historical items can be an indispensable function for high-quality recommender systems. Towards this end, we devise the multi-trends framework for dynamic micro-video recommendation, abbreviated as DMR. We start from the perspective that trends refer to the possible future directions of the current interest implied by the logged interactions. Since we have no access to items interacted in the future, DMR encapsulates an implicit user network construction module that rst identies sequence fragments that yield similar interests as the current sequence from similar users. Then, we constructs possible trending sequences by extracting the sequence fragments that are chronologically behind the identied ones. We note that some trending sequences may share similar interests and representing each sequence as an individual interest may introduce unnecessary noises and computation costs. Towards this end, inspired by [30,38], we devise a multi-trend routing module that transforms multiple trending sequences to fewer number of multiple trend interest vectors. However, extracting trending sequences and mapping them to trend vectors for each testing inference might hurt the serving eciency of industrial deployment. Thus, multi-trend routing module constructs a xed-length trend memory for each user and read-writes the memory during training. For memory read-writing, we propose to assign trending sequences to memory slots in a soft way and power the process with attention mechanisms. During inference, we directly take the o-the-shelf history/trending vectors without extracting or transforming trending sequences, and thus addressing the eciency issue. Predictions are performed with the history-trend joint prediction module. To this end, DMR framework makes predictions based on both the history interests implied by the historical behaviors as well as multi-trends implied in similar users, which helps to capture even more diverse and dynamic interests compared with existing micro-video recommenders. We validate the eectiveness of DMR on micro-video recommendation benchmarks. The substantial improvement over state-of-the-art comparison methods and in-depth model analysis demonstrate the superiority of modeling multi-trend for micro-video recommendation. Overall, this paper has the following contributions: •We propose to capture even more diverse and dynamic interests beyond the historical behaviors by modeling the possible interest trends for micro-video recommendation. •We devise the novel DMR framework that encapsulates the implicit user network construction module, which extracts trending sequences from similar users, the multi-trend routing module, which performs dynamic trending memory readwrite and improves the inference eciency at the inference stage, and the history-trend joint prediction module. •We conduct extensive experiments on micro-video recommendation benchmarks, of which the results show DMR framework achieves high-quality recommendation with improvement on both accuracy and diversity. The methods for recommendation can be generally classied into two categories. Early algebraic approaches adopted collaborative ltering [15,27,35,54] or model-based methods [13,34,52,63] to estimate user-item correlations and make predictions about users’ future interests. Collaborative ltering (CF) assumes that users sharing the same opinion on one issue tend to have more similar opinions on other issues [37], and thus it makes predictions specic to each user through information gleaned from other users [60]. Due to the extreme high computational complexity and data sparsity in traditional CF [13,47], model-based methods alleviate this overhead by mapping user-item interactions into matrix entries, then apply factorization to the characteristic matrix to build nonlinear models that estimate correlations (i.e. preferences) between every pair of user and item and employ Hidden Markov models (HMM) to capture temporal trends of preferences [52]. Recently, as the major advances in deep learning techniques, a wealth of research has sprung up on incorporating them into recommender systems. Most of work reformulated traditional estimation problem as learning task based on deep neural networks [18,25,56]. In the eld of video recommendation, representative work focuses on content-based learning [10,12,64,66], in which features of videos are extracted into embedding vectors and then matched with user representations that indicate individual preference. To name a few, Chen et al. [7]tackled the item- and component-level implicit feedback issue in multimedia recommendation by learning independent video and users characteristics in a unied hierarchical attention network and then reckoning pair-wise scores as a measure of user preference. Although these works improve the accuracy of user modeling, they lack a clear partition of history and future for the given dataset and hence may encounter prediction bias due to mixing the two parts together. Our work adopts a multi-step time partition and similarity matching approach to alleviate this issue. Modeling latent user interest from historical behaviors is commonly used in recommender systems. In the past two decades, a variety of approaches have been proposed, ranging from Markov chains [22, 23,46,52,55] and traditional collaborative ltering [15,36,53] to deep representation learning [50,76]. The approaches based on Markov decision processes implicitly track user state dynamics to predict future behaviors. For example, Rendle et al. [52]captured long-term user interest via personalized transition graphs over underlying Markov chains. He and McAuley[23]integrated similarity-based methods with Markov chains smoothly in personalized sequential recommender systems. Besides, temporal collaborative ltering is proposed to deal with the drifting user preferences. Koren[36]oered a paradigm that tracks time changing behaviors throughout the life span of the data. With the development of deep learning, more and more researchers adopted deep neural networks (DNN) to model the user dynamics in recommender systems. Particularly, Hidasi et al. [28] applied recurrent neural networks (RNN) to model the whole session and introduced a new ranking loss function to make recommendations more accurate. Tang and Wang[59]utilized convolutional lters to embed a sequence of recent items into an "image" in the time and latent spaces as well as learn sequential patterns as local features of the image. Wu et al. [71]considered session sequences as graph structured data and used graph neural networks (GNN) to capture complex transitions of items. Recently, self-attention mechanism [61] has been widely employed in recommender systems[32]. For instance, Wu et al. [69]proposed a Contextualized Temporal Attention Mechanism to weigh historical actions’ inuence on not only what action it is, but also when and how the action took place. However, previous work does not consider the inuence of future information when modeling user behaviors in history sequences. In this work, we constructed a user-item heterogeneous graph to capture future interactions of each user with items. In this section, we rst formulate the micro-video recommendation problem, and then introduce the proposed framework in detail. As illustrated in Figure 1, our proposed DMR framework for dynamic micro-video recommendation mainly comprises of three modules:1) Pearson Correlation Coecient enhanced implicit user network module; 2) A history-future multi-trend joint routing module; 3) A multi-level time-aware attention module. In a typical micro-video recommendation scenario, we have a set of users and a set of micro-videos, which can be denoted as 𝑈 = {𝑢, 𝑢, 𝑢, ...,𝑢}and𝑉 = {𝑣, 𝑣, 𝑣, ..., 𝑣}respectively. Let 𝐼= {𝑥, 𝑥, ..., 𝐼}represent the sequence of interacted microvideos𝑥 ∈ 𝐼of user𝑢 ∈ 𝑈, which is sorted in a chronological order according to the timestamp of each interaction, and𝑥denote the micro-video that the user𝑢has interacted with at timestamp𝑡. The interaction sequence𝐼is split into𝐼and𝐼which represent the micro-videos clicked by the user and the ones not clicked respectively. Given the user’s historical micro-video interaction behaviors, the investigated goal of the micro-video recommendation task in this paper is to predict the probability that the new candidate micro-video will be clicked by user𝑢. Notations are summarized in Table 1. Specically, each instance is represented by a tuple(𝐼, 𝐴), where𝐼denotes the set of items interacted by user𝑢,𝐴the features of target item𝑖including the information of interaction timestamp and micro-video embeddings. Through implicit user network module, we extract relative future sequence of user𝑢based on𝐼 and their similar users’ historical interaction𝐼, 𝑢∈ 𝑈. The detail will be illustrated in Section 3.3. To model diverse user preferences dynamically, DMR learns a function𝑓for mapping history trend set𝑇and future trend set 𝑇into user representations, which can be formulated as: where−→𝑒∈ Rdenotes the representation vector of user𝑢,𝑑the dimension. Besides, the representation vector of target micro-video 𝑖 is obtained by an embedding function 𝑔 as: where−→𝑒∈ Rdenotes the representation vector of target microvideo 𝑖. Based on the learned user representation vector and micro-video representation vector, the probability of candidate micro-video is calculated using the likelihood function 𝑃 as: where−→𝑒is the embedding of target item𝑖from set of micro-videos 𝑉. Our framework outputs the click probabilities of the candidate micro-video to rank the personalized recommendation list. Then the system provide precise and diversied recommendation for each user, which entails potential preference of the specic user as they are most likely to interact with the recommended micro-videos. The objective function for training our model is described in Section 3.6 We use the Adam optimizer to train our method. The overall structure of our proposed framework DMR is illustrated in Figure 1, which is composed of an implicit user network module, a multi-trend routing module, a multi-level time-aware attention module and a prediction layer. As the relative future sequence for current user is actually the history sequence for the neighbors, the multi-trend routing algorithm is applied on both the future and history sequences using shared parameters in parallel. The framework takes the user historical interactions set𝑋as input. We use𝑋and𝑋to represent training and testing data of interactions sequence of user𝑢respectively.𝑁and𝐾denotes the selected total length of interaction sequence of each user𝑢and the length of training sequence respectively. For micro-videos from−→ the set of 𝑋, embeddings are presented as𝑒. Figure 1: Network Architecture of DMR. DMR is composed of an implicit user network module, a multi-trend routing module, a multi-level time attention layer and a prediction layer. Based on the users’ historical interactions, we build a implicit user network to construct future sequences. The multi-trend module are applied on the current user’s history sequences and future sequences in parallel to get representation of each trend group. The multi-level time attention mechanism are applie d before the pooling layer to generate the history trend representation and future trend representation, which is further concatenated as dynamic user preference representation. Finally, the user representation and the candidate micro-video embedding are utilized for prediction in the classier. The implicit user network module constructs neighbors set for each user by selecting the users that have similar micro-video preference as indicated in their past behaviors, and then extract the relative future sequences from each neighbor. The query items can be selected from the user historical interaction𝐼, for simplicity, we solely choose the last one in the list, which can be both ecient and eective as demonstrated in the empirical analysis. The relative future behaviors are dened as the interacted items following the query item in the chronological order, aiming at representing dynamic preference of the user. The intuition in behind is that the user tend to have similar preference trend as users with similar historical behaviors, and that the user can have diverse and dynamic trends of preferences. The multi-trend routing module is developed to obtain the neighbor centroids according to diverse motivation behind specic interactions with the micro-videos. Then we learn future-aware diverse trends based on history and future sequence jointly. Furthermore, the future sequence evolved user representation acquired by timeaware attention layer is concatenated with the historical behavior evolved user representation to generate the dynamic user preference representation vector. Finally we compute the user’s preferences over dierent micro-videos from the pool by the prediction decoder. Each part will be elaborated in the following sections. As shown in Figure 2 ,the implicit user network is constructed based on user-item heterogeneous graph, which contains both the user nodes and item nodes. An edge in the graph represents the interaction between the user and the item. The weight of the edge indicates the temporal weight of each interacted item in a chronological order. The query items are selected in a multi-hop manner. The user nodes connected to the selected query items are considered as the candidate neighbor nodes of the current user. Inspired by some works [19,20], which extract social relationships in absence of explicit social networks [45] , we construct the user network from user-item correlation implicitly. Specically, we compare the similarity among users via collaborative ltering implicitly based on the historical interactions with micro-videos. As the Pearson Correlation Coecient(PCC) is a Figure 2: Architecture of the implicit user network module. The leftmost part stands for the neighbor candidate selection process based on user-item graph with the interactions by edge, user and micro-videos by node. User behaviors of the selected neighbors are then split into train and test set to compare their similarity to the current user. The relative future sequence of the most similar users are utilized to generate the future sequence as the input of multi-trend routing module, which output the future trend representation. Input: The set of users 𝑈 ; User’s historical interaction sequence 𝐼; User’s query items sequence 𝐾and upper bound k; User’s candidate neighbors 𝐺and upper bound g; Similarity threshold 𝜏 for neighbor selection; Output: The extracted neighbor set of user 𝑁, 𝑢 ∈ 𝑈 ; widely used similarity measure, we adopt Pearson Correlation Coecient [4] to compute a linear correlation between the user and each candidate neighbor as: where𝐼 (𝑖)is a set of micro-videos user𝑖interacted with,𝑟and 𝑟represents the level (click or not click) of interaction of user𝑖 over micro-video𝑘and the average level of action of user𝑖. The user similarity𝑠is ranging from[−1, 1], and the similarity between users𝑖and𝑗is proportional to the value according to this denition. Following [43], we employ a mapping function𝑓 (𝑥) = (𝑥 + 1)/2to bound the range of PCC similarities into [0, 1]. In the case of users with only one common micro-video in history, PCC similarity gets 1 when the users’ preferences over the common micro-video are similar and−1 when not, which encourages diversity of neighbors while damaging the fairness of similarity calculation. To tackle this issue, we only kept less than20%of such neighbor nodes to seek the balance. In addition to the PCC method, we also design a lter with simple schema to extract similar users. For each user, if the historical interactions𝐼is split into two pieces,𝐼for training data, and 𝐼for testing data, the itemˆ𝐼is dened as the last𝑘micro-videos, 𝑘could be any value less than or equal to|𝐼|, while in practice 𝑘 = 1can achieve good enough performance with simplicity. We extracted a list of neighbors𝑁 = {𝑛, 𝑛, ..., 𝑛}according to the query item. The detail of this process is described in Algorithm 1. Furthermore, we constructed the future sequence of user 𝑢 as: where Timestamp is denoted as𝑇 𝐼and the query item is denoted as 𝐼. 𝐼represents the interaction set of neighbor 𝑛 To capture the trend information lies in both history sequence and future sequence, we devised a multi-trend routing module into a two-stage manner to generate trend represent parallelly. Specically, we group each micro-video from both the user’s historical sequence and extracted relative future sequence into diverse trends in the rst stage. The micro-videos that are grouped into the same trend are considered to be similar according to users’ interactions over them and their own basic features. In the second stage, the micro-videos from historical sequence and relative future sequence are utilized to generate the representation of history and future trend group in parallel. Based on the positive historical interaction sequence𝐼of user 𝑢, we represent each micro-video𝑥in𝐼as an embedding vector−→ 𝑥 ∈ R, where𝑑is the embedding size. And we initialize positive history trend group as𝑇∈ Rfor user𝑢, where𝑠denotes the number of trend groups indicated from historical sequence and𝑑 denotes the embedding dimension of each history trend. Specically,−→ each trend embedding is represented as𝑡 ∈ R. Similarly, based on the extracted future sequence𝐹from the implicit user network. The positive future trend group is denoted as𝑇∈ Rfor user𝑢, where𝑠denotes the number of trend groups indicated from future sequence and𝑑denotes the embedding dimension of each future trend. In order to ne-tune the representation of each trend, we apply attention mechanism over each micro-video and the initialized−→ trend group. Given the micro-video embedding𝑥 ∈ Rand the−→ trend embedding𝑡 ∈ R, we calculate the weight between the micro-video and the trend based on a co-attention memory matrix. The micro-video from the history sequence and the future sequence are put into history trend and future trend separately. As the history sequence and future sequence is processed separately, our module is capable of capturing timeliness of trends which indicates evolved user interest. As for the item-level, we use the weighted sum of historical microvideo features to obtain the current micro-video representation. Finally, we get the representation of each trend by attention mechanism on each micro-video in the trend group. As for the trend-level, we utilize the time-aware attention to activate the weight of diverse trends to capture the timeliness of each trend. Specically, the attention function takes the interaction time of item𝑖, the interaction time of trends and trend embeddings as the query, key and value respectively. We compute the nal representation of trend representation future sequence of user 𝑢 as: 𝐻𝐹= 𝐴𝑡𝑡𝑒𝑛𝑡𝑖𝑜𝑛(−→𝑇 𝐼,−−→𝑇 𝐼,−→𝑡) =−→𝑡𝑠𝑜 𝑓 𝑡𝑚𝑎𝑥 (𝑝𝑜𝑤 (−→𝑇 𝐼,−−→𝑇 𝐼)) (6) where Attention denotes the attention function,𝑇 𝐼represents the interaction time of micro-video𝑖,𝑇 𝐼represents the average interaction time of micro-videos related to the trend group,−→𝑡 represents the embedding of the specic trend group. The trend group generated from the user’s historical sequence and future sequence are then eventually updated by adding the corresponding trend group in𝑇and𝑇with the aggregation of history trend and future trend representation respectively. After computing the trend embeddings from activated trends through time-aware attention layer, we apply sumpooling to both history and future trend representations. 𝑒= 𝑠𝑢𝑚𝑝𝑜𝑜𝑙𝑖𝑛𝑔(𝑇, ...,𝑇), 𝑒= 𝑠𝑢𝑚𝑝𝑜𝑜𝑙𝑖𝑛𝑔(𝑇, ...,𝑇) (7) And then we concatenate the history trend representation vector𝑒and future trend representation vector𝑒to form a user−→ preference embedding𝑒as: Given a training sample𝑢, 𝑖with the user preference embedding−→−→ 𝑒and micro-video embedding𝑒as well as the micro-video set 𝑉, we can predict the possibility of the user interacting with the micro-video as In the same way, we calculate the prediction score𝑃 (𝑥 |𝐻)based on the negative interaction sequence, which aims to maximize the distance between the new micro-video embedding and user’s negative trend embeddings. The nal recommendation probabilityˆ𝑝is represented by the linear combination of𝑝 (𝑥 |𝐻)and𝑝 (𝑥 |𝐻). And the objective function of our model is as follows: whereˆ𝑝denotes the prediction score of micro-video𝑖for user𝑢, 𝜎 represents the sigmoid activation function. MicroVideo-1.7M and KuaiShou were used as micro-video benchmark datasets in our experiments. Micro-video data and user-video interaction information can be found in each of these datasets. Each micro-video is represented by its features in these two datasets, and each interaction record includes the userID, micro-video ID, visited timestamp, and whether the user clicked the video. The two datasets’ statistics are shown in Table 2. • MicroVideo-1.7M[8]: This dataset comes from real data of micro-video sharing service in China which contains 1.7 million micro-videos. • KuaiShou: This dataset is released by the Kuaishou Competition in China MM 2018 conference. We used TensorFlow on four Tesla P40 GPUs to train our model with Adam optimizer. The following are the hyper-parameters: The micro-video embedding is 512-dimensional vectors, while the user embedding is 128-dimensional vectors. The batch size was set to 32, the optimizer was Adam, the learning rate was set to 0.001, and the regularization factor was set to 0.0001. To nd the user’s similar neighbors, we used the Pearson Correlation Coecient (PCC) described earlier. In the ablation analysis, we set neighbor numbers as 5, 20, and 50. As for the future sequences, we cut o each neighbor’s at most 100 interacted micro-videos after the current user’s query items. To compare the performance of dierent models,we usePrecision@N,Recall@N,F1-score@NandAUC, where N is set to 50 as metrics for evaluation. • Precision: Number of correctly predicted positive observations divided by the total number of predicted positive observations. whereˆ𝐼denotes the set of top-N recommended microvideos for user u and𝐼is the total recommendation list for user u. • Recall: Number of corrected recommended micro-videos divided by the total number of all recommended micro-videos. whereˆ𝐼denotes the set of top-N recommended microvideos for user u and𝐼is the set of testing micro-videos for user u. • F1-score: F1 Score is the weighted average of Precision and Recall. It’s used to balance between Presicion and Recall. • AUC: AUC (Area Under the ROC Curve) is used in classication analysis to determine the quality of classiers. To validate the eectiveness of our proposed DMR framework, we conducted experiments on two publicly available real-world datasets. The comparision to other state-of-the-art micro-video recommenders are summarized in Table 3. • BPR[51]: Trained on pairwise items, the Bayesian personalized ranking(BPR) maximize the dierence between positive and negative items of each user in Bayesian approach. • LSTM[75]: Long short-term memory(LSTM) is a sequence model. Hidden states of each unit are aggregated to form user interest representation. • CNN: The convolutional neural network (CNN) can be utilized to generate user interest representations based on the interaction sequence. The max pooling layer and MLP layers are used for user interest extraction and prediction. • NCF[26]: As a collaborative ltering based model, NCF learns user embedding and item embedding with a shallow network and a deep network, which is able to learn an arbitrary function from data. • ATRank[76]: ATRank is an attention-based behavior modeling framework, which can model with heterogeneous user behaviors using only the attention model. It utilizes selfattention in multiple semantic spaces to capture behaviors interactions. The model is capable of predicting all types of user actions in a multi-task manner, which shows eectiveness over the highly optimized individual models. • THACIL[8]: THACIL achieved the click-through prediction for micro-videos by modeling user’s historical behaviors. The proposed recommendation algorithm characterizes both short-term and long-term correlation within user behaviors. It also proles user interests at both coarse and ne granularities. • ALPINE[40]: To intelligently route micro videos to target users, ALPINE proposed an LSTM model based on a temporal graph, which is encoded by user’s historical interaction sequence. The model captures the complex and diverse interests of users via a multi-level interest modeling layer. Moreover, the model achieves better performance by utilizing true negative samles, which indicates uninterested information. • MTIN[31]: This model is a multi-scale time-aware user interest modeling framework, which learns user interests from ne-grained interest groups. MTIN incorporates the interest group routing unit to generate user interest groups based on the interaction sequence and leverages ne-grained interest groups via item-level and group-level interest extraction unit. The distilled user interest representation is used to predict the click probabilities of micro-video candidates. The model performance on the two datasets is summarized in Table 3. We run experiments to dissect the eectiveness of our recommendation model. We compare the performance of DMR with several commonly used and state-of-the-art models: BPR, LSTM, CNN, NCF, ATRank, THACIL, ALPINE and MTIN. All these models are running on the two datasets introduced above: MicroVideo1.7M and KuaiShou-Dataset. According to the results shown in Table 3, our model DMR achieve better performance on precision over KuaiShou dataset and performs better in terms of AUC, Recall and F1-score over MicroVideo-1.7M dataset. Table 4 compares the result of dierent neighbor number setting of 5, 20 and 50. Considering more neighbors could result in more Table 3: Overall Performance Comparision. The model performance of our model and several state-of-the-art baselines on two public datasets: MicroVideo-1.7M and KuaiShou-Dataset. The best results are highlighted in bold. Table 4: Eect analysis of Neighbors. The model performance with dierent Neighbor Number setting on two datasets: MicroVideo-1.7M and KuaiShou-Dataset. The metrics are @50. Here we set Neighbor Number to 5, 20, 50. diversity, but too many neighbors would dilute interest trends’ embedding. Our model achieves improvements on neighbor number equals 20 over 5. Besides, it shows reduction if setting neighbor number from 20 to 50. This means the number of neighbors also play a crucial part in model performance. The computational complexity of sequence layer modeling user and neighbors is𝑂 (𝑘𝑛𝑑), where𝑘denotes the number of extracted neighbors,𝑛denotes the average sequence length and𝑑denotes the dimension of item’s representation. Capsule layer’s computational complexity depends on kernel size and number of trends. Average time complexity of capsule layer scales𝑂 (𝑛𝑇𝑟), where𝑟denotes kernel size of capsule layer and𝑇denotes the number of trends. For large-scale applications, our proposed model could reduce computational complexity by two measures: (1)encode neighbors with a momentum encoder[21].(2)adopt a light-weight Capsule network. Aside from achieving high recommendation accuracy, diversity is also essential for the user experience. With little information of historical interactions between the users and the micro-videos, recommendation systems learned to assist users in selecting microvideos that would be of interest to them. Recommender systems keep track of how users interacted with the micro-videos they’ve chosen. Many research works [1,3,14,49] have been undertaken to propose novel diversication algorithms. Our proposed module can learn the diverse trends of user preference and provide recommendation with diversity. We dene the individual diversity as below: 𝐷𝑖𝑣𝑒𝑟𝑠𝑖𝑡𝑦@𝑁 =𝑁 × (𝑁 − 1)/2(14) where𝐶𝐴𝑇 𝐸represents the category of the item.ˆ𝑖denotes item recommended for user𝑢,𝑗and𝑘represents the order of the recommended items. 𝛿 (·) is an indicator function. Table 5 presents comparisons with THACIL and MTIN over the recommendation diversity metric on Micro-video dataset, which provides category infromation of micro-videos. We adopt the setting of six historical trend and six future trend evolved from 5 neighbors for our model. From the table, our module DMR achieve the optimum diversity metric indicating the recommendation it provide can eectively take neighbors’ interests into account. In this work, we propose to capture even more diverse and dynamic interests beyond those implied by the historical behaviors for microvideo recommendation. We refer to the future interest directions as trends and devise the DMR framework. DMR employ an implicit user network module to extract future sequence fragments from similar users. A mutli-trend routing module assigns these future sequences to dierent trend groups and updates the corresponding Table 5: Mo del Recommendation Diversity Comparision on Micro-video Dataset. trending memory slot in a dynamic read-write manner. Final predictions are made based on both future evolved trends and history evolved trends with a history-future trends joint prediction module. This work represents one of the initial attempts to explicitly capture possible interest trends for a given historical behavior sequence, especially for ranking models and micro-video recommendation. We believe that such an idea can be inspirational to future works on learning recommender systems of high diversity. In the future, though the implicit user network module does not aect serving eciency, we would like to explore whether more ecient and eective solutions exist to boost the training since introducing information from other users might also introduce inevitable noises. Moreover, we plan to extend the multi-trend capturing idea to more applications in recommender systems and address application-specic challenges.
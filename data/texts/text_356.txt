South China University of TechnologySouth China University of Technology cslianghao.xia@mail.scut.edu.cnyxu@scut.edu.cn Modern recommender systems often embed users and items into low-dimensional latent representations, based on their observed interactions. In practical recommendation scenarios, users often exhibit various intents which drive them to interact with items with multiple behavior types (e.g., click, tag-as-favorite, purchase). However, the diversity of user behaviors is ignored in most of existing approaches, which makes them dicult to capture heterogeneous relational structures across dierent types of interactive behaviors. Exploring multi-typed behavior patterns is of great importance to recommendation systems, yet is very challenging because of two aspects: i) The complex dependencies across dierent types of user-item interactions; ii) Diversity of such multi-behavior patterns may vary by users due to their personalized preference. To tackle the above challenges, we propose a Multi-Behavior recommendation framework with Graph Meta Network to incorporate the multi-behavior pattern modeling into a meta-learning paradigm. Our developed MB-GMN empowers the user-item interaction learning with the capability of uncovering type-dependent behavior representations, which automatically distills the behavior heterogeneity and interaction diversity for recommendations. Extensive experiments on three real-world datasets show the eectiveness of MB-GMN by signicantly boosting the recommendation performance as compared to various state-of-the-art baselines. The source code is available at https://github.com/akaxlh/MB-GMN. • Information systems → Recommender systems. ACM Reference Format: Lianghao Xia, Yong Xu, Chao Huang, Peng Dai, and Liefeng Bo. 2021. Graph Meta Network for Multi-Behavior Recommendation. In Proceedings of the 44th International ACM SIGIR Conference on Research and Development in Information Retrieval (SIGIR’21), July 11–15, 2021, Virtual Event, Canada. ACM, Singapore, 10 pages. https://doi.org/10.1145/3404835.3462972 Recommender systems have played an important role in meeting users’ personalized interests and alleviating the information overload for various applications, ranging from online review sites [27], location-based recommendation services [1,10], and online retailing platforms [12,19]. To forecast user preference from observed user behavior data, many eorts have been devoted to Collaborative Filtering (CF) techniques (e.g., matrix factorization methods [23]). The key idea of CF paradigm is to consider user historical interactions, and make recommendations based on their potential common preferences with vectorized user/item representations [16]. With the recent advancements in deep learning, many neural network techniques have been proposed to augment collaborative ltering architecture, with the modeling of complex interactive patterns between users and items. For instance, NCF [16] and DMF [37] introduce the Multi-layer perceptron to enable the CF framework with the capability of learning non-linear feature interactions. In addition, by stacking multiple autoencoder networks, high-dimensional sparse user behavior data can be mapped into the low-dimensional dense representations under the reconstructionbased learning prototype [8,25]. Inspired by the recent success of graph neural networks, several studies are proposed to model the user-item interactions with graph relation encoder (e.g., Graph Convolutional Network [40] or Graph Attention Network [28]). Nevertheless, a common drawback of the above methods is that only single type of behavior is considered to characterize user-item collaborative relations, which may not comprehensively reect the multi-dimensional users’ preference in many real-world scenarios. In fact, we need to deal with more complex user-item relational structures–multi-behavior interaction scenario in which each interaction between user and item is naturally exhibited with relationship diversity [13,36]. For example, there may exist multiple relations (e.g., click, add-to-cart, add-to-favorite and purchase) between the same pair of user and item in e-commence platforms [3]. Each individual view of behavior type could provide rich information to characterize users’ preference from dierent dimensions. Some users might like to add their interested items into the favorite item set before placing the order, while others always make purchases once they add items into the cart. This motivates us to explore the multi-behavior interactive patterns in modeling users’ preference that yields more accurate recommendations. While it is desirable to make use of other types of behaviors in assisting the recommendation task, it is non-trivial to encode such multi-behavioral collaborative relations. Towards this end, the technical challenges mainly come from two perspectives: Modeling with Behavior Heterogeneity. It is challenging to learn a comprehensive representation which can comprehensively reect preference patterns of user-item interaction from dierent behavior types. Dierent behavior type view can present complementary knowledge for learning users’ interests and interweave with each other in complex ways. Furthermore, each type of user behavior may exhibit pairwise dependencies or even high-level cross-type behavior correlations. Hence, in order to learn meaningful multi-behavior representations from type-specic, inter-type behavior relations, an eective cross-type interactive feature learning model with behavior pattern fusion is a necessity in solving multi-behavior recommendation problem. Learning with Interaction Diversity. The dependencies across dierent types of user-item interactions are complex since user’s type-specic behaviors are likely to be dependent because of various factors [31]. In practical scenarios, users often exhibit their dierent correlated behavioral patterns due to their personal specialty and habits, e.g., some people prefer to add items into their favorite lists only if they will buy them with high probabilities. In contrast, some one may like to add many dierent items into his/her favorite list but only makes sporadic purchases. The interdependencies between multiple types of behaviors vary by users. Although a handful of studies attempt to learn users’ interests from their dierent types of user behaviors [9,13,21], they merely consider the correlations between dierent types of user-item interactions under the same representation space, which can hardly capture personalized characteristics from users’ multi-behavior interactions. Therefore, a suciently generalized knowledge transfer framework is required, to distill the comprehensive and diverse multi-behavior patterns of users. Hence, to address the above challenges, in this paper, we propose a newMulti-Behavior recommendation framework withGraph MetaNetwork (MB-GMN). The goal of MB-GMN is to build a customized meta-learning paradigm upon the multi-behavior relation learning. Specically, we rst propose a meta-knowledge learner for encoding behavior heterogeneity with the consideration of personalized user-specic interactions. After that, a meta graph neural network is developed to capture diverse multi-behavior patterns with high-order connectivity over the user-item interaction graph. With the graph-structured embedding propagation paradigm as our multi-behavior pattern modeling component, the behavior heterogeneity and diversity can be jointly preserved in our learned latent user/item representations. Finally, we introduce a meta prediction network to capture the complex cross-type behavior dependency under a multi-task learning framework. By doing so, multi-typed user behaviors are not only used to modulate the model parameters of graph neural models, but also guide the prediction phase with the injection of supervising signals. In summary, our major contributions are three-fold: •To the best of our knowledge, we are the rst to study the multibehavior recommendation problem with the joint modeling behavior heterogeneity and interaction diversity. •We develop a new framework, MB-GMN which incorporates a multi-behavior pattern modeling component with the metalearning paradigm. The multi-behavioral relations are distilled to customize the graph neural network for capturing the personalized high-order collaborative eects. In addition, a meta prediction network is introduced to supercharge MB-GMN with the learning of cross-type behavior dependency. •We demonstrate the eectiveness of MB-GMN on three realworld datasets to show that our framework advances the recommendation performance as compared to baselines from various research lines. Additionally, we further perform the ablation study to better understand the model design of MB-GMN. We let𝑈and𝑉represent the set of users and items, respectively, i.e., U = {𝑢, ...,𝑢, ...,𝑢}andV = {𝑣, ..., 𝑣, ..., 𝑣}, where𝐼(indexed by𝑖) and𝐽(indexed by𝑗) represent the numbers of users and items. With the consideration of multiplex user-item interactions, we dene a multi-behavior interaction tensor as below: Definition 1.Multi-Behavior Interaction Tensor X. We dene a three-way tensorX ∈ Rto reect the multi-typed interaction (e.g., click, tag-as-favorite, purchase) between user (𝑢∈ U) and item (𝑣∈ V). Here,𝐾denotes the number of behavior types. Specifically, the individual element𝑥∈ Xis set as 1 if user𝑢interacts with item 𝑣under the 𝑘-th b ehavior type, and 𝑥= 0 otherwise. In the multi-behavior recommendation scenario, one type of user-item interaction will be treated as target behavior (e.g., purchase). Other behaviors are referred to as context behaviors (e.g., click, tag-as-favorite, add-to-cart) for providing insightful knowledge in assisting the target behavior prediction. Based on the aforementioned denitions, we formally state our studied problem as: • Input: the observed multi-behavior interaction tensorX ∈ R between users U and items V across 𝐾 behavior types. • Output: the predictive function which estimates the likelihood of user 𝑢adopts the item 𝑣with the target behavior type. We now elaborate the proposed MB-GMN, the model ow of which is illustrated in Figure 1. MB-GMN is composed of two key components: i) multi-behavior pattern encoding, a meta-knowledge learner that captures the personalized multi-behavior characteristics; ii) cross-type behavior dependency modeling, a transfer learning paradigm which learns a well-customized prediction network by transferring knowledge across dierent behavior types. Unlike previous multi-behavior recommendation models [9,21,35] which parameterize multi-typed interaction patterns of dierent individuals into the same representation space, we aim to capture the personalized multi-behavior characteristics corresponding to diverse user preferences. Towards this end, we propose an integrative neural architecture with a meta-knowledge learner and meta graph neural network. This new framework jointly captures the useritem relation heterogeneity under multi-typed behavior context, as well as the mutual relationships between dierent behaviors, with respect to their user-specic patterns. Figure 1: The model architecture of MB-GMN. (a) Multi-behavior pattern modeling with meta-knowledge learner for behavior heterogeneity; (b) Meta graph neural network which preserves the behavior semantics with high-order connectivity; (c) Metaknowledge transfer networks that customize the parameter of prediction layer to capture cross-type behavior dependency. 3.1.1Meta-knowledge Learner for Behavior Heterogeneity. In this component, we aim to learn the meta-knowledge from userspecic multi-behavior interactive patterns over dierent items. We then utilize the learned meta-knowledge to generate the transformation weights for injecting the type-specic behaviour semantics into the initial embeddings. Specically, given the initialized IDcorresponding embeddingsE∈ RandE∈ Rfor user𝑢and item𝑣, respectively, we exert the meta network to learn a personalized context projection layer with latent transformations: where∥denotes the concatenation operation.V∈ Ris the learned customized parametric matrix for user𝑢, which injects the type-specic behavior context into personalized user representation.W ∈ Rand¯V ∈ Rrepresent the transformation parameters of the meta network.H∈ Ris the context-aware embedding which preserves type-specic user interaction behavior patterns. Here, we adopt|N||N|as the normalization term for embedding aggregation. In general, this proposed meta-knowledge learner takes the user-specic behavior characteristics as input, i.e., E,E, as well as personalized interactions over his/her connectedÍ itemsEunder the𝑘-th behavior type, whereNdenotes the set of interacted items of user𝑢. The model output is the parametric matrixV∈ Rwhich is used to generate weights of graph neural network for handling behavior heterogeneity. 3.1.2Low-rank Transformation Decomposition.While we can express the customized context representations for user-specic multi-behaviors, it is challenging to extract such meta-knowledge in an ecient way. To tackle this challenge, we enhance our metaknowledge learner with the low-rank decomposition technique for transformation operation. In particular, the learning phase over the meta-knowledge transformationV∈ Rcan be decomposed Meta Graph Neural NetworkMeta-Knowledge Transfer Networks into two low-rank projections as below: where˜E∈ Ris the contextualized user embedding of user𝑢, andV∈ R, V∈ Rare the decomposed transformation matrices, withW, W,¯V,¯Vas trainable parameters. Note that 𝑑is the low-rank state dimensionality which is much smaller than the regular embedding dimension size𝑑. Hence, the transformation integrationV= VVis restrict to be low-rank. For the item side, the corresponding embeddingsEis contextualized to yield ˜Eunder the same meta-knowledge learning framework. To capture the diverse behavior patterns of dierent users, we propose a meta graph neural network to enhance latent representation learning, with the preservation of behavior-aware user-item collaborative eects. There are three key sub-modules in the meta graph neural network, i.e., i) Behavior semantic encoding; ii) Behavior mutual dependency learning; iii) High-order multi-behavioral context aggregation. We will describe the technical details of each module in the following subsections. 3.2.1Behavior Semantic Encoding.In our recommendation scenario with multi-behavioral relations, each individual type of interaction behavior has its own characteristics. Taking the e-commence platform as the example, user’s page view behavior is more likely to happen than purchase. Moreover, add-to-cart and purchase behavior may co-occur with high probability. In such cases, we propose to capture the personalized behavior semantic signals during the multi-behavior pattern modeling. Given the learned the meta-knowledge˜Eof each user𝑢and˜Eof item𝑣, we design a behavior-aware message passing strategy to capture user-item graph structure𝐺= {V, E}, whereVdenotes the set of nodes (i.e., users and items), andErepresents the set of interaction edges amongVunder the𝑘-th behavior type. The behavior contextaware embeddings of user𝑢and item𝑣are generated as follows: where¯E,¯E∈ Rare the smoothed embeddings for user𝑢 and item𝑣under the behavior type of𝑘, respectively. We dene 𝛼as the normalization factor for𝑢-𝑣interaction with the𝑘-th behavior type, which is formally given as𝛼=1/|N||N|. We summarize the above embedding propagation procedure over user-item interaction 𝐺with the matrix format as: whereX∈ Rdenotes the adjacent matrix of graph𝐺under the𝑘-th behavior type.DandDare the diagonal degree matrices for users and items. Here,E∈ R, E∈ R corresponds to the user and item embedding tables, respectively. In MB-GMN, we further employ a residual unit to prevent the gradient vanishing issue. Inspired by the convolution optimization scheme for collaborative ltering in LightGCN [15], MB-GMN is not equipped with linear transformations during the message passing. Therefore, with the learned meta-knowledge of behavior heterogeneity, MB-GMN endows the graph-structured information propagation with the interaction modeling in a customized manner under personalized behavior context of individual user. 3.2.2Behavior Relation Learning.In practice, dierent types of interaction behavior are correlated in a complex way, which brings new challenge for modeling multi-behavioral relationships. To encode the underlying relations across dierent type of behaviors, we design a multi-behavior relation encoding function, to rene the propagated embeddings by injecting the mutual relational information between dierent behavior types. The relation encoding function is built upon the attention network: where˜E∈ Rdenotes the global user embedding that takes all behavior types into account.H∈ Ris an intermediate representation which encodes the behavior-specic features rened by other behavioral data.His calculated using an𝐻-head dot-product attention mechanism. Additionally,𝛽∈ Ris theℎ-th quantitative weight for behavior type𝑘and𝑘, subscript: denotes theℎ-th slice of the vector (each slice is of size𝑑/𝐻), and Q∈ Ris theℎ-head parametric transformation. To alleviate the overtting eect and improve the training eciency, we optimize our attentive encoding function from the following perspectives: 1) we slice the𝑑-dimensional¯Eto𝐻parts as feature vectors corresponding to𝐻heads, without the heavy value transformation; 2) we enable the matrix transformation sharing among the query and key dimensions with the projection parameter Q. 3.2.3High-order Multi-Behavioral Context Aggregation.To capture the high-order connectivity of the interaction graph, MBGMN integrates the behavior semantic encoding with the behaviorwise relational structure learning under the high-order embedding propagation paradigm. In specic, we inject the high-order connectivity into the user embedding 𝑢as: whereGraph-Conv(·)denotes the behavior semantic encoder, and Att(·)represents the function for behavior dependency learning. By stacking the graph encoders with𝐿times, MB-GMN is aware of the𝐿-hop graph-based connection structure for each node. To aggregate the cross-order message embeddings, we integrate the order-specic embeddings and yield the nal user and item repre-Í sentations using the operation:ˆE=¯Efor𝑘 =1,2, ..., 𝐾 +1. With the design of our meta graph neural network, we realize the information propagation and aggregation between users and items, so as to characterize the personalized multi-behavior patterns vary by users. Now, we move on to the prediction of dierent types of user-item interactions, based on a meta learning paradigm for customized knowledge transfer. From the meta graph neural network, we could obtain the(𝐾 +1)aggregated behavior representations, i.e., type-specic behavioral patterns are characterized by𝐾dierent embeddingsˆE, and a summarized general interaction (without dierentiating behavior types)ˆEwhich preserves the general user interest. In the prediction phase, how to eectively capture the cross-type behavior dependency and transfer the inuential knowledge in assisting the forecasting task on the target behavior, remains a signicant challenge. 3.3.1Meta-knowledge Learner for Behavior Dependency.In MB-GMN, we propose a meta learning scheme to generate prediction sub-networks with respect to the target user-item pair (𝑢, 𝑣) and behavior type. During our target behavior (e.g., purchase) prediction phase, context behavior information (e.g., click, tagas-favorite, add-to-cart) not only provides the insightful external knowledge, but also serve as the supervising signals for model optimization. Given user-item pair𝑢and𝑣, our meta prediction network rst learns the underlying meta knowledge customized to 𝑢and𝑣under the target behavior type of𝑘(other context behavior types are indexed by 𝑘). This process is presented as follows: Γ= 𝜎 (W· 𝜙 (Z, Z)); Z= 𝜎 (W· 𝜙 (ˆE,ˆE)) (6) whereΓ∈ Ris the encoded meta knowledge of𝑢and𝑣with the relation between the target behavior𝑘and context behaviors 𝑘(𝑘 ∈ (𝐾 +1),𝑘∈ 𝐾).Z, Z∈ Rare the projected representations of𝑢and𝑣with the relation between the𝑘-th and the 𝑘-th behavior type.𝜎 (·)is the activation function and𝜙 (·)is the encoding function to capture the dependent interactive relations between two embeddings. To make use of both the binary relations and the unary bias, MB-GMN proposes to employ a𝜙 (·)function dened as:𝜙 (v, v) = v◦ v∥v∥v, where◦denotes element-wise multiplication and ∥ denotes concatenation operation. 3.3.2Knowledge Transfer Learning Framework.With the meta-knowledge representationΓ, MB-GMN generates three parametric variables for our prediction network as follows: whereP∈ R, b, p∈ Rare the learned parameters for𝑢, 𝑣, source task𝑘and target task𝑘.Ware the parameters of the meta network, and¯P,¯b, ¯pare the bias parameters forP, band p. Finally, MB-GMN makes predictions on𝑢,𝑣under the target behavior 𝑘, using source data of context behavior 𝑘, by: whereˆX∈ Ris the predicted likelihood of𝑢interacting with 𝑣by behavior𝑘, given the interaction data𝑘as features.𝜂 ∈ R is an intermediate feature vector. For the most concerned target behavior 𝑘(e.g. purchase), we useˆXas the nal prediction. We train MB-GMN by optimizing the prediction objective for each pair of source and target behavior. For user𝑢and target behavior 𝑘, MB-GMN samples𝑆positive interactions and𝑆non-interacted items as the negative samples. During the training phase, we adopt the Adam algorithm to optimize the following dened objective: L =max(0, 1 −ˆX+ˆX) + 𝜆∥Θ∥(9) where𝑘refers to the source behavior and𝑘refers to the target behavior,𝑝and𝑛are the𝑠-th positive and negative samples, respectively. The rst term is the marginal pair-wise loss, and the last term denotes the weight-decay regularization with weight 𝜆. 3.4.1Model Complexity Analysis.The time cost of MB-GMN mainly comes from the following aspects. i) In the multi-behavior pattern modeling, MB-GMN adopts lightweight graph convolutional architecture which costs only𝑂 (𝐿 × 𝐾 × 𝑑 × |E |)across𝐿 layers,𝐾behavior types,𝑑latent factors and|E|edges. The behavior relation learning costs extra𝑂 (𝐿 × 𝐾 × 𝑑 × (𝐾 + 𝑑) × (𝑁 + 𝑀)). As𝑂 (𝑑 × |E|)is comparable with𝑂 ( (𝐾 + 𝑑) × (𝑁 + 𝑀))in our case, the complexity doesn’t increase. The contextualization meta network costs𝑂 (𝐾 × (𝑁 + 𝑀) × 𝑑× 𝑑)for parameter learning, and𝑂 (𝐾 × (𝑁 + 𝑀) × 𝑑 × 𝑑)for embedding transformation, which is very close to the complexity of GCN networks. The prediction meta networks costs minor𝑂 (𝑆 × 𝑑)computations for each user. In conclusion, our MB-GMN could achieve comparable model time complexity with some graph convolution-based models. This section performs experiments on dierent datasets to evaluate the performance of our MB-GMN framework by making comparison with various state-of-the-art recommendation techniques. In particular, we aim to answer the following research questions: • RQ1: How does MB-GMN perform when competing with various recommendation baselines on dierent datasets? • RQ2: How do the designed sub-modules in our MB-GMN framework aect the recommendation performance? • RQ3: How does MB-GMN work for making recommendation to users with the consideration of dierent types of behaviors? • RQ4: How does MB-GMN perform when handling behavior data with dierent interaction sparsity degrees? • RQ5: How do dierent congurations of key hyperparameters impact the performance of MB-GMN framework? • RQ6: How is the model explainability of our MB-GMN ? What relational patterns between dierent types of behaviors could MB-GMN capture in assisting the nal recommendation task? 4.1.1Dataset.To evaluate the eectiveness of our model, we conduct experiments on three datasets from real-world platforms. We describe the data details as below. Taobao Data. There are four types of user-item relations contained in this data from Taobao–one of the largest e-commerce platform in China, i.e., page view, add-to-cart, tag-as-favorite and purchase. Beibei Data. This data is collected from Beibei which is one of the largest infant product online retailing site in China. It involves three types of user-item interactions, including page view, add-to-cart and purchase, to generate the multi-behavior interaction tensorX. IJCAI Data. This data is released by IJCAI competition for user activity modeling from an online business-to-consumer e-commerce platform. Four types of behaviors are included in this dataset, i.e., page view, add-to-cart, tag-as-favorite and purchasing. In those three datasets, we regard users’ purchases as the target behaviors, because purchases are good indicators for Gross Merchandise Volume which indicates the total volume of sales in real-life online retailing sites [13,32]. We further summarize the detailed information of each experimented dataset in Table 1. 4.1.2Evaluation Protocols.For performance evaluations, we use two representative metrics: Normalized Discounted Cumulative Gain (NDCG@𝑁) and Hit Ratio (HR@𝑁) which have been widely adopted in top-N recommendation tasks [2,29]. Following the same experimental settings in [16,17], the leave-one-out evaluation is leveraged for training and test set partition. We generate the test data set by including the last interactive item and consider the rest of data for training. For ecient and fair model evaluation, we pair each positive item instance with 99 randomly sampled non-interactive items for each user, which shares similar settings in [22, 26]. 4.1.3Methods for Comparison.To comprehensively evaluate the performance, we compare our MB-GMN against various baselines from dierent research lines, which are elaborated as below: Conventional Matrix Factorization Approach: • BiasMF[23]: this approach considers the bias information from users and items using the matrix factorization model. Neural Collaborative Filtering Methods: • DMF[37]: this model considers the explicit interaction and nonpreference implicit feedback into a deep matrix factorization model for user/item embedding mapping. • NCF[16]: we consider three variants of NCF with the conguration of dierent interaction encoders: i.e., concatenated elementwise-product branch (i.e., NCF-N), Multilayer perceptron (i.e., NCF-M), and the xed element-wise product (i.e., NCF-G). Autoencoder-base d Collaborative Filtering Models: • CDAE[34]: it applies the denoising autoencoders to train a neural network with the data reconstruction objective in an adaptive way. • AutoRec[25]: it stacks multi-layer autoencoder to map useritem interactions into latent low-dimensional representations. Neural Auto-regressive Recommendation Models: • NADE[42]: it is a feed-forward autoregressive architecture for collaborative ltering with the parameter sharing technique. • CF-UIcA[8]: it explicitly captures the relations between items and users with a neural co-autoregressive model. Graph Neural Networks for Recommender Systems: • ST-GCN[40]: this method is a convolution-based graph neural model which generates user embeddings based on an encoderdecoder framework. • NGCF[29]: it is a message passing architecture for information aggregation over the user-item interaction graph, to exploit highorder connection relationships. Recommendation with Multi-Behavior Relations. • NMTR[9]: it is a multi-task recommendation framework for performing the cascade prediction of dierent types of behaviors. • DIPN[13]: it aims to predict the purchase intent of users by combing dierent user interactive patterns based on attention. • NGCF[29]: we enhance the NGCF model to inject the multibehavioral graph relations under a graph neural network. • MATN[35]: it dierentiates the relations between user and item with the integration of the attention network and memory units. • MBGCN[21]: it designs a unied graph to represent the multibehavior of users and uses graph convolutional network to perform behavior-aware embedding propagation. 4.1.4Parameter Settings.We implement the proposed MB-GMN model using TensorFlow. The parameters are learned using the Adam optimizer, with the learning rate 1𝑒and decay rate 0.96. The regularization weight𝜆is selected from {0.05, 0.01, 0.005, 0.001, 0.0005, 0.0001}. The training batch size is selected from {32, 128, 256, 512}. By default, MB-GMN is congured with the hidden state dimensionality of 16, low-rank dimensionality of 4, 2 attention heads. The number of message passing layers in our meta graph neural network is searched from {1,2,3}. The experiments for most of neural network baselines are performed based on their released codes or presented settings. For NCF and NMTR, we sample the positive and negative instances with the range of 1 : 1 to 1 : 4 to t their model optimization with point-wise loss. We evaluate the performance of all baseline methods in predicting the target user interactive behavior on dierent datasets, and summarize the following observations: Table 2 shows the performance of top-𝑁item recommendation under the target behavior type and “Imp” indicates the relatively improvement ratio between our MB-GMN and each baseline. From the presented results, we observe that the recommendation performance could be obviously improved by MB-GMN. Such performance gap can be attributed to the eective modeling of personalized multi-behavior patterns, which results in customized user/item representations under a meta learning paradigm. We can also observe that MB-GMN consistently obtains better performance than several baselines which models multi-typed user behaviors for recommendations. For example, the evaluation results shed light on the limitation of NMTR method, by merely modeling the singular dimensional cascading correlations between multitype interactions. The dual-stage attention mechanisms (DIPN and MATN) which aggregate dierent types of behavioral patterns through weighted summation, cannot comprehensively capture the complex inter-dependencies across dierent types of user behavior. Additionally, the large performance gap between MB-GMN and compared multi-behavior graph neural frameworks (i.e., NGCF & MBGCN), justies the advantage of our method for performing customized multi-behavior dependency modeling. In contrast, these GNN-based baselines aggregate the behavior-aware patterns under a parameter sharing message passing architecture, which overlook the unique characteristics of user behavior patterns. Among various compared methods, we can observe that the injection of multi-behavior information into the recommendation frameworks (i.e., NMTR, DIPN, NGCF, MATN, MBGCN) could boost the performance, as compared to other baselines which do not dierentiate user-item interactions. This observation conrms the benets of exploring multi-behavior patterns for modeling collaborative eects in recommendation. Furthermore, GNN-based models are superior to other baselines, which suggests that high-order relations pertinent to users and items are derived with stacking message passing layers. We also evaluate the performance of MB-GMN and several representative baselines while varying the value of𝑁in terms of HR and NDCG. Table 3 shows the evaluation results on Beibei dataset. We could observe that MB-GMN always achieves the best performance with dierent top-𝑁positions. This observation indicates the consistent superiority of our developed framework as compared to other baselines, in giving correctly interacted items with higher probability. To evaluate the rationality of design sub-modules in our MB-GMN framework, we consider ve model variants as follows: • w/o LowR: We do not integrate the low-rank transformation decomposition in our meta-knowledge learner for encoding behavior heterogeneity. The regular learned meta-transformerV∈ Ris directly used for context embedding. Table 2: Overall model performance on Beibei, Taobao and IJCAI data, with the metrics of HR@𝑁 and NDCG@𝑁 (𝑁 = 10). Table 3: Rank-based prediction accuracy via varying Top-N value measured by HR@N and NDCG@N on Beibei data. • w/o MFeat: The behavior relation learning sub-module is removed in the stage of multi-behavior pattern modeling. • w/o MTask: We do not perform the multi-task learning in our meta prediction network with the joint model optimization. • w/o MetaC: We do not leverage the designed meta-knowledge learner in encoding the behavior heterogeneous. Instead, we predene dierent transformations for multi-typed behaviors. • w/o MetaP: We do not rely on the meta-knowledge learner to learn parameters of our prediction layer. The pre-dened parameter space is adopted for discriminating representation space. The ablation study results are shown in Table 4. From the evaluation results, we draw the following conclusions: •The performance gap between MB-GMN and the w/o LowR variant indicates the advantage of our designed low-rank transformation decomposition scheme in alleviating the overtting issue during the heavy transformation operations, by serving as an ecient regularization term in our meta-knowledge learner. •The behavior relation learning shows positive eects for our meta graph neural network during the customized message passing procedure. This observation demonstrates the rationality of our utilized attention layer under multiple representation subspaces, in capturing pair-wise correlations among various interaction behavior types. •The evaluation results shed light on the limitation of singletask learning paradigm without the consideration of cross-type behavior dependency in the prediction phase. This suggests that context behavior relations can not only provide the insightful external knowledge during the explicitly multi-behavior pattern aggregation, but also serve as the supervising signals for model optimization under multi-task learning paradigm. Table 4: Ablation study on key components of MB-GMN. w/o LowR 0.6825 0.4083 0.4385 0.2656 0.4931 0.3195 w/o MFeat 0.6813 0.4049 0.3878 0.2315 0.4865 0.3138 w/o MTask 0.6068 0.3401 0.4577 0.2782 0.5301 0.3392 w/o MetaC 0.6791 0.4046 0.4647 0.2852 0.5026 0.3199 w/o MetaP 0.6605 0.4036 0.4868 0.2968 0.5302 0.3399 •MB-GMN outperforms both w/o MetaC and w/o MetaP, due to their simplied design without the incorporation of metaknowledge learner. The identied meta-knowledge is very important for performing user-specic behavior modeling through a customized meta-learning framework. We further perform the ablation study to show the eectiveness of incorporating dierent context behaviors into our MB-GMN framework. The evaluation results are presented in Figure 2. Here, “-pv”, “-fav”, “-cart” represents our MB-GMN without the incorporation of individual “page view”, “tag-as-favorite”, “add-to-cart” behavior, respectively. “+buy” is the variant which only relies on the target purchase behaviors themselves to make prediction. From results, we can observe that our framework, which collectively captures user preferences with all types of context behaviors, achieves the best performance as compared to other variants. This demonstrates the eectiveness of learning the interaction heterogeneity to reect comprehensive multi-behavior patterns. Since interaction behavioral patterns vary by users and data sparsity phenomenon is ubiquitous in many real-world recommendation scenarios, we evaluate how is the performance of our new recommendation framework when handling user behavior data with dierent sparsity degrees. To be specic, x-axis in Figure 3 represents the number of user interactions, and y-axis indicates the recommendation accuracy (measured by NDCG@10 and HR@10). From the results, we can observe the consistent performance gain of our MB-GMN framework over other compared methods, which suggests the model robustness of MB-GMN in capturing user’s preference under dierent data sparsity degrees. Furthermore, we can notice that it is important to capture the multi-behavior patterns, as MB-GMN and MBGCN achieve better performance as Figure 2: Impact study of dierent types of context behavior. compared other types of baselines. It is reasonable that incorporating context behaviors (e.g., page view, tag-as-favorite) results in better performance by considering multi-view user preferences. This performance improvement also shows that the incorporation of multi-behaviour information of users can help to alleviate the negative eects of data sparsity in encoding user preference. Figure 3: Performance of MB-GMN and baseline methods w.r.t dierent data sparsity degrees on Taobao data. To show the eect of dierent parameter settings, we perform experiments to evaluate the performance of our developed MB-GMN framework with dierent congurations of key hyperparameters, namely, the hidden state dimensionality𝑑, low-rank decomposition dimension𝑑, and the depth𝐿of our graph neural network. We show the results in Figure 4. Considering that accuracy vary by different datasets in terms of HR and NDCG metric ranges, the y-axis of Figure 4 represents the estimated performance decrease/increase percentage of each parameter-specic performance as compared to the best performance with the optimal hyperparameter settings. The discussions are summarized as follows. • Hidden State Dimensionality: 𝑑. In our framework, the latent state dimensionality𝑑is searched from 4 to 32. We can observe that with the increasing of embedding dimension from 4 to 16, the Figure 4: Hyperparameter study of the MB-GMN. recommendation performance improves due to the stronger representation feature space. However, a larger embedding dimensionality does not always bring stronger model representation ability in learning multi-behavioral relations for recommendations. This is caused by the model overftting. • Low-rank Decomposition Dimension 𝑑. We can notice that smaller value of𝑑in low-rank transformation decomposition is more benecial for learning meta-knowledge from behavior heterogeneity. The reason lies in that the relatively small value of𝑑≤4 could reduce the computational cost and improve the model robustness. This observation again conrms the rationality of our design low-rank decomposition scheme in learning metaknowledge from multi-behavior user data. • Depth of Graph Neural Paradigm 𝐿. By stacking two graph neural layers, MB-GMN -2 performs better than MB-GMN -1, which suggests the positive eect of high-order connectivity injection. However, with the increasing of depth of graph model, the performance starts to deteriorate. This is because stacking more embedding propagation layers may involve noise signals for modeling collaborative eects between users and items, which leads to the over-smoothing [6]. We further perform case studies with sampled case examples to show the interpretation capability of MB-GMN by capturing the cross-type behavior dependent structures. In the experiments, we visualize the loss value during our training phase after the model convergence, so as to reect the helpfulness of individual context behavior in predicting the target behavior. In our joint learning framework, each type of user-item interaction behavior could be considered as context source behavior and target behavior. In such cases, we generate a 4×4 weight matrix from six sampled users (e.g., 𝑢,𝑢) corresponding to page view, tag-as-favorite, add-to-cart and purchase (as shown in Figure 5). In general, we can observe that page view behaviors contribute more on predicting other types of behaviors in most cases. The overall helpfulness evaluation results across users are also illustrated with the heatmap matrix on the right side. Similar results can be observed. The potential reason for this observation lies in the larger amount of page view activities of users compared with other types of user interactions. General speaking, all above observations could show the interpretation ability of our Figure 5: Case study on the explainability of MB-GMN. Source bias represents the helpfulness of individual behavior in serving as context behavior in providing auxiliary information. Target bias represents the usefulness for predicting this target behavior based on the context behavior representation. The type-wise behavior dependency is reected with heatmap matrix, i.e., six heatmap4×4matrices corresponding to six extracted users, one heatmap4×4matrix presents the overall dependencies across dierent types of behaviors from all users. MB-GMN architecture in capturing complex dependency across dierent types of user behaviors and characterize the underlying helpfulness of context behavior during the prediction. In recent years, augmenting collaborative ltering techniques with deep neural networks has become increasingly popular, due to the strong capability of neural architectures in learning complex interactive patterns between users and items [7,38]. There exist various types of deep learning paradigms, with structures suited to collaborative ltering architectures. Specically, NCF [16] proposed to enhance the feature interaction between projected user and item embeddings with Multi-Layer Perceptron component, so as to address the limitation of inner-product operation in the recommendation phase. DMF [37] extended the matrix factorization with neural networks to map users and items into a common latent space. Autoencoder and its model variants have also been utilized for collaborative ltering tasks with the reconstruction-based encoderdecoder learning over user-item interactions [25,34]. Dierent from the above deep collaborative ltering models which merely consider single-typed interactive behavior of users, our MB-GMN explores the users’ multi-behavioral interactions and eectively incorporates the cross-behavior inter-dependent knowledge into the recommender systems, to boost the performance. Many methods were proposed to enhance the representation capability of recommender systems by characterizing various relations from the side information of users and items [18,24]. Let us discuss some recent literature: a research line of recommendation models proposed to incorporate online social relations of users to assist the user representation, by considering the inuence between dierent users [5,20,33]. Furthermore, knowledge graph information has also become an important data source to enhance existing recommendation frameworks. These knowledge-aware recommendation models made use of connections between dierent entities to supplement the interaction learning between users and items [27,28,43]. For instance, a knowledge-aware attentive reasoning scheme is proposed to aggregate information from user behaviors and relational paths in the generated knowledge graphs [43]. Recent years have witnessed the eectiveness of graph neural networks (GNNs) for mining various relational data [4,39]. In general, the key idea of GNN models is to perform graph-structured learning with message passing architectures for aggregating feature information from neighborhood nodes. For example, Graph Convolutional Network (GCN) [11], GraphSAGE [14] and Graph Attention Network (GAT) [30] are several representative GNN models which aggregate feature information from neighboring vertices, by utilizing convolutional operation, or attentional mechanism. GNNs have also been utilized to augment the user-item interaction modeling based on graph structures. For example, NGCF [29] and ST-GCN [40] are message passing recommendation methods which design aggregation encoder with graph convolutional network. Zheng et al. [41] learns price-aware purchase intent of users with a GCN-based architecture. Inspired by the above research work, we propose a new neural approach MB-GMN within the broader graph structure for multi-behavior recommendation, to tackle the technical challenges for dealing with the interaction diversity. This work develops a novel multi-behavior enhanced recommendation framework with graph meta network for learning interaction heterogeneity and diversity. Our framework explicitly incorporates the inter-correlations of multiple types of user behavior into the collaborative ltering architecture, which are usually neglected in most existing recommendation methods. In addition, our proposed framework incorporates the meta-knowledge network into a meta-learning paradigm, which endows the multi-behavior pattern modeling in a customized manner. Extensive experiments on three large-scale E-commerce datasets verify the eectiveness of MBGMN. Several promising direction of future work are: First, we plan to extend the developed MB-GMN framework by incorporating side context information into the modeling process of user’s preference, such as user’s prole information and items’ text descriptions. Second, a time-sensitive model is deserved to be investigated in order to handle the new arriving data streaming of users’ behavior in a timely manner, which benets the real-time recommendation. We thank the reviewers for their valuable comments. This work is supported by National Nature Science Foundation of China (62072188), Major Project of National Social Science Foundation of China (18ZDA062), Science and Technology Program of Guangdong Province (2019A050510010).
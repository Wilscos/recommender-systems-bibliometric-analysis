Xiangyong Lu, Kaoru Ota, Member, IEEE, Mianxiong Dong, Member, IEEE, Chen Yu, Member, IEEE, Abstract—Nowadays many cities around the world have introduced electric buses to optimize urban trafﬁc and reduce the local carbon emissions. In order to cut the carbon emissions and maximize the utility of electric buses, it is important to choose suitable routes for them. Traditionally, route selection is on the basis of dedicated surveys, which are costly in time and labor. In this paper, we mainly focus attention on planning electric bus routes intelligently, depending on the unique needs of each region throughout the city. We propose Clairvoyance, a route planning system that leverages a deep neural network and a multilayer perceptron to predict the future people’s trips and the future transportation carbon emission in the whole city, respectively. Given the future information of people’s trips and transportation carbon emission, we utilize a greedy mechanism to recommend bus routes for electric buses that will depart in an ideal state. Furthermore, representative features of the two neural networks are extracted from the heterogeneous urban datasets. We evaluate our approach through extensive experiments on the real-world data sources in Zhuhai, China. The results show that our designed neural network-based algorithms are consistently superior to the typical baselines. Additionally, the recommended routes for electric buses are helpful in reducing the peak value of carbon emissions and making full use of electric buses in the city. Index Terms—Intelligent route planning, electric bus, urban big data, multilayer perceptron, deep neural network. LECTRIC buses are the signiﬁcant contributors to reduce transportation carbon emission and energy consumption. Besides, the cost savings from fuel more than offset the cost of electric bus and infrastructure over the lifetime of a bus. In recent years, a growing number of cities have taken steps to introduce electric buses, in order to optimize urban transport structure and reduce carbon emissions and fuel consumption. However, the number of electric buses introduced in cities is constantly limited. Meanwhile, given the large-scale infrastructure investment necessary to support electric bus transportation, it is essential for policy makers to maximize the utility of electric buses. A key factor in making full use of electric buses is to choose the proper routes for them according to the local conditions. Due to the unique geographical, environmental and cultural characteristics in each region of the city, transportation carbon emission and people’s trips vary drastically with place and time. When a limited number of electric buses are allocated the ﬁxed routes, it is difﬁcult to meet the dynamic demand of people’s trips and reducing carbon emissions. To meet the diverse demand of the city, routes should be assigned dynamically for electric buses. In this paper,we want to answer the practical question: When a limited amount of electric buses are introduced in a city, which route should be dynamically selected for each electric bus that will depart in an ideal state? We aim to predict the potential transportation carbon emission and the potential number of people’s bus trips throughout the city to guide the electric bus route selection. The task is extraordinary challenging due to the following three reasons: First, transportation carbon emission is affected by multiple factors, such as human mobility, trafﬁc ﬂow, and meteorology. The factors differ in different regions and change over time. For example, trafﬁc ﬂows on the main roads are often larger than those of ordinary roads during peak commuting hours. The changes of these factors contribute to the difference in transportation carbon emission between all regions of the city. Consequently, we should identify the main factors that inﬂuence the transportation carbon emission and extract the efﬁcient features from the heterogeneous data sources in each region. Second, on each road in the city, the number of people’s bus trips signiﬁcantly changes over location and time. As shown in Fig. 1(a), eight routes are randomly selected from all bus routes in Zhuhai. Each bus route locates in different areas of the city. Fig. 1(b) outlines the average numbers of people’s trips on the eight routes in one hour after 11 a.m. during the period from Sept. 1 to Sept. 15, 2015. Meanwhile, as described in Fig. 1(c) and 1(d), the number of people’s trips on the ﬁrst ﬁve routes are diverse and vary with time tremendously. For example, there is a dramatically increase in the amount of trips during peak commuting hours, such as between 8 and 9 a.m. and between 6 and 7 p.m.. Accordingly, to obtain the future number of people’s trips on all bus routes, we should dig out the unique spatial-temporal characteristics of each route. Third, traditionally policy makers obtain transportation carbon emission information, by calculating the combustion of fossil fuel in the whole transportation sector [1]. The information of people’s bus trips is collected by dedicated surveys. However, these two methods are almost impossible to obtain the real-time and accurate information. Furthermore, affected by unforeseen emergencies, the transportation carbon emission and people’s trips in each area change sharply. As numerous emergencies are noticeably rare, a general statistical model will be difﬁcult to predict the sudden changes. To address the aforementioned challenges, in this paper, we divide the whole city into disjoint and uniform grids. Subsequently, we predict transportation carbon emission in each grid, based on the taxi GPS data, urban road data, points of interests and meteorological data. Meanwhile, around each bus station on the routes, we deﬁne a uniform affecting region, as shown in Fig. 2. The future number of people’s trips on each bus route is then inferred, based on the extracted features in the affecting regions. In our method, we propose a neural network-based model that consists of two separated predictors. One is a carbon emission predictor based on a three-layer perceptron neural network. The other is trip demand predictor based on a deep neural network. Given the multiple spatio-temporal urban data, we train our model to predict the transportation carbon emission in each grid and the number of bus trips on each bus route. Combining the results of these two predictors, we devise a greedy mechanism to recommend suitable bus routes for electric buses that will depart. In this paper, our contribution lies in the following three aspects: uses a deep neural network to predict the future number of bus trips on each bus route and utilizes a three-layer perceptron to forecast the future transportation carbon emission in each grid throughout a city. Furthermore, based on these two prediction results, we devise a greedy mechanism to recommend suitable bus routes for each electric bus that will depart. erogeneous urban data sources for our learning methods. Moreover, our mining features not only contribute to our application, but also contribute to the general problems of sensing urban dynamics. in Zhuhai, China, that is meteorological data, urban road data, points of interest data, bus IC card data, bus GPS trajectories generated by over 1,500 buses from July 1st to October 14th, 2015 and the taxi GPS trajectories generated by over 3,000 taxicabs from July 1st to October 14th, 2015. We justify the advantages of our designed neural network-based algorithms over several baselines. The rest of this paper is organized as follows. In section II, we introduce the works related to our research. Preliminary deﬁnitions and the framework of our system are described in section III. Feature extraction are listed in section IV. Feature learning and inference are discussed in section V. Experimental evaluation is shown in section VI. Finally, we conclude our work in section VII. In recent years, many cities have invested heavily in urban trafﬁc construction and transit planning. Transit planning and optimization are mainly focused on two aspects, that is cost and service [2]. Through the effective transit planning, the urban transit systems will serve a greater number of people and obtain a high level of customer satisfaction. In recent decades, urban transit system has beneﬁted hugely from the increasing number of sensors deployed in roads, vehicles and buildings. Moreover, based on the innovative data processing [3] [4] and mining technologies [5] [6], a series of studies on urban transportation have appeared, such as transit planning [7] [8], vehicle scheduling [9] [10], and trafﬁc ﬂow [11] [12]. For public transit frequency setting, Hadas [13] proposes a cost-based approach, which contains two main cost elements: empty-seat driven and overload and unserved demand. Through minimizing the total cost incurred in connection with either frequency or vehicle capacity, his method can dramatically improve the accuracy in the frequency setting. For trafﬁc ﬂow prediction, Lv [14] devises a stacked autoencoder model, utilizing the datasets collected from the Caltrans Performance Measurement System (PeMS) database. While Zheng [15] designs a deep and embedding learning approach to improve the prediction accuracy of trafﬁc ﬂow, through explicitly extracting ﬁne-grained information from massive trafﬁc data, route structure, and weather conditions. Moreover, in order to solve the load scheduling problem of plug-in hybrid electric vehicles, Kang [16] proposes a novel weight aggregation multi-objective particle swarm optimization (WA-MOPSO), which is based on the existing multi-objective evolutionary algorithms, such as non-dominated sorting genetic algorithmII. Based on the real case of bus operation in Shenzhen, China, Jiang [17] solves the scheduling problem of the regular charging electric buses by a neighborhood search heuristic. For the optimal dispatching of electric and hybrid buses, Rinaldi [18] introduces a Mixed Integer Linear Program, which objective function is of minimizing the total operational cost. In order to collaboratively optimize the vehicle scheduling and charging scheduling of the mixed bus ﬂeet, Zhou [19] develops a Multiobjective Bi-level programming model. For the upper-level vehicle scheduling problem, he designs an improved iterative neighborhood search algorithm to minimize the operating cost and carbon emissions. For the lower-level charging scheduling problem, he proposes a greedy search strategy to minimize the charging cost. Compared with the previous works, we devise a neural network-based system to infer suitable routes for electric buses that will depart, based on urban big data. Two main parts in our system are to predict the future number of bus trips on each route and transportation carbon emission in each region throughout the city. Urban computing is an interdisciplinary ﬁeld, where computer sciences are used in urban areas, contributing to the improvement of urban environment, human life quality, and city operation systems [20]. In recent decades, the rapid progress of urbanization and industrialization has caused lots of urban issues, such as trafﬁc jams, energy consumption, environmental pollution. In order to tackle these issues, nowadays numerous research institutions around the world begin to do in-depth research in the area of urban computing. Based on the air quality data, meteorological data and weather forecasts, Zheng [21] proposes a hybrid predictive model to forecasting ﬁne-grained air quality. This model consists of four major components, that is a linear regression-based temporal predictor, a neural network-based spatial predictor, a dynamic aggregator, and an inﬂection predictor. To predict the air quality, he also employs a semi-supervised learning approach based on a co-training framework, which comprises two separated classiﬁers: an artiﬁcial neural network and a linear-chain conditional random ﬁeld [22]. Moreover, Shang [23] proposes an unsupervised Bayesian Network model and a context-aware matrix factorization approach to infer separately the trafﬁc volume and travel speed on each road segment. Given the resulting trafﬁc volume and travel speed, he calculates the gas consumption and emissions. Chen [24] formulates the bike station placement issue as a bike trip demand prediction problem. He predicts the potential bike trip demand, utilizing the linear regression-andranking and artiﬁcial neural network regression-and-ranking. Karamshuk [25] puts forward a supervised learning model and a supervised regression model to optimize the placement of retail stores, using the feature sets extracted by studying the predictive power of features on the popularity of retail stores. In order to deal with the non-linear effects of various external factors on urban dynamics, Shimosaka [26] proposes a low-rank bilinear Poisson regression model to analyze and predict the urban dynamics. Based on the large user activity data in the location based social networks, Yang [27] presents a context-aware fusion framework consisting of the spatialtemporal activity preference models to infer the user activity preference. Compared with their works, we devise a greedy mechanism to recommend routes for electric buses, based on a deep neural network pre-trained by stacking denoising autoencoders and a multi-layer perceptron neural network. Deﬁnition 1: Bus Trip Demand. It is the number of people’s bus trips in an area during a speciﬁed time period in the future. For a speciﬁed time period T , the bus trip demand Qon the bus route r is the sum of bus trips q generated at the bus station s on the r, as formulated in Equation 1. where qis the bus trips generated at the the bus station s with index i. Srepresents the set of bus stations on the r. Deﬁnition 2: Transportation Carbon Emission. It is a measure of the total amount of carbon dioxide emissions, which are directly or indirectly caused by the trafﬁc. Deﬁnition 3: Top-Down Approach. It is a calculation method of transportation carbon emission, which is given by the 2006 IP CC guidelines [1]. This approach is formulated as: where W is the total amount of transportation carbon emission. i is a kind of vehicle types. j is a type of fossil fuel. Kis the carbon dioxide emission coefﬁcient of j type fossil fuel, which is consumed by the i type vehicles. nand lrepresent the number and transport mileage of the i type vehicles, which consume the j type fossil fuel. eis the carbon emission intensity per j type fuel and for the i type vehicles. Deﬁnition 4: Grid. A grid is an area of the city (e.g.,5km × 5km) [28]. The location of each grid is the geographic center of the grid. In the experiments, we divide the Zhuhai city into disjoint and uniform grids, and each grid g has the unique amount of transportation carbon emission g.W . Deﬁnition 5: Affecting Region. An affecting region γ is an area around the bus station. The location of each region γ.loc is the geographic coordinate of corresponding bus station. In the experiments, each affecting region is a square area with side length 0.5km (d = 0.5km) centered on the bus station, as shown in Fig. 2. On each bus route, we randomly select ﬁfteen affecting regions. Deﬁnition 6: Trajectory. A spatial trajectory is a sequence of time-ordered spatial points, τ: p→ p→ ... → p. Each point pconsists of a geographic location l and a timestamp t, p= (l, t). Deﬁnition 7: Point of Interest (POI). A POI is a speciﬁc point location on the earth, where people may ﬁnd useful or interesting. Each POI contains the name, category, location and other attributes. Our Clairvoyance system provides route recommendations by predicting the future transportation carbon emission and the future bus trip demand according to local conditions, respectively. As shown in Fig. 3, the framework of our system mainly consists of three kinds of data ﬂows, that is preprocessing, learning and inference data ﬂow. Preprocessing data ﬂow: In this data ﬂow, we screen out six raw datasets in the city, that is taxi trajectories, bus trajectories, bus IC card data, urban road data, POIs data and meteorological data. Given the bus IC card data, we then estimate the number of bus trips on each bus route during a speciﬁed time period and use it to label each bus route. Moreover, based on the taxi trajectories falling in the disjoint grids of the city, we utilize the Top-Down approach to calculate the amount of transportation carbon emission in each grid and regard it as a label for each grid. Learning data ﬂow: In this data ﬂow, we ﬁrst identify effective features in each grid and each affecting region. The features related to transportation carbon emission are extracted from the taxi trajectories, urban road data, POIs data and meteorological data in each grid. Moreover, the features related to bus trip demand are extracted from the bus trajectories, taxi trajectories, POIs and meteorological dataset in each affecting region. Then the features of each bus route are generated by incorporating the extracted features in each affecting regions on the route. See section IV for details. Furthermore, the feature datasets and the labels of each grid and bus route are fed into a Trip Demand Predictor and a Carbon Emission Predictor, respectively. The Trip Demand Predictor is a deep neural network to predict the future number of people’s bus trips on each bus route. The Carbon Emission Predictor a three-layer perceptron neural network to forecast the future transportation carbon emission in each grid. Detailed in section V. Inference data ﬂow: In this data ﬂow, we respectively extract features from each grid and affecting region. Subsequently, for each bus route, we feed the corresponding features into the trained Trip Demand Predictor to forecast the future number of bus trips. For each gird, we feed the extracted features into the trained Carbon Emission Predictor to predict the future amount of transportation carbon emission. Based on the two predicted scores, we utilize a greedy mechanism to recommend suitable bus routes for each electric bus that will leave. Detailed in section V. Problem Formulation Given a collection of bus routes R = {r, r, ..., r}, where each bus route r crosses a collection of grids G = {g, g, ..., g}, a bus trajectory dataset Tand a taxi trajectory dataset Tpassing R and G, the POIs located in G, and a meteorological dataset, we intend to recommend the suitable bus route r for each electric bus that will depart, based on the inference of r.BT D and g.W . The r.BT D is the future number of bus trips on the bus route r and g.W is the future amount of transportation carbon emission in the grid g. In this section, we deﬁne and discuss the features that are mined from the heterogeneous data sources in the city. The features related to bus trip demand are classiﬁed into three broad categories: mobility features which extract information about vehicle movements on road, geographic features which integrate information about the POI categories and spatial interaction between people and places, and meteorological features which exploit knowledge about the weather. Moreover, we identify ﬁve kinds of feature sets for the Carbon Emission Predictor [28]. The daily trip demand of people drives the movement of vehicles on the road. The movement information of vehicles contributes to the analysis of trip demand signiﬁcantly. However, the running state of vehicles on each road varies dramatically during the same time period. Even on the same road, the vehicle movement state is extremely diverse in different sections of the road. Accordingly, we divide the road into many small affecting regions and extract the unique movement information in each region. For each affecting region, we identify three types of features: trafﬁc volume, average passing speed and standard deviation of speed. Then we generate the mobility features of the road by aggregating all the identiﬁed features in each affecting region on the road. In the experiments, these features are calculated from the spatial trajectories of taxicabs in Zhuhai. Trafﬁc volume: N(γ, T ). The N(γ, T ) is the number of vehicles passing through the affecting region γ during a speciﬁed period of time T . Given all the spatial trajectories τgenerated by vehicles during the period of time T , we retrieve all the spatial points on each trajectory τ . If the spatial point p of one trajectory τ are observed in the affecting region γ (p.l ∈ γ, p.t ∈ T ), we believe that there is one vehicle passing through the affecting region γ. Even if the same vehicle may pass through the affecting region γ many times during the period of time T , we only record once. N(γ, T ) can be formulated as : N(γ, T ) = |{τ ∈ τ where p.l and p.t represents the geographic location and the timestamp of p respectively. Average passing speed: E(γ, T ). The E(γ, T ) is the average speed of vehicles passing through the affecting region γ during the period of time T . From all vehicle trajectories τ generated over the period of time T , we extract the sequences of points that fall in the affecting region γ. In the Equation 4, Sis the length of one sequence η, η ∈ τ. Accordingly, E(γ, T ) can be obtained by the Equation 5. E(γ, T ) =P|p.t − p.t| where the dist(p, p) is the traveling distance between any two adjacent points on each spatial trajectory τ . Standard deviation of speed: D(γ, T ). The D(γ, T ) denotes the discrete degree of the passing speed in the affecting region γ during the speciﬁed period of time T . D(γ, T ) =[E(γ, T ) − p.v]· |p.t − p.t|P|p.t − p.t|(6) where p is the point on the trajectories that falls in the affecting region γ during the period time T . p.v denotes the speed of vehicle at the location p.l. The geographic features describe the geographical distributions of POIs and the spatial interactions between people and places. POI distributions in a region indicate the regional economic and physical attributes, which have high correlation to vehicle trips in the region. Moreover, the spatial interaction states the movement of people between the places. For instance, the high trip needs are more often associated with the residential and industrial areas. Consequently, we identify several correlated features for each affecting region, that is entering ﬂow, leaving ﬂow and P OIf eature. Entering ﬂow: f(γ, T ). The f(γ, T ) is a feature to measure the ﬂow of people into the affecting region γ during the period of time T . Formally, we utilize a tuple (O, D) to represent the starting point and the end point of a trip. I indicates the total set of the tuple (O, D) of all trips, that are generated in the speciﬁc time T . f(γ, T ) = |{(O, D) ∈ I : O.l /∈ γ ∧ D.l ∈ γ ∧ O.t, D.t ∈ T }| where O.l and D.l represent their geographic locations. O.t and D.t denote their timestamps. Leaving ﬂow: f(γ, T ). The f(γ, T ) is a feature to calculate the ﬂow of people out of the affecting region γ in the speciﬁed time T . Similar to Equation 7, the leaving ﬂow f(γ, T ) out of area γ is formulated with Equation 8. f(γ, T ) = |{(O, D) ∈ I : O.l ∈ γ ∧ D.l /∈ γ ∧ O.t, D.t ∈ T }| POI feature: P (C, γ). The POI feature P (C, γ) is a set of θ(C, γ). Each θ(C, γ) denotes the number of POIs with category Cin the region γ. P (C, γ) and θ(C, γ) are deﬁned as: where Pdenotes the set of POIs with category C. ε.l is the location of the POI ε. The set C consists of all the POI categories, which are the most relevant to vehicle trip demand. For each category, we use the Pearson Correlation Coefﬁcient (P CC) to calculate its correlation with the vehicle trip demand, as displays in Fig. 4. For category C, its P CC value is calculated as: where ν is the vehicle trip demand generated in the region γ during a speciﬁed period of time. cov is the variance of θ(C, γ) and ν. σis the standard deviation of θ(C, γ). σis the standard deviation of ν. In the experiments, we select the top-8 POI categories that are most relevant to the vehicle trip demand in Zhuhai, C = Changes in meteorological conditions could have several potential consequences for people’s travel demand on a global and regional scale. Especially the weather changes have a signiﬁcant impact on the trafﬁc pattern, the purpose of the trip and the travel time [29]. For instance, the increased frequency of extreme precipitation events may substantially reduce the number of trips, particularly those for leisure purpose. Accordingly, we give special attention to the impact of weather on people’s trip in our study. We identify three features, that is highest temperature, lowest temperature, and weather condition. More speciﬁcally, the Fof each bus route can be formulated as follows 12: where F(r) represents the meteorological feature set of the bus route r. M is the set of weather condition categories. The weather conditions are classiﬁed into 20 categories, as displayed in the table I. fis the highest temperature. fis the lowest temperature. fis the weather condition. Fig. 5 displays the correlation matrix between the meteorological features and the bus trip demand, based on the meteorological data in Zhuhai from January to October, 2015. In this ﬁgure, each row and each column represent one kind of meteorological features. The tempHigh, tempLow and weather denote f, fand frespectively. As depicted in the legends, the descriptors and colors indicate the trip number ranges. We have eight trip number ranges, in which ‘0∼60’ is a range of 0 to 60 trips, and ‘720∼’ represents more than 720 trips. The plots in upper triangular portion indicate the variation of people’s bus trips under different meteorological features. Apparently, the bigger trip ranges often occur when the tempHigh and tempLow are both relatively low on the sunny or cloudy day. For instance, the plot on the ﬁrst row and the second column suggests the ‘480∼720’ always occur when the tempLow is less than 20C and tempHigh is less than 25C. The density curves of the trip ranges are manifested in the diagonal portion of the correlation matrix. As shown in the plot on the third row and the third column, the density curves vary noticeably with the weather conditions. Moreover, the plots in lower triangular portion state clearly the Pearson Correlation Coefﬁcient between the meteorological features. As an illustration, the value 0.95 in the plot on the second row and the ﬁrst column indicates the Pearson Correlation Coefﬁcient between thefand f. Based on the features extracted from urban big data in the previous part, our Clairvoyance system is trained to predict the number of people’s bus trips on each bus route and forecast the transportation carbon emission in each grid during a future period of time. Given the predicted information, we propose a greedy strategy to recommend suitable bus routes for electric buses that will depart. Two main parts of our Clairvoyance system are Trip Demand Predictor and Carbon Emission Predictor. As presented in Algorithm 1, the Trip Demand Predictor forecasts the future number of people’s bus trips (BTD) on each bus route, utilizing a deep neural network pre-trained by stacking four layers of denoising autoencoders (SDAE-4). The Carbon Emission Predictor predicts the future transportation carbon emission (TCE) in each grid, using a three-layer perceptron neural network (PNN-3). Moreover, we train them based on the datasets of (F(r), µ) and (F(g), ν), respectively. F(r) is a feature set of F, F, and Fon the bus route r, and µis the corresponding BTD value. F (g) and νare another feature set and the corresponding TCE value, which are described in detail in [28]. Subsequently, given the two trained predictors, we forecast separately the BTD values on each bus route and the TCE values in each grid throughout the city within a future period of time. Algorithm 1 Two-task Forecasting Input: A training dataset Dof (F (r),µ), where F (r) is a feature set of F, F, and Fand µis the BTD value on the route r; A training dataset Dof (F (g),ν), where the feature set F (g) and the TCE value νare extracted in the grid g; A speciﬁed period of time interval T . Output: The set µof BTD values on all bus routes; the set νof TCE values in all grids. pre-trained by stacking denoising autoencoders. ← using the trained SDAE-4 to predict BTD values {µ, µ, ..., µ} on all bus routes R in the future period of time T , R = {r, r, ..., r}. ← using the trained PNN-3 to predict TCE values {ν, ν, ..., ν} in all grids G in the future period of time T, G = {g, g, ..., g}. return µand ν As depicted in Fig. 6, the Trip Demand Predictor is composed of four main parts: input, four layers of denoising autoencoders(SDAE), logistic regression (LR) layer, and output. The initial input vector x consists of F, F, F and the corresponding BTD label. The four layers of SDAE build a deep neural network architecture by feeding the latent representation found on the layer below as input to the current layer. In each layer of SDAE, the black solid and broken arrows represent the learning process, and the blue broken arrows represent the inference process. In the LR layer, a multi-class logistic regression method is used to generate the predicted BTD values. The input of LR layer is the output of the last level SDAE. The training of our deep neural network SDAE-4 includes two stages, that is unsupervised pre-training and supervised ﬁne-tuning. The unsupervised pre-training of the deep network is done by the four layers of SDAE. Each denoising autoencoder is trained to minimize the input reconstruction error. As shown in Fig. 6, the ﬁrst level SDAE takes an input vector x. Subsequently, the initial input x is partially destroyed to get a corrupted input ˜x, using the means of a stochastic mapping ˜x ∼ q(˜x|x). In the experiments, in order to obtain the corrupted input, we randomly assign a ﬁxed number of elements in each input vector to zero. Then, the corrupted input ˜x is mapped to a hidden representation x, using the sigmoid non-linearity: where α denotes the parameter set of f, α = {W, b}. W is a d×d weight matrix. b is an offset vector of dimensionality d. s is the sigmoid function, which can be formulated as follows: where s(x),s(x), and s(x) are the elements of the input vector x. When the hidden representation xis learnt, we reconstruct the initial input x by the following Equation 15, to generate produce reconstruction x. where αdenotes the parameter set of g, α= {W, b}. The weight matrix Wis the transpose of the matrix W, W= W. Accordingly, for each training x, we can get the corresponding xand reconstruction x. Meanwhile, in order to minimize the average reconstruction error, the parameters of denoising autoencoder are optimized by the following Equation 16. where n is the number of input samples. In the experiments, we measure the reconstruction errors by mean squared error. The mean squared error can be formulated as follows: After the ﬁrst-level SDAE is trained, its mapping function fwill be used on clean inputs, as represented by broken blue arrows. Utilizing the learnt function f, we map the uncorrupted input x to produce the hidden representation y, which will serve as clean input to the second-level SDAE. Subsequently, the remaining layers of SDAE are trained, similar to the process in the ﬁrst-level SDAE. The supervised ﬁne-tuning of SDAE-4 will be done, after the four layers of SDAE are trained. In the LR layer, we generate the probability that the predicted Y is class c, by the formula: P (Y = c|x, W, b) = softmax(Wx+ b) where k denotes the number of categories. x, W, and b are separately the input, weight matrix, and bias vector of the multi-class logistic regression method in the LR layer, given the input x of SDAE-4. Subsequently, the output y of the LR layer is the class whose probability is maximal, speciﬁcally: Moreover, the loss function of our SDAE-4 is the negative log-likelihood (NLL), which is formulated as: NLL(β, D) = −log(P (Y = y|x, β)),(20) where β is the set of all parameters in the SDAE-4. D denotes the input dataset. yindicates the corresponding BTD label. To optimize our SDAE-4, stochastic gradient descent is applied to minimize NLL. Our aim is to recommend k routes, so that the transport of electric buses on these routes will meet people’s trips needs and cut transportation carbon emission to the maximum extent. Given the pre-trained SDAE-4, we obtain a set of the BTD values µon all bus routes R and a set of the TCE values νin all grids G during a period of time T in the future. Meanwhile, we calculate the TCE value ϑof the bus route r, by adding the TCE values in the all grids on the route r. Subsequently, we normalize the µand ϑ, as the following: where µand µare the maximum and minimum values in µ, µ= {µ, µ, ..., µ}. ϑand ϑare the maximum and minimum values in ϑ, ϑ= {ϑ, ϑ, ..., ϑ}. µis the BTD value on the bus route rin a future period of time T . ϑis the future total TCE value of the grids that the bus route rcrosses. Accordingly, when the value of µplus ϑ is larger enough, people’s bus trips and transportation carbon emissions will peak in the area that the bus route r crosses. Based on the future peak information, we recommend k bus routes for each electric bus that will depart, speciﬁcally: O= {r: Max(µ+ ϑ), µ∈ µ, ϑ∈ ϑ}.(23) where Maxmeans obtaining the top-k maximum value. In this section, we will introduce the source datasets used in the experiments. Several advanced and baseline methods are selected to compare with our proposed methods. Subsequently, we present experimental results showing the performance of our proposed methods and baseline methods. In the experiments, we use ﬁve real world datasets collected in Zhuhai, China. The statistics of datasets are displayed in Table II. 1) Taxi trajectories: The dataset was generated by over 3, 000 taxicabs in Zhuhai from July 1st to October 14th, 2015. Speciﬁcally, each GPS record in the taxi trajectory dataset is produced every 10 seconds and consists of seven parts, that is taxi ID, record time, latitude, longitude, speed, direction and passenger status. Furthermore, in one day all the taxicabs can drive a mileage of about 0.116 million kilometers and generate over 38 million records. More than 4.5 million vehicle trips will occur one day, and the trips of taxicabs and small passenger cars account for about 31.8%, in accordance with the annual report of the 2014 trafﬁc development in Zhuhai. Accordingly, this source dataset is large enough to reﬂect local trafﬁc patterns there [22]. 2) Bus trajectories: The dataset was produced by about 1, 540 buses in Zhuhai from July 1st to October 14th, 2015. More speciﬁcally, each record in the bus trajectory dataset is composed of eight main components, that is bus ID, record time, latitude, longitude, speed, last position, current bus stop, and route name. When each bus passes any bus stop on the routes, two records will be generated. Moreover, there are about 168 bus routes in Zhuhai. 3) IC card data: The dataset was produced by IC cardholders on all buses in Zhuhai from January 1st to October 31st, 2015. Each record in the IC card dataset consists of four main parts, that is bus route ID, bus ID, consumption date, and card ID. Moreover, there are more than 600 thousand user consumption records generated in one day in Zhuhai. 4) POIs: The dataset was extracted from the Auto Navi MAP in Zhuhai. Speciﬁcally, each record in the POI dataset mainly contains ﬁve parts, that is POI ID, name, type, latitude, and longitude. In addition, according to the type of each POI, the whole POIs can be divided into twelve categories, and each category contains different number of records, as displayed in Fig. 7. 5) Meteorological data: The dataset was collected from National Meteorological Center of China Meteorological Administration [31] in Zhuhai from January 1st to October 31st, 2015. Each record in this dataset is composed of three main messages, that is highest temperature, lowest temperature, and weather condition. We compare our SDAE-4 with ﬁve baselines, that is logistic regression, support vector machine, restricted Boltzmann machine, deep belief networks, artiﬁcial neural network. Meanwhile, we compare our 3-layer perceptron neural network with ﬁve other baselines [28]. 1) Logistic Regression: LR is a linear classiﬁer. Moreover, LR is often employed in an regression analysis to describe the relationship between the categorical response variable and one or more explanatory variables [32] [33] . Mathematically, the LR model can be formulated by the Equation 18 and 19, which are parametrized by a initial weight matrix and a bias vector. 2) Support Vector Machine: SVM [34] is a supervised learning model. In this baseline, we apply an SVM with RBF kernel (SVM) for classiﬁcation and regression analysis. Furthermore, the radial basis function (RBF) kernel on two sample vectors xand xcan be formulated as: where k x− xkdenotes the the squared Euclidean distance between xand x. σ is a free parameter. 3) Restricted Boltzmann Machine: RBM is a variant of Boltzmann machines [35] [36]. In this baseline, we make use of RBM to learn a probability distribution P , based on our training dataset, speciﬁcally: where v and h denote the visible vector and hidden vector, respectively. a and b separately represent the offset vectors of the visible and hidden layers. aand bindicate the transpose of a and b. Wis a matrix of weights connecting hidden and visible units in layer m. 4) Artiﬁcial Neural Network: ANN [37] is designed as a onehidden-layer Multi-Layer Perceptron (MLP) in the experiment. Mathematically, the single-hidden-layer MLP is formulated as: f(x) = softmax(Wa+ b)(27) = softmax(W(s(Wx + b)) + b), where adenotes the output vector of the hidden layer. W and Ware separately matrices of weights connecting input and hidden units, and connecting hidden and output units. b and brespectively represent the bias vectors for hidden and output units. s represents the logistic sigmoid function. 5) Deep Belief Networks: DBN is a deep network model pretrained by stacking RBMs [38] [39]. Furthermore, DBN trys to learn the joint probability distribution between the ` hidden vector hand observed vector x, speciﬁcally: P (x, h, · · · , h) = (P (h| h))P (h, h),(28) where P (h| h) denotes a conditional distribution for the visible units given the hidden units of the RBM at level k + 1. P (h, h) represents the visible-hidden joint distribution in the top-level RBM. C. Results 1) Evaluating with the fusion of different features: In the experiments, we ﬁrst justify the effectiveness of the extracted features for the Trip Demand Predictor. Speciﬁcally, through the combination of F, F, and Fin different ways, we obtain seven kinds of feature sets, that is F, F, F, F, F, F, and F. F, F, F, and Frespectively are the fusions of Fand F, Fand F, Fand F, and all the feature sets. Furthermore, utilizing the proposed SDAE-4 algorithm and other baseline methods, we experiment with the seven feature sets to predict the number of people’s bus trips (BTD) at different periods in the future. The prediction accuracy of these methods is displayed in the Fig. 8. In this ﬁgure, the ﬁrst six sub-ﬁgures describe the prediction accuracy of people’s trips on the bus routes in the next one to six hours. In the ﬁrst six sub-ﬁgures, the x-axis represents the seven feature sets. The y-axis indicates the prediction accuracy of BTD in the future period of time T . As shown in the sub-ﬁgure 8(g), each prediction method is represented by the unique line and color. The DBN-2 is a two-hidden-layer DBN. Given the results of different methods, the prediction accuracy of people’s bus trips varies dramatically with the change of feature sets. By fusing all the F, F, and F, we can always achieve a dramatically improvement on the accuracy of the SDAE-4 and other baselines at the different time intervals T . Moreover, whether based on individual feature set or their combinations, our proposed SDAE-4 outperforms other baselines at each future time interval in most instances. Consequently, these studies further demonstrate that the feature sets we extracted are considerably useful for predicting BTD and are noticeably effective for improving the prediction accuracy. 2) Evaluating with different number of layers and different number of hidden units per layer: In this section, we mainly study the inﬂuence of the number of layers and the number of hidden units per layer on the prediction accuracy. More speciﬁcally, we aim to examine the behaviors of the SDAE and the baseline DBN on all the feature sets, as modifying the number of hidden layers and the number of neurons per layer. Fig. 9 displays the variation in the prediction accuracy of SDAE and DBN, as we increase the number of hidden layers from 1 to 5 and the number of hidden units per layer from 50 to 200. With the change of conditions, the prediction accuracy of the DBN varies extremely, while the prediction accuracy of the SDAE is relatively stable. Furthermore, compared with DBN, the advantages of SDAE become even more obvious with the increase of number of layers and number of hidden units. Additionally, for all the feature sets, the SDAE with 4 hidden layers and 100 neurons per layer appears to perform better than other SDAE variants and all DBN variants. 3) Evaluating with different time spans: In previous experiments, the feature sets related to people’s bus trips are extracted during a speciﬁed period of time. Here we evaluate how the length of time span affects the prediction performance of the proposed SDAE-4 and other baselines. In the experiments, based on all the corresponding feature sets, we change the time span from 1 to 12 hours and measure the prediction precision of the proposed SDAE-4 and other baselines for each time span, as displayed in Fig. 10. The results indicate that the SDAE-4, DBN-2, RBM, SVMand LR all can obtain better prediction accuracy of people’s bus trips for the next one hour. In addition, for all the methods except ANN, in general their prediction accuracy will becomes poor with the increase of time span. Moreover, in most cases, our proposed SDAE-4 is always superior to other baselines for all the time spans from 1 to 12 hours and has a stronger robustness to predict people’s bus trips in the future. 4) Evaluation on route planning efﬁciency: In this section, we mainly study the efﬁciency of our route planning system in reducing carbon emissions. Our experiments are conducted in Zhuhai, where the proportion of electric buses is relatively small in all buses and each electric bus is allocated to a ﬁxed route. Moreover, for traditional gasoline buses, the energy consumption is about 38 liters per 100 kilometers, and the carbon dioxide emission coefﬁcient is about 2.73 kilograms per liters. Based on the experimental results, the efﬁciency of our designed system is mainly manifested in two aspects: 1) cutting the peak of carbon emissions in the city; 2) improving the utilization rate of electric buses. Given the route recommendation mechanism for electric buses, the recommended routes always cross the place where people’s trip need will be considerably large and the amount of transportation carbon emissions would reach the higher levels. In the place that any electric bus goes through, the peak of carbon emissions will be reduced by 0.90l, where the l is the transport mileage traveled by the electric bus across each area. 5) Overall results: In our study the experimental data are divided into three parts: training data of 234, 192 records extracted from 82 days, validation data of 28, 560 records extracted from 10 days, and test data 39, 984 records extracted from 14 days. Meanwhile, given the combined feature sets F, we utilize the proposed SDAE-4 and ﬁve baselines to predict the BTD on the bus routes in the next one hour. Speciﬁcally, our proposed SDAE-4 has four hidden layers, and each hidden layer has 100 neurons. The baseline DBN-2 has two hidden layers, and each hidden layer has 100 neurons. As displayed in Fig. 11, SDAE-4 consistently outperforms the baselines. The prediction accuracy of SDAE-4 being above 0.932. Furthermore, in the experiments, the last layer of SDAE-4 and DBN-2 are both the LR layers. Compared with the SDAE-4 and DBN-2, the prediction accuracy of the LR method in Fig. 11 is relatively poor, that being about 0.757. Accordingly, the prediction performance of LR in last layer of SDAE-4 and DBN-2 beneﬁt signiﬁcantly from using the higher level representations. These higher level representations learnt by stacking denoising autoencoders or by stacking restricted Boltzmann machines signiﬁcantly improve the performance of SDAE-4 and DBN-2. Moreover, given the proposed SDAE-4, Fig. 12 clearly illustrates the distribution of the predicted BTD in two case: on the same route in an hour after 11 a.m. every day in September 2015 and on the different routes in the same hour of September 19, 2015. For any bus route in Fig. 12(a) such as Route1, Route2, Route3 or Route4, the BTD changes noticeably in the hour after 11 a.m. every day in September. Meanwhile, as shown in Fig. 12(b), even in the same period of a day, the predicted BTD are always varies with the bus route. For instance, during the period between 6 p.m. and 7 p.m., the distributions of BTD are considerably diverse on the selected ten routes (R1, R2, · · · , R10). The results indicate that the proposed SDAE-4 can well learn the speciﬁc spatial-temporal characteristics of each bus route and accurately predict the BTD under local conditions. In this paper, we devise a Clairvoyance system to solve a route planning problem for electric buses that will depart in an ideal state, based on the extracted spatial-temporal and semantic features about vehicle movement, human mobility, geographic location, and weather. Speciﬁcally, the proposed Clairvoyance leverages the SDAE-4 network to predict the future number of people’s bus trips on each bus route and utilizes our three-layer perceptron network [28] to forecast the future transportation carbon emission in each region throughout the city. Furthermore, given the future information of people’s bus trips and carbon emissions, a greedy strategy is introduced to recommend top-k bus routes for each electric bus that will depart. Our experiments are carried out on the real-world urban big data in Zhuhai, China. The results indicate that the extracted features are considerably effective for improving the performance of the proposed two networks. Depending on these features, our networks both outperform the other well-known baselines, such as SVM, RBN, ANN and DBN. Moreover, we also quantitatively evaluate the efﬁciency of route planning in terms of reducing carbon emissions. Clairvoyance provides a novel deep learning-based strategy to assign suitable routes for electric buses, based on the heterogeneous urban big data. The available urban datasets play a crucial role in our system. Accordingly, the limitation of Clairvoyance is that 1) the extracted features are from limited available urban datasets; 2) the Clairvoyance does not consider the charging problem of electric buses. It is mainly based on a prior hypothesis that each electric bus that will depart is in an ideal battery state. In the future, we will ﬁrst test the robustness of our system on diverse datasets extracted from different cities and study which datasets determine our system’s performance. Second, this paper does not consider the impact of the electric bus charging problem, which needs further study. Third, we will explore the impact of urban emergency events on electric bus dispatching, in order to provide the necessary emergency strategy to our system. The work is supported by NSFC (No.61472149), the Fundamental Research Funds for the Central Universities (2015QN67) and the National 863 Hi-Tech Research and Development Program under grant (2015AA01A203), JSPS KAKENHI Grant Number 16K00117, 15K15976 and KDDI Foundation.